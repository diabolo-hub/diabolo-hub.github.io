<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>k8s pod启动命令配置和dockerfile启动命令配置执行顺序</title>
    <url>/2022/05/09/depth-kubernetes-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3-k8s-pod%E5%90%AF%E5%8A%A8%E5%91%BD%E4%BB%A4%E9%85%8D%E7%BD%AE%E5%92%8Cdockerfile%E5%90%AF%E5%8A%A8%E5%91%BD%E4%BB%A4%E9%85%8D%E7%BD%AE%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="k8s-pod启动命令配置和dockerfile启动命令配置执行顺序"><a href="#k8s-pod启动命令配置和dockerfile启动命令配置执行顺序" class="headerlink" title="k8s pod启动命令配置和dockerfile启动命令配置执行顺序"></a>k8s pod启动命令配置和dockerfile启动命令配置执行顺序</h1><p>要知道，linux的指令是分为命令 和参数的，比如ls -l，ls 是命令，-l是参数，command是命令，args是参数，k8s的command和args其实是为了覆盖Fockerfile的ENTERPOINT功能</p>
<ul>
<li>如果command和args都没写，使用Dockerfile配置</li>
<li>如果command写了， 那么Dockerfile的默认ENTRYPOINT配置会被忽略，执行command</li>
<li>如果command没写，args写了， 那么Dockerfile的默认ENTRYPOINT配置会执行，使用k8s的args参数</li>
<li>如果command和args都写了， 那么Dockerfile的默认ENTRYPOINT配置会被忽略，执行command并追加上args参数</li>
</ul>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>git merge过程操作</title>
    <url>/2018/10/05/git-%E7%AC%94%E8%AE%B0-git-merge%E8%BF%87%E7%A8%8B%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>例如： master为上次更新代码，Dev为上次master代码更新之前的代码，且master更新之后dev也有代码改动。<br>现需要测试dev，将dev上线且合并到master。<br>首先需要将上次上线的master合并到当前dev中。</p>
<h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><ol>
<li>在gitLab中使用merge： master merge into dev</li>
</ol>
<p>本地操作：</p>
<ol>
<li><p>先将本地master更新到最新<br>git checkout master<br>git pull</p>
</li>
<li><p>将本地dev更新到最新<br>git checkout dev<br>git pull</p>
</li>
<li><p>合并<br>git merge –no-ff master<br>从 master 分支 合并到当前分支</p>
</li>
</ol>
<p>–no-ff模式，普通合并，有历史，看得出做过合并<br>fast forward模式，快速合并，看不出做过合并<br>通常，合并分支时，Git尽可能用 fast forward 模式，但这种模式，删除分支后，会丢掉分支信息。</p>
<ol>
<li><p>查看信息<br>git status</p>
</li>
<li><p>处理差异<br>git diff | 使用ideal 处理</p>
</li>
<li><p>提交<br>git commit<br>git push</p>
</li>
</ol>
<h1 id="git-pull拉不下数据处理"><a href="#git-pull拉不下数据处理" class="headerlink" title="git pull拉不下数据处理"></a>git pull拉不下数据处理</h1><p>git fetch origin</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>本地与远程分支的关联和取消</title>
    <url>/2018/06/15/git-%E7%AC%94%E8%AE%B0-git%E4%B8%AD%E6%9C%AC%E5%9C%B0%E4%B8%8E%E8%BF%9C%E7%A8%8B%E5%BA%93%E7%9A%84%E5%85%B3%E8%81%94%E4%B8%8E%E5%8F%96%E6%B6%88/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="关联"><a href="#关联" class="headerlink" title="关联"></a>关联</h1><p>git remote add origin git@git/xxx/yyy.git</p>
<h1 id="取消"><a href="#取消" class="headerlink" title="取消"></a>取消</h1><p>git remote remove origin</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>业务架构图例</title>
    <url>/2022/11/01/depth-architecture-20221101-%E4%B8%9A%E5%8A%A1%E6%9E%B6%E6%9E%84%E5%9B%BE%E4%BE%8B/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="业务架构图-："><a href="#业务架构图-：" class="headerlink" title="业务架构图 ："></a>业务架构图 ：</h1><p>描述系统对用户提供了什么业务功能。用户视角或业务视角</p>
<h1 id="【画图技巧】"><a href="#【画图技巧】" class="headerlink" title="【画图技巧】"></a>【画图技巧】</h1><ol>
<li>通过不同颜色来标识业务状态：比如说哪些业务发展状态好，哪些问题比较多，哪些比较稳定，哪些竞争比较激烈等。</li>
<li>业务分组管理：将类似的业务放在一个分组里面展现，用虚线框或者相同背景将其标识出来。</li>
<li>区块对齐：为了美观，可以改变不同区块的长短大小进行对齐，让整体看起来更美观。</li>
</ol>
<h1 id="图例"><a href="#图例" class="headerlink" title="图例"></a>图例</h1><h2 id="01"><a href="#01" class="headerlink" title="01"></a>01</h2><p><img src="temp-01.png" alt=""></p>
<h2 id="02"><a href="#02" class="headerlink" title="02"></a>02</h2><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>architecture</category>
      </categories>
      <tags>
        <tag>architecture</tag>
      </tags>
  </entry>
  <entry>
    <title>架构图例汇总</title>
    <url>/2022/11/01/depth-architecture-20221101-%E6%9E%B6%E6%9E%84%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="各个架构图区别"><a href="#各个架构图区别" class="headerlink" title="各个架构图区别"></a>各个架构图区别</h1><p><img src="temp-01.png" alt=""></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>architecture</category>
      </categories>
      <tags>
        <tag>architecture</tag>
      </tags>
  </entry>
  <entry>
    <title>应用架构图例</title>
    <url>/2022/11/01/depth-architecture-20221101-%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84%E5%9B%BE%E4%BE%8B/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="应用架构图例"><a href="#应用架构图例" class="headerlink" title="应用架构图例"></a>应用架构图例</h1><p>##【定义】描述后端系统由哪些应用组成，一个应用就是一个可部署发布运行的程序，它是项目开发过程中，开发测试运维团队协作的基础。<br>以应用为基础</p>
<h2 id="【使用场景】项目开发、测试。运维部署发布。子域架构设计。"><a href="#【使用场景】项目开发、测试。运维部署发布。子域架构设计。" class="headerlink" title="【使用场景】项目开发、测试。运维部署发布。子域架构设计。"></a>【使用场景】项目开发、测试。运维部署发布。子域架构设计。</h2><p>##【画图技巧】通过不同颜色来标识不同角色。通过连接线来表示关系。复杂系统分域来画。</p>
<h1 id="图例"><a href="#图例" class="headerlink" title="图例"></a>图例</h1><h2 id="01-如果系统比较简单，那么基本上应用架构和系统架构是等价的"><a href="#01-如果系统比较简单，那么基本上应用架构和系统架构是等价的" class="headerlink" title="01 如果系统比较简单，那么基本上应用架构和系统架构是等价的"></a>01 如果系统比较简单，那么基本上应用架构和系统架构是等价的</h2><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>architecture</category>
      </categories>
      <tags>
        <tag>architecture</tag>
      </tags>
  </entry>
  <entry>
    <title>系统架构图例</title>
    <url>/2022/11/01/depth-architecture-20221101-%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E5%9B%BE%E4%BE%8B/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<p>-<strong>程序员画图参考——流程图、时序图、算法原理图和系统架构图:<a href="https://www.jianshu.com/p/9cf73222d9a2" target="_blank" rel="noopener">https://www.jianshu.com/p/9cf73222d9a2</a></strong><br>-<strong>如何画出优秀的软件系统架构图：<a href="https://www.jianshu.com/p/ca0174d9ceb1" target="_blank" rel="noopener">https://www.jianshu.com/p/ca0174d9ceb1</a></strong></p>
<hr>
<h1 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h1><p>通过不同颜色来标识不同角色。通过连接线来表示关系。逻辑分组。<br>以角色为基础</p>
<h1 id="图例"><a href="#图例" class="headerlink" title="图例"></a>图例</h1><h2 id="01"><a href="#01" class="headerlink" title="01"></a>01</h2><p><img src="temp-01.png" alt=""></p>
<h2 id="02-简单案例：MongoDB-Sharding-的系统架构图"><a href="#02-简单案例：MongoDB-Sharding-的系统架构图" class="headerlink" title="02 简单案例：MongoDB Sharding 的系统架构图"></a>02 简单案例：MongoDB Sharding 的系统架构图</h2><p><img src="temp-02.png" alt=""></p>
<h2 id="03-复杂案例：系统架构图-Role"><a href="#03-复杂案例：系统架构图-Role" class="headerlink" title="03 复杂案例：系统架构图-Role"></a>03 复杂案例：系统架构图-Role</h2><p><img src="temp-03.png" alt=""></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>architecture</category>
      </categories>
      <tags>
        <tag>architecture</tag>
      </tags>
  </entry>
  <entry>
    <title>部署架构图例</title>
    <url>/2022/11/01/depth-architecture-20221101-%E9%83%A8%E7%BD%B2%E6%9E%B6%E6%9E%84%E5%9B%BE%E4%BE%8B/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="部署架构图"><a href="#部署架构图" class="headerlink" title="部署架构图"></a>部署架构图</h1><p>##【定义】描述后端系统具体是如何部署的，主要包含机房信息、网络信息和硬件信息等。</p>
<p>##【使用场景】总体架构设计。运维规划和优化。</p>
<h2 id="【画图技巧】用图标代替区块，这样看起来更加美观和容易理解。"><a href="#【画图技巧】用图标代替区块，这样看起来更加美观和容易理解。" class="headerlink" title="【画图技巧】用图标代替区块，这样看起来更加美观和容易理解。"></a>【画图技巧】用图标代替区块，这样看起来更加美观和容易理解。</h2><h1 id="图例"><a href="#图例" class="headerlink" title="图例"></a>图例</h1><h2 id="01-简单支付系统部署架构图"><a href="#01-简单支付系统部署架构图" class="headerlink" title="01 简单支付系统部署架构图"></a>01 简单支付系统部署架构图</h2><p><img src="temp-01.png" alt=""></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>architecture</category>
      </categories>
      <tags>
        <tag>architecture</tag>
      </tags>
  </entry>
  <entry>
    <title>mac常用应用</title>
    <url>/2022/10/31/mac-20221031-mac%E5%B8%B8%E7%94%A8%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="mac"><a href="#mac" class="headerlink" title="mac"></a>mac</h1><p>runCat<br>battery buddy<br>腾讯柠檬        类似360，千万不能下载<br>manget<br>keka     解压缩软件<br>downie    在线视频下载工具<br>Fliqlo<br>Parsec    延时摄影视频制作应用<br>LanDrop<br>Parallels Desktop<br>YesPlayMusic<br>落雪音乐<br>AnyGo     在iPhone / iPad上轻松模拟GPS位置<br>AnyDrop  文本文件处理动作集成软件  类似shortCut bar<br>Permute  视频音频转换工具<br>Alfred<br>Backgrouond Music<br>Final Cut Pro        Mac OS视频剪辑软件<br>Speedtest     网络速度测试应用</p>
<p>fcpx    FcpxFullAccess出品的插件合集，包含大量个文字标题、视频特效、视频转场、3D LUTS调色预设等</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>mac</category>
      </categories>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>架构基础</title>
    <url>/2022/10/28/depth-architecture-20221028-%E6%9E%B6%E6%9E%84%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="架构高并发和高可用"><a href="#架构高并发和高可用" class="headerlink" title="架构高并发和高可用"></a>架构高并发和高可用</h1><ol>
<li>高并发实现的三板斧：缓存，限流和降级</li>
<li>架构之高并发：限流</li>
<li>架构之高并发：降级和熔断<br> 在高并发环境下，服务之间的依赖关系导致调用失败，解决的方式通常是: 限流-&gt;熔断-&gt;隔离-&gt;降级, 其目的是防止雪崩效应。</li>
<li>架构之高可用：负载均衡</li>
<li>架构之高可用：容灾备份,故障转移</li>
</ol>
<h1 id="软件架构"><a href="#软件架构" class="headerlink" title="软件架构"></a>软件架构</h1><p>软件架构的核心价值，即是控制系统的复杂性，将核心业务逻辑和技术细节的分离与解耦</p>
<h2 id="复杂性的来源可能是"><a href="#复杂性的来源可能是" class="headerlink" title="复杂性的来源可能是"></a>复杂性的来源可能是</h2><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>architecture</category>
      </categories>
      <tags>
        <tag>architecture</tag>
      </tags>
  </entry>
  <entry>
    <title>软件架构概念</title>
    <url>/2022/10/28/depth-architecture-20221028-%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>软件架构概念: <a href="https://www.jianshu.com/p/7b82fb03ca34" target="_blank" rel="noopener">https://www.jianshu.com/p/7b82fb03ca34</a></p>
<h2 id="组成派："><a href="#组成派：" class="headerlink" title="组成派："></a>组成派：</h2><p>架构 = 组件 + 交互。</p>
<h2 id="决策派"><a href="#决策派" class="headerlink" title="决策派"></a>决策派</h2><p>架构属于设计，但设计不一定属于架构。架构设计的决策，将对整体质量、并行开发、适应变化等方面有着重大影响，例如：</p>
<ul>
<li>模块如何划分</li>
<li>每个模块的职责如何</li>
<li>每个模块的接口如何定义</li>
<li>模块间采用何种交互机制</li>
<li>开发技术如何选型</li>
<li>如何满足约束和质量属性的需求</li>
<li>如何适应可能发生的变化</li>
</ul>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>architecture</category>
      </categories>
      <tags>
        <tag>architecture</tag>
      </tags>
  </entry>
  <entry>
    <title>mac-20221027-Axure-RP9授权</title>
    <url>/2022/10/27/mac-20221027-Axure-RP9%E6%8E%88%E6%9D%83/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Axure-RP-9-授权激活"><a href="#Axure-RP-9-授权激活" class="headerlink" title="Axure RP 9 授权激活"></a>Axure RP 9 授权激活</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">注册码：</span><br><span class="line">———— 复制下面的部分 ———</span><br><span class="line">注意！断网下破解注册！！断网！断网！断网！</span><br><span class="line"></span><br><span class="line">专业版被授权人：mac</span><br><span class="line">授权密钥：qYWkTRypXCKiewAx2c49VBnuJnLAGoKMXg8VRHo1g0BwlALMVsZZ8&#x2F;yi&#x2F;7cgau4&#x2F;</span><br><span class="line"></span><br><span class="line">团队版被授权人：mac team</span><br><span class="line">授权密钥：J1usC9kP8aeVW7oulGHnP8INinN2LisMVJXofnJu5G+EEwKa3DiLasZNU&#x2F;3rDSyf</span><br><span class="line"></span><br><span class="line">企业版被授权人：mace</span><br><span class="line">授权密钥：+HKfNew1rRHhqnVf670oDWQxmPX87wSllN2nxMi9NnoGc3qzt4wcxwIS7g7mXB6D</span><br><span class="line"></span><br><span class="line">——— —复制上面的部分 ———</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Licensee:</span><br><span class="line">macwk.com</span><br><span class="line"></span><br><span class="line">Key:</span><br><span class="line">Cpvm3Fe&#x2F;TOnZY2agskB3AxZe8a16QrW+NL2CUY9v9F+jyaOkv2suqshcVC81ZFha</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>RocketMQ汇总01</title>
    <url>/2022/10/27/%E5%88%86%E5%B8%83%E5%BC%8F-%E5%88%86%E5%B8%83%E5%BC%8F%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97-Rocket-20221027-RocketMQ%E6%B1%87%E6%80%BB01/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote class="pullquote mindmap mindmap-md"><ul>
<li>知识图谱<ul>
<li>Scala</li>
<li>Python</li>
<li>java<ul>
<li>jvm</li>
</ul>
</li>
<li>消息队列<ul>
<li>kafka</li>
<li>pulsar</li>
</ul>
</li>
</ul>
</li>
</ul>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>消息队列</category>
        <category>rocket</category>
      </categories>
      <tags>
        <tag>MQ</tag>
      </tags>
  </entry>
  <entry>
    <title>ideal-pojie-20221024-ideal-mybatis-log破解</title>
    <url>/2022/10/24/ideal-pojie-20221024-ideal-mybatis-log%E7%A0%B4%E8%A7%A3/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="破解版下载地址"><a href="#破解版下载地址" class="headerlink" title="破解版下载地址"></a>破解版下载地址</h1><p><a href="https://www.yuque.com/docs/share/23400c69-25aa-4eff-a68c-3d153a0d77c7" target="_blank" rel="noopener">https://www.yuque.com/docs/share/23400c69-25aa-4eff-a68c-3d153a0d77c7</a></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>ideal-pojie-20221024-ideal破解激活码</title>
    <url>/2022/10/24/ideal-pojie-20221024-ideal%E7%A0%B4%E8%A7%A3%E6%BF%80%E6%B4%BB%E7%A0%81/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="激活码"><a href="#激活码" class="headerlink" title="激活码"></a>激活码</h1><p><a href="https://www.yht7.com/news/196641" target="_blank" rel="noopener">https://www.yht7.com/news/196641</a><br><a href="https://www.jb51.net/article/195895.htm" target="_blank" rel="noopener">https://www.jb51.net/article/195895.htm</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0YQJ1128OW-eyJsaWNlbnNlSWQiOiIwWVFKMTEyOE9XIiwibGljZW5zZWVOYW1lIjoi5rC45LmF5r+A5rS7IHd3d8K3YWppaHVvwrdjb20iLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJEUE4iLCJwYWlkVXBUbyI6IjIwMjEtMTEtMjIiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDIxLTExLTIyIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJQUyIsInBhaWRVcFRvIjoiMjAyMS0xMS0yMiIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMjEtMTEtMjIiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTQyIsInBhaWRVcFRvIjoiMjAyMS0xMS0yMiIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJHTyIsInBhaWRVcFRvIjoiMjAyMS0xMS0yMiIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwMjEtMTEtMjIiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTRiIsInBhaWRVcFRvIjoiMjAyMS0xMS0yMiIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQQyIsInBhaWRVcFRvIjoiMjAyMS0xMS0yMiIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMjEtMTEtMjIiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkNMIiwicGFpZFVwVG8iOiIyMDIxLTExLTIyIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJXUyIsInBhaWRVcFRvIjoiMjAyMS0xMS0yMiIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUkQiLCJwYWlkVXBUbyI6IjIwMjEtMTEtMjIiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTMCIsInBhaWRVcFRvIjoiMjAyMS0xMS0yMiIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMjEtMTEtMjIiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkFDIiwicGFpZFVwVG8iOiIyMDIxLTExLTIyIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSU1YiLCJwYWlkVXBUbyI6IjIwMjEtMTEtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwMjEtMTEtMjIiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTVSIsInBhaWRVcFRvIjoiMjAyMS0xMS0yMiIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiRFAiLCJwYWlkVXBUbyI6IjIwMjEtMTEtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUERCIiwicGFpZFVwVG8iOiIyMDIxLTExLTIyIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBXUyIsInBhaWRVcFRvIjoiMjAyMS0xMS0yMiIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQU0kiLCJwYWlkVXBUbyI6IjIwMjEtMTEtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUENXTVAiLCJwYWlkVXBUbyI6IjIwMjEtMTEtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFBTIiwicGFpZFVwVG8iOiIyMDIxLTExLTIyIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBHTyIsInBhaWRVcFRvIjoiMjAyMS0xMS0yMiIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQUEMiLCJwYWlkVXBUbyI6IjIwMjEtMTEtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFJCIiwicGFpZFVwVG8iOiIyMDIxLTExLTIyIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBTVyIsInBhaWRVcFRvIjoiMjAyMS0xMS0yMiIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJSUyIsInBhaWRVcFRvIjoiMjAyMS0xMS0yMiIsImV4dGVuZGVkIjp0cnVlfV0sIm1ldGFkYXRhIjoiMDEyMDIxMTAyM1BQQU0wMDAwMDUiLCJoYXNoIjoiMjcyMTgxMzYvMDotODQ1ODE1MzI3IiwiZ3JhY2VQZXJpb2REYXlzIjo3LCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-B9SYIVADU9lhe91Qlf+sisSJJNOQxe6DLdQNbSZoe2JD9tIgIxbRvW0jYa&#x2F;95sCoR75dlG9RFqFi+koq09nSuD4YxJ8FjEiS2wQ8UoMOLKyqlitdb+46CRCX&#x2F;f9c9z&#x2F;oqPwe4gWvKDts+Si5Y8Il+G79wWqcqkv1BrFwoQ5xBv1Xyt7N0peoIy4LfDNKrr2bReaxrDoiejq6pQDObl5CXMQX&#x2F;kSD53zO2rJJ7BgbvqEVnsE6IWnhNwSe7qQIfyhLUhUEVr&#x2F;EQIzm3MIx98xolrxG6ehf3HPQxctyHdv7Wmjmp36tQzPCkl9d0&#x2F;N1HHN53U0D8SsT5QSM1ixIIjFzqA&#x3D;&#x3D;-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCP4uk4SlVdA5nuA3DQC+NsEnZS9npFnO0zrmMWcz1++q2UWJNuGTh0rwi+3fUJIArfvVh7gNtIp93rxjtrQAuf4&#x2F;Fa6sySp4c32MeFACfC0q+oUoWebhOIaYTYUxm4LAZ355vzt8YeDPmvWKxA81udqEk4gU9NNAOz1Um5&#x2F;8LyR8SGsSc4EDBRSjcMWMwMkYSauGqGcEUK8WhfplsyF61lKSOFA6VmfUmeDK15rUWWLbOMKgn2cxFA98A+s74T9Oo96CU7rp&#x2F;umDXvhnyhAXSukw&#x2F;qCGOVhwKR8B6aeDtoBWQgjnvMtPgOUPRTPkPGbwPwwDkvAHYiuKJ7Bd2wH7rAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBAB2J1ysRudbkqmkUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE&#x2F;BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5&#x2F;FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB&#x2F;R5oUlebwaTE6WZNBs+TA&#x2F;qPj+5&#x2F;wi9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329&#x2F;WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V&#x2F;0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ&#x2F;c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0&#x2F;&#x2F;lOmVya&#x2F;PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0&#x2F;WFPl1aw5VV&#x2F;VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH&#x2F;0onD</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">F5TRIB85C7-eyJsaWNlbnNlSWQiOiJGNVRSSUI4NUM3IiwibGljZW5zZWVOYW1lIjoiU2hhbmRvbmcgVW5pdmVyc2l0eSIsImFzc2lnbmVlTmFtZSI6ImFvIGxpIiwiYXNzaWduZWVFbWFpbCI6IjI4Njc4MTYyNjhAcXEuY29tIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiRm9yIGVkdWNhdGlvbmFsIHVzZSBvbmx5IiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJEUE4iLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDIzLTA0LTE4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJQUyIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTQyIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJHTyIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTRiIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJEUyIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUEMiLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDIzLTA0LTE4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJEIiwicGFpZFVwVG8iOiIyMDIzLTA0LTE4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSUzAiLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJNIiwicGFpZFVwVG8iOiIyMDIzLTA0LTE4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUlNWIiwicGFpZFVwVG8iOiIyMDIzLTA0LTE4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IkRDIiwicGFpZFVwVG8iOiIyMDIzLTA0LTE4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSU1UiLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRQIiwicGFpZFVwVG8iOiIyMDIzLTA0LTE4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBEQiIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQV1MiLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFNJIiwicGFpZFVwVG8iOiIyMDIzLTA0LTE4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBQUyIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQQ1dNUCIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQR08iLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFBDIiwicGFpZFVwVG8iOiIyMDIzLTA0LTE4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBSQiIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQU1ciLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUlMiLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6dHJ1ZX1dLCJtZXRhZGF0YSI6IjAxMjAyMjA3MTVMUEFBMDA2MDA4IiwiaGFzaCI6IjMzMjc1MzQ1LzE2OTgzMDkyOjE3NTA1Njk2NTMiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0&#x3D;-EOufLPiykodPlQXl6v9pAd7geesvSLDca88HhDihCP5LSabX33BwTVfkSQaLUah0qyH84Shzp2NZv+LZK2dTXwwF1XCYq&#x2F;9Lmt3iwlFovsrifhrfTGQCEXrlyzigZdwl+cpKysVKS9DdVKQIl64L0xQkX1ZrjOhofWUMFrgNwqie1xNn9iSSnbh&#x2F;NiZ0&#x2F;b7kdfMukFX995RFNkPMCvqwrGpNLFHnPoiEGqIKCh+2o8YQaO7AxPHckOLZLAF+l5dIkiM7tFdICOBT&#x2F;GCEEPXG2CsVoufNvGmkdSUPr6j6+EuMAv+0iBscxQrkjfqH3wED6jXR9Pjl&#x2F;+6OGaT6T4YhJg&#x3D;&#x3D;-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCP4uk4SlVdA5nuA3DQC+NsEnZS9npFnO0zrmMWcz1++q2UWJNuGTh0rwi+3fUJIArfvVh7gNtIp93rxjtrQAuf4&#x2F;Fa6sySp4c32MeFACfC0q+oUoWebhOIaYTYUxm4LAZ355vzt8YeDPmvWKxA81udqEk4gU9NNAOz1Um5&#x2F;8LyR8SGsSc4EDBRSjcMWMwMkYSauGqGcEUK8WhfplsyF61lKSOFA6VmfUmeDK15rUWWLbOMKgn2cxFA98A+s74T9Oo96CU7rp&#x2F;umDXvhnyhAXSukw&#x2F;qCGOVhwKR8B6aeDtoBWQgjnvMtPgOUPRTPkPGbwPwwDkvAHYiuKJ7Bd2wH7rAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBAB2J1ysRudbkqmkUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE&#x2F;BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5&#x2F;FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB&#x2F;R5oUlebwaTE6WZNBs+TA&#x2F;qPj+5&#x2F;wi9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329&#x2F;WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V&#x2F;0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ&#x2F;c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0&#x2F;&#x2F;lOmVya&#x2F;PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0&#x2F;WFPl1aw5VV&#x2F;VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH&#x2F;0onD</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">F5TRIB85C7-eyJsaWNlbnNlSWQiOiJGNVRSSUI4NUM3IiwibGljZW5zZWVOYW1lIjoiU2hhbmRvbmcgVW5pdmVyc2l0eSIsImFzc2lnbmVlTmFtZSI6ImFvIGxpIiwiYXNzaWduZWVFbWFpbCI6IjI4Njc4MTYyNjhAcXEuY29tIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiRm9yIGVkdWNhdGlvbmFsIHVzZSBvbmx5IiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJEUE4iLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDIzLTA0LTE4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJQUyIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTQyIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJHTyIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTRiIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJEUyIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUEMiLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDIzLTA0LTE4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJEIiwicGFpZFVwVG8iOiIyMDIzLTA0LTE4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSUzAiLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJNIiwicGFpZFVwVG8iOiIyMDIzLTA0LTE4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUlNWIiwicGFpZFVwVG8iOiIyMDIzLTA0LTE4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IkRDIiwicGFpZFVwVG8iOiIyMDIzLTA0LTE4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSU1UiLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRQIiwicGFpZFVwVG8iOiIyMDIzLTA0LTE4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBEQiIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQV1MiLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFNJIiwicGFpZFVwVG8iOiIyMDIzLTA0LTE4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBQUyIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQQ1dNUCIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQR08iLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFBDIiwicGFpZFVwVG8iOiIyMDIzLTA0LTE4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBSQiIsInBhaWRVcFRvIjoiMjAyMy0wNC0xOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQU1ciLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUlMiLCJwYWlkVXBUbyI6IjIwMjMtMDQtMTgiLCJleHRlbmRlZCI6dHJ1ZX1dLCJtZXRhZGF0YSI6IjAxMjAyMjA3MTVMUEFBMDA2MDA4IiwiaGFzaCI6IjMzMjc1MzQ1LzE2OTgzMDkyOjE3NTA1Njk2NTMiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0&#x3D;-EOufLPiykodPlQXl6v9pAd7geesvSLDca88HhDihCP5LSabX33BwTVfkSQaLUah0qyH84Shzp2NZv+LZK2dTXwwF1XCYq&#x2F;9Lmt3iwlFovsrifhrfTGQCEXrlyzigZdwl+cpKysVKS9DdVKQIl64L0xQkX1ZrjOhofWUMFrgNwqie1xNn9iSSnbh&#x2F;NiZ0&#x2F;b7kdfMukFX995RFNkPMCvqwrGpNLFHnPoiEGqIKCh+2o8YQaO7AxPHckOLZLAF+l5dIkiM7tFdICOBT&#x2F;GCEEPXG2CsVoufNvGmkdSUPr6j6+EuMAv+0iBscxQrkjfqH3wED6jXR9Pjl&#x2F;+6OGaT6T4YhJg&#x3D;&#x3D;-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCP4uk4SlVdA5nuA3DQC+NsEnZS9npFnO0zrmMWcz1++q2UWJNuGTh0rwi+3fUJIArfvVh7gNtIp93rxjtrQAuf4&#x2F;Fa6sySp4c32MeFACfC0q+oUoWebhOIaYTYUxm4LAZ355vzt8YeDPmvWKxA81udqEk4gU9NNAOz1Um5&#x2F;8LyR8SGsSc4EDBRSjcMWMwMkYSauGqGcEUK8WhfplsyF61lKSOFA6VmfUmeDK15rUWWLbOMKgn2cxFA98A+s74T9Oo96CU7rp&#x2F;umDXvhnyhAXSukw&#x2F;qCGOVhwKR8B6aeDtoBWQgjnvMtPgOUPRTPkPGbwPwwDkvAHYiuKJ7Bd2wH7rAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBAB2J1ysRudbkqmkUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE&#x2F;BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5&#x2F;FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB&#x2F;R5oUlebwaTE6WZNBs+TA&#x2F;qPj+5&#x2F;wi9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329&#x2F;WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V&#x2F;0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ&#x2F;c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0&#x2F;&#x2F;lOmVya&#x2F;PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0&#x2F;WFPl1aw5VV&#x2F;VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH&#x2F;0onD</span><br></pre></td></tr></table></figure></p>
<h1 id="其他破解方式"><a href="#其他破解方式" class="headerlink" title="其他破解方式"></a>其他破解方式</h1><p><a href="https://www.yuque.com/docs/share/2769545b-0eec-44f7-a035-4de147736f6a" target="_blank" rel="noopener">https://www.yuque.com/docs/share/2769545b-0eec-44f7-a035-4de147736f6a</a></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>navicat函数批量插入一百万数据</title>
    <url>/2022/10/20/database-mysql-navicat-20221020-navicat%E5%87%BD%E6%95%B0%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5%E4%B8%80%E7%99%BE%E4%B8%87%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<p>-<strong>+Navicat 批量插入数据/编写储存过程/函数: <a href="https://www.cnblogs.com/danhuai/p/16504051.html" target="_blank" rel="noopener">https://www.cnblogs.com/danhuai/p/16504051.html</a></strong></p>
<hr>
<h1 id="新建函数"><a href="#新建函数" class="headerlink" title="新建函数"></a>新建函数</h1><ul>
<li>sql security {definer|invoker};指明谁有权限来执行；<br>definer表示只有定义者才能执行；<br>invoker表示拥有权的调用者才可以执行，默认情况下，系统指定为definer；</li>
</ul>
<h1 id="编写函数"><a href="#编写函数" class="headerlink" title="编写函数"></a>编写函数</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE DEFINER&#x3D;&#96;root&#96;@&#96;%&#96; FUNCTION &#96;批量插入查询中间表&#96;(params1 int) RETURNS int</span><br><span class="line">    DETERMINISTIC</span><br><span class="line">    SQL SECURITY INVOKER</span><br><span class="line">BEGIN</span><br><span class="line">  #Routine body goes here...</span><br><span class="line"></span><br><span class="line">	# step1 创建一个循环变量i（默认值为 1）</span><br><span class="line">	DECLARE i INT DEFAULT(1);</span><br><span class="line">	# step2 循环params1 次</span><br><span class="line">	WHILE i &lt; params1 DO</span><br><span class="line">			# step3 循环插入数据</span><br><span class="line">			INSERT INTO &#96;t_inv_out_vat_query_middle&#96; (&#96;id&#96;, &#96;apply_flow_no&#96;, &#96;seq_inv_no&#96;, &#96;apply_type_cd&#96;, &#96;apply_status_cd&#96;, &#96;apply_dt&#96;, &#96;org_code&#96;, &#96;org_name&#96;, &#96;buyer_taxpayer_no&#96;, &#96;buyer_taxpayer_name&#96;, &#96;buyer_taxpayer_type_cd&#96;, &#96;seller_taxpayer_name&#96;, &#96;inv_type_code&#96;, &#96;inv_code&#96;, &#96;inv_no&#96;, &#96;print_status_cd&#96;, &#96;apply_user&#96;, &#96;deal_status_cd&#96;, &#96;vat_biz_status_cd&#96;, &#96;inv_dt&#96;, &#96;gmt_create&#96;, &#96;creator&#96;, &#96;gmt_modified&#96;, &#96;modifier&#96;, &#96;is_valid&#96;) VALUES (i, concat(&#39;applyFlowNo&#39;, i), concat(&#39;seqInvNo&#39;, i), 1, 3, now(), &#39;213701050000&#39;, NULL, &#39;123456789012345678&#39;, &#39;营业执照&#39;, &#39;1&#39;, NULL, &#39;007&#39;, concat(&#39;invCode&#39;,i), concat(&#39;invNo&#39;,i), 1, &#39;3798010067&#39;, 1, 4, now(), now(), &#39;3798010067&#39;, now(), &#39;3798010067&#39;, 1);</span><br><span class="line">			SET i &#x3D; i + 1;</span><br><span class="line">END WHILE;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">RETURN 0;</span><br><span class="line">END</span><br></pre></td></tr></table></figure>
<h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>点击左上角运行，输入 params1 = 10000000<br>执行数量较大时需要一定时间</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>navicat</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>mac运行ios应用程序（游戏等）</title>
    <url>/2022/10/19/mac-20221019-mac%E8%BF%90%E8%A1%8Cios%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%EF%BC%88%E6%B8%B8%E6%88%8F%E7%AD%89%EF%BC%89/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="多种方式"><a href="#多种方式" class="headerlink" title="多种方式"></a>多种方式</h1><h2 id="1-通过安装parallels-desktop来安装windows的雷电模拟器来安装ios应用软件"><a href="#1-通过安装parallels-desktop来安装windows的雷电模拟器来安装ios应用软件" class="headerlink" title="1. 通过安装parallels desktop来安装windows的雷电模拟器来安装ios应用软件"></a>1. 通过安装parallels desktop来安装windows的雷电模拟器来安装ios应用软件</h2><h2 id="2-通过安装playcover来安装应用软件-无法安装-iMazing-ipa"><a href="#2-通过安装playcover来安装应用软件-无法安装-iMazing-ipa" class="headerlink" title="2. 通过安装playcover来安装应用软件(无法安装 iMazing ipa)"></a>2. 通过安装playcover来安装应用软件(无法安装 iMazing ipa)</h2><p><a href="https://www.macv.com/mac/3579.html" target="_blank" rel="noopener">playCover下载安装</a></p>
<h2 id="3-通过Apple-Configurator来安装ios应用程序（生成-iMazing-ipa）"><a href="#3-通过Apple-Configurator来安装ios应用程序（生成-iMazing-ipa）" class="headerlink" title="3. 通过Apple Configurator来安装ios应用程序（生成 iMazing ipa）"></a>3. 通过Apple Configurator来安装ios应用程序（生成 iMazing ipa）</h2><p><a href="https://reincubate.com/zh/support/how-to/download-run-ios-app-mac/" target="_blank" rel="noopener">如何在Mac上下载和运行iOS应用</a></p>
<ul>
<li>将iOS设备连接到M1 Mac。</li>
<li>运行Apple Configurator 2，选择您的手机，然后在菜单栏中单击Add → Apps 。</li>
<li>如果未将Apple Configurator登录到您的Apple ID，则需要单击“登录”并提供您的凭据</li>
<li>在点击“添加”之前，搜索您要下载的应用。这必须是已经安装了iPhone的应用程序。<br>如果要选择手机上当前未使用的应用程序，请在iOS设备上访问App Store并在有问题的应用程序上点击“安装”，然后重新启动此过程。</li>
<li>在下载应用程序时，将显示一个进度对话框。完成后，将弹出警告，提示该应用程序已在手机上安装。在屏幕上留下警告消息。</li>
<li>切换到Finder并按⌘ Cmd + ⇧ Shift + G打开“转到文件夹”对话框，然后粘贴该内容，然后按⏎ Enter ：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~&#x2F;Library&#x2F;Group Containers&#x2F;K36BKF7T3D.group.com.apple.configurator&#x2F;Library&#x2F;Caches&#x2F;Assets&#x2F;TemporaryItems&#x2F;MobileApps</span><br></pre></td></tr></table></figure></li>
<li>在新窗口中打开文件夹，直到获得IPA文件。双击将其安装在Mac上，它将出现在“ Applications文件夹中。</li>
<li>在您批准将其在系统上运行之前，iOS应用程序将无法运行。在Mac上打开终端，然后粘贴此命令，但不要按Enter键：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo xattr -rd com.apple.quarantine</span><br></pre></td></tr></table></figure></li>
<li>按空格键在该文本后添加一个空格，然后将您的应用程序从“ Applications文件夹拖到“终端”窗口中。这会将应用程序的路径添加到您粘贴的行的末尾。</li>
<li>按⏎ Enter键并输入密码，然后再次按⏎ Enter 。<br>就是这样–您现在就可以像其他任何应用Applications一样从“ Applications运行您的应用程序。<h2 id="4-通iMazing获取ios-ipa文件安装（生成-iMazing-ipa）"><a href="#4-通iMazing获取ios-ipa文件安装（生成-iMazing-ipa）" class="headerlink" title="4.通iMazing获取ios ipa文件安装（生成 iMazing ipa）"></a>4.通iMazing获取ios ipa文件安装（生成 iMazing ipa）</h2><a href="https://www.digit77.com/macapps/imazing/" target="_blank" rel="noopener">iMazing下载</a><br><a href="https://blog.51cto.com/u_15118280/4570105" target="_blank" rel="noopener">M1 MacBook上如何安装iOS/iPad OS软件</a><br><a href="https://zhuanlan.zhihu.com/p/366961186?ivk_sa=1024320u" target="_blank" rel="noopener"></a></li>
</ul>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>mac</category>
      </categories>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>聚合设计原则</title>
    <url>/2022/10/18/depth-design-DDD-20221018-%E8%81%9A%E5%90%88%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="1-设计聚合的原则之一"><a href="#1-设计聚合的原则之一" class="headerlink" title="(1)设计聚合的原则之一"></a>(1)设计聚合的原则之一</h2><p>在边界之外使用最终一致性。<br>聚合内数据强一致性，聚合之间数据最终一致性。<br>在一次事务中，最多只能更改一个聚合的状态。<br>如何一个业务操作涉及多个聚合状态的更改，可以采用领域事件的方式，实现聚合之间的解耦；</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>design</category>
        <category>DDD</category>
      </categories>
      <tags>
        <tag>DDD</tag>
      </tags>
  </entry>
  <entry>
    <title>架构风格和架构特征</title>
    <url>/2022/10/17/depth-architecture-1-%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E5%92%8C%E6%9E%B6%E6%9E%84%E7%89%B9%E5%BE%81/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>architecture</category>
      </categories>
      <tags>
        <tag>architecture</tag>
      </tags>
  </entry>
  <entry>
    <title>git删除本地仓库</title>
    <url>/2022/10/17/git-%E7%AC%94%E8%AE%B0-git%E5%88%A0%E9%99%A4%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="找出隐藏-git目录"><a href="#找出隐藏-git目录" class="headerlink" title="找出隐藏.git目录"></a>找出隐藏.git目录</h1><p>ls -a  找到隐藏目录 .git</p>
<h1 id="删除文件夹"><a href="#删除文件夹" class="headerlink" title="删除文件夹"></a>删除文件夹</h1><p>rm -rf .git</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>redis预热</title>
    <url>/2022/10/17/redis-%E9%A2%84%E7%83%AD-1-redis%E9%A2%84%E7%83%AD%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="redis预热"><a href="#redis预热" class="headerlink" title="redis预热"></a>redis预热</h1><p>缓存预热<br>1、定义</p>
<p>缓存预热就是系统上线后，提前将相关的缓存数据直接加载到缓存系统。避免在用户请求的时候，先查询数据库，然后再将数据缓存的问题！用户直接查询事先被预热的缓存数据！</p>
<p>2、解决方案</p>
<p>1）直接写个缓存刷新页面，上线时手工操作下。<br>2）数据量不大，可以在项目启动的时候自动进行加载。<br>3）定时刷新缓存。</p>
<h2 id="config预热方案"><a href="#config预热方案" class="headerlink" title="config预热方案"></a>config预热方案</h2><ol>
<li>启动时批量预热，设置过期时间</li>
<li>增删改查修改缓存</li>
<li>定时刷新缓存</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>redis</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>领域事件</title>
    <url>/2022/10/17/depth-design-DDD-20221017-%E9%A2%86%E5%9F%9F%E4%BA%8B%E4%BB%B6%EF%BC%88Domain-Event%EF%BC%89/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>DDD术语-领域事件（Domain Event）：<a href="http://t.zoukankan.com/junzi2099-p-13682154.html" target="_blank" rel="noopener">http://t.zoukankan.com/junzi2099-p-13682154.html</a></strong></li>
</ul>
<hr>
<h1 id="领域事件"><a href="#领域事件" class="headerlink" title="领域事件"></a>领域事件</h1><p>一个领域事件将导致进一步的业务操作，在实现业务解耦的同时，还有助于形成完整的业务闭环。</p>
<p>领域事件可以是业务流程的一个步骤；<br>也可能是定时批处理过程中发生的事件；<br>或者一个事件发生后触发的后续动作，比如密码连续输错三次，触发锁定账户的动作。</p>
<h2 id="那如何识别领域事件呢？"><a href="#那如何识别领域事件呢？" class="headerlink" title="那如何识别领域事件呢？"></a>那如何识别领域事件呢？</h2><p>很简单，和刚才讲的定义是强关联的。在做用户旅程或者场景分析时，我们要捕捉业务、需求人员或领域专家口中的关键词：“如果发生……，则……”“当做完……的时候，请通知……”“发生……时，则……”等。在这些场景中，如果发生某种事件后，会触发进一步的操作，那么这个事件很可能就是领域事件。</p>
<h2 id="那领域事件为什么要用最终一致性，而不是传统-SOA-的直接调用的方式呢？"><a href="#那领域事件为什么要用最终一致性，而不是传统-SOA-的直接调用的方式呢？" class="headerlink" title="那领域事件为什么要用最终一致性，而不是传统 SOA 的直接调用的方式呢？"></a>那领域事件为什么要用最终一致性，而不是传统 SOA 的直接调用的方式呢？</h2><p>聚合的一个设计原则：在边界之外使用最终一致性。<br>一次事务最多只能更改一个聚合的状态。<br>如果一次业务操作涉及多个聚合状态的更改，应采用领域事件的最终一致性。</p>
<h2 id="领域事件的作用"><a href="#领域事件的作用" class="headerlink" title="领域事件的作用"></a>领域事件的作用</h2><p>领域事件驱动设计可以切断领域模型之间的强依赖关系，<br>事件发布完成后，发布方不必关心后续订阅方事件处理是否成功，这样可以实现领域模型的解耦，维护领域模型的独立性和数据的一致性。<br>在领域模型映射到微服务系统架构时，领域事件可以解耦微服务，微服务之间的数据不必要求强一致性，而是基于事件的最终一致性。</p>
<p>########################################</p>
<h1 id="什么是领域事件"><a href="#什么是领域事件" class="headerlink" title="什么是领域事件"></a>什么是领域事件</h1><p>在事件风暴过程中，会识别出命令、业务操作、实体等，此外还有事件。比如当业务人员的描述中出现类似“当完成…后，则…”，“当发生…时，则…”等模式时，往往可将其用领域事件来实现。<br>领域事件表示在领域中发生的事件，它会导致进一步的业务操作。如电商中，支付完成后触发的事件，会导致生成订单、扣减库存等操作。</p>
<h2 id="为什么需要领域事件"><a href="#为什么需要领域事件" class="headerlink" title="为什么需要领域事件"></a>为什么需要领域事件</h2><p>领域事件的最终目的是为了实现聚合之间的解耦。事件模式是一种通用的解耦方法，相比依赖间的直接调用，通过事件方式形成的间接依赖，在扩展、重构时更加灵活。</p>
<h2 id="设计聚合的原则之一"><a href="#设计聚合的原则之一" class="headerlink" title="设计聚合的原则之一"></a>设计聚合的原则之一</h2><p>在边界之外使用最终一致性。聚合内数据强一致性，聚合之间数据最终一致性。<br>在一次事务中，最多只能更改一个聚合的状态。<br>如何一个业务操作涉及多个聚合状态的更改，可以采用领域事件的方式，实现聚合之间的解耦；</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>design</category>
        <category>DDD</category>
      </categories>
      <tags>
        <tag>DDD</tag>
      </tags>
  </entry>
  <entry>
    <title>win11激活</title>
    <url>/2022/10/09/mac-20221009-win11%E6%BF%80%E6%B4%BB/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="激活密钥（淘宝）"><a href="#激活密钥（淘宝）" class="headerlink" title="激活密钥（淘宝）"></a>激活密钥（淘宝）</h1><p>==</p>
<p>亲爱的！<br>您的订单1694835086382340499，已经帮您送达<br>卡号：47DDN-D8TH9-FB338-J326V-B7V3B</p>
<p>激活步骤：点击【开始—–设置—–更新—-激活】—点更改产品密钥（输入卡号激活 ）<br>如果提示<strong>**</strong>EE2或<strong>**</strong>EE7请确保网络正常，然后输入激活 ，多试一下。</p>
<p>如果提示<strong>**</strong>050或<strong>**</strong>210，请用 9RPN2-RFY7J-VT9BV-4FDDB-6VJXG 升级系统。在升级过程中出现任何提示，请一定重启一下电脑（一定重启）。重启后再看下版本是否升级成专业版，是否激活成功。未激活请用前面卡号激活。</p>
<p>其他问题 请联系人工客服！==</p>
<p>亲爱的！<br>您的订单1694835086382340499，已经帮您送达<br>卡号：47DDN-D8TH9-FB338-J326V-B7V3B</p>
<p>激活步骤：点击【开始—–设置—–更新—-激活】—点更改产品密钥（输入卡号激活 ）<br>如果提示<strong>**</strong>EE2或<strong>**</strong>EE7请确保网络正常，然后输入激活 ，多试一下。</p>
<p>如果提示<strong>**</strong>050或<strong>**</strong>210，请用 9RPN2-RFY7J-VT9BV-4FDDB-6VJXG 升级系统。在升级过程中出现任何提示，请一定重启一下电脑（一定重启）。重启后再看下版本是否升级成专业版，是否激活成功。未激活请用前面卡号激活。</p>
<p>其他问题 请联系人工客服！</p>
<pre><code>win10激活步骤如下：
</code></pre><p>1.按键盘Win徽标键+X键 ,再按A 选命令提示符（管理员）【或者鼠标指向桌面左下角，点右键，再按A ]<br>2.输入 slmgr /upk 回车 （注意:slmgr 后面要打空格）<br>3.输入 slmgr /cpky 回车<br>4.输入 slmgr  /ipk  47DDN-D8TH9-FB338-J326V-B7V3B 回车（注意:/ipk 后面要打空格哟。提示成功注入就接着往下操作）<br>5.输入 slui 4 回车（中间有空格），国家选择最后中国，下一步，将此面安装ID从1-9的9组数字手动打给我，每组用空格分开，不要发截图来），等候我发你确认ID.你现地输入即可</p>
<p>6.输入 slmgr /xpr 回车 检验计算机是否为永久激活</p>
<h1 id="安装ID"><a href="#安装ID" class="headerlink" title="安装ID"></a>安装ID</h1><p>0055701 3486275 3950982 7500116 8575486 0919452 2330016 4799044 5165524</p>
<p>确认之后，输入以下激活码：<br>279613-931345-279282-396940-070540-499773-418135-299311</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>mac</category>
        <category>win11</category>
      </categories>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>@Lookup</title>
    <url>/2022/10/09/spring-%E6%B3%A8%E8%A7%A3-1-Lookup/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<pre><code>@Lookup注解用法: https://blog.csdn.net/qq_25863845/article/details/123475147
</code></pre><hr>
<h1 id="Lookup概述"><a href="#Lookup概述" class="headerlink" title="@Lookup概述"></a>@Lookup概述</h1><p>@Lookup用于单例组件引用prototype组件。<br>单例组件使用@Autowired方式注入prototype组件时，被引入prototype组件也会变成单例的。<br>@Lookup可以保证被引入的组件保持prototype模式。</p>
<h2 id="多例bean注入后变成单例bean的情况"><a href="#多例bean注入后变成单例bean的情况" class="headerlink" title="多例bean注入后变成单例bean的情况"></a>多例bean注入后变成单例bean的情况</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.hl.config;</span><br><span class="line"> </span><br><span class="line">import com.hl.bean.Car;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.ComponentScan;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line"> </span><br><span class="line">@Configuration</span><br><span class="line">@ComponentScan(&quot;com.hl&quot;)</span><br><span class="line">public class MainConfig &#123;</span><br><span class="line"> </span><br><span class="line">    &#x2F;*@Bean</span><br><span class="line">    public Car getCar()&#123;</span><br><span class="line">        Car car &#x3D; new Car();</span><br><span class="line">        car.setName(&quot;红旗&quot;);</span><br><span class="line">        return car;</span><br><span class="line">    &#125;*&#x2F;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">package com.hl.bean;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line">@Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE)</span><br><span class="line">@Component</span><br><span class="line">public class Seat &#123;</span><br><span class="line">    private String name;</span><br><span class="line"> </span><br><span class="line">    public String getName() &#123;</span><br><span class="line">        return name;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public void setName(String name) &#123;</span><br><span class="line">        this.name &#x3D; name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">package com.hl.bean;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line">@Component</span><br><span class="line">public class Car &#123;</span><br><span class="line">    private String name;</span><br><span class="line">    @Autowired</span><br><span class="line">    private Seat seat;</span><br><span class="line"> </span><br><span class="line">    public String getName() &#123;</span><br><span class="line">        return name;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public void setName(String name) &#123;</span><br><span class="line">        this.name &#x3D; name;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public Seat getSeat() &#123;</span><br><span class="line">        return seat;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public void setSeat(Seat seat) &#123;</span><br><span class="line">        this.seat &#x3D; seat;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>测试:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.hl;</span><br><span class="line"> </span><br><span class="line">import com.hl.bean.Car;</span><br><span class="line">import com.hl.bean.Seat;</span><br><span class="line">import com.hl.config.MainConfig;</span><br><span class="line">import org.springframework.context.ApplicationContext;</span><br><span class="line">import org.springframework.context.annotation.AnnotationConfigApplicationContext;</span><br><span class="line"> </span><br><span class="line">public class Test &#123;</span><br><span class="line"> </span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">        ApplicationContext context &#x3D; new AnnotationConfigApplicationContext(MainConfig.class);</span><br><span class="line">        Car car &#x3D; (Car) context.getBean(&quot;car&quot;);</span><br><span class="line">        Seat seat &#x3D; car.getSeat();</span><br><span class="line">        Car car1 &#x3D; (Car) context.getBean(&quot;car&quot;);</span><br><span class="line">        Seat seat1 &#x3D; car1.getSeat();</span><br><span class="line">        System.out.println(seat &#x3D;&#x3D; seat1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>执行结果： 两个bean，seat 和 seat1 一致相等<br>从容器中获取的两个Car的Seat是相同的。因为Car是单例的，只会在容器启动时创建一次Car，Seat也只会在装配一次，每次从容器中获取都是同一个Car，所以Seat也是相同的。</p>
</blockquote>
<h2 id="使用-Lookup注解注入prototype组件"><a href="#使用-Lookup注解注入prototype组件" class="headerlink" title="使用@Lookup注解注入prototype组件"></a>使用@Lookup注解注入prototype组件</h2><p>注释Autowired，在getSeat（）方法上添加@Lookup<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.hl.bean;</span><br><span class="line"> </span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.beans.factory.annotation.Lookup;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"> </span><br><span class="line">@Component</span><br><span class="line">public class Car &#123;</span><br><span class="line">    private String name;</span><br><span class="line">    &#x2F;&#x2F;@Autowired</span><br><span class="line">    private Seat seat;</span><br><span class="line"> </span><br><span class="line">    public String getName() &#123;</span><br><span class="line">        return name;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public void setName(String name) &#123;</span><br><span class="line">        this.name &#x3D; name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Lookup</span><br><span class="line">    public Seat getSeat() &#123;</span><br><span class="line">        return seat;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public void setSeat(Seat seat) &#123;</span><br><span class="line">        this.seat &#x3D; seat;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>此时执行的结果：两个bean，seat 和 seat1 不一致，为两个bean<br>使用@Lookup，每次获取Seat都从容器中获取，因为Seat是prototity类型，所以每次都创建新的Seat对象。 </p>
</blockquote>
<h2 id="注意：使用-Bean的方式将Car注入容器，-Lookup会失效"><a href="#注意：使用-Bean的方式将Car注入容器，-Lookup会失效" class="headerlink" title="注意：使用@Bean的方式将Car注入容器，@Lookup会失效"></a>注意：使用@Bean的方式将Car注入容器，@Lookup会失效</h2><ol>
<li>注释掉Car上的@Component<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;@Component</span><br><span class="line">public class Car &#123;</span><br><span class="line">    private String name;</span><br><span class="line">    &#x2F;&#x2F;@Autowired</span><br><span class="line">    private Seat seat;</span><br></pre></td></tr></table></figure></li>
<li>在配置类使用@Bean注解注入Car<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">@ComponentScan(&quot;com.hl&quot;)</span><br><span class="line">public class MainConfig &#123;</span><br><span class="line"> </span><br><span class="line">    @Bean</span><br><span class="line">    public Car getCar()&#123;</span><br><span class="line">        Car car &#x3D; new Car();</span><br><span class="line">        car.setName(&quot;红旗&quot;);</span><br><span class="line">        return car;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<blockquote>
<p>这样的话结果会变为true，两个seat 和 seat1 又变成了同一个对象</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>spring</category>
        <category>注解</category>
      </categories>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>database-mongodb-docker安装及命令操作-20221008-mongo-增删改查练习</title>
    <url>/2022/10/08/database-mongodb-docker%E5%AE%89%E8%A3%85%E5%8F%8A%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C-20221008-mongo-%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E7%BB%83%E4%B9%A0/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>// ———- 新增<br>// insert 它允许您在集合中插入一个或多个文档；错误或成功均返回文档<br>db.t_02.insert({“name”: “zdy”});<br>// insert批量插入<br>db.t_02.insert([{“name”: “diabolo1”},{“name”: “diabolo2”},{“name”: “diabolo3”}]);<br>// insertMany 它允许您在集合中插入一组文档；错误的话返回异常<br>db.t_02.insertMany([{“name”: “diabolo8”}]);<br>db.t_02.insertMany([{“name”: “diabolo4”},{“name”: “diabolo5”},{“name”: “diabolo6”}]);<br>// insertOne 它允许您在集合中准确插入1个文档；错误的话返回异常<br>db.t_02.insertOne({“name”: “diabolo7”});</p>
<p>// ——— 删除<br>// 新建集合进行测试<br>db.createCollection(“t_03”);<br>// 新增数据进行测试<br>db.t_03.insertOne({“name”: “diabolo7”});</p>
<p>// 清空集合中所有数据<br>db.t_03.remove({});</p>
<p>// ———- 修改<br>// update，将 name = diabolo7 的行中，name 的值修改为 diabolo1<br>db.t_03.update({“name”:”diabolo7”},{$set:{“name”:”diabolo1”}});<br>// update，将 name = diabolo1 的行中，age 的值 修改为 30<br>db.t_03.update({“name”:”diabolo1”},{$set:{“age”:”30”}});</p>
<p>// ———- 查询<br>// find() 查询所有<br>db.t_01.find();<br>db.t_02.find();<br>db.t_03.find();<br>db.t_04.find();</p>
<p>// ———- 操作符<br>// 新建集合进行测试<br>db.createCollection(“t_04”);<br>// 新增数据进行测试<br>// 测试数据-1<br>db.t_04.insertOne({“name”: “diabolo1”});<br>db.t_04.insertOne({“age”: “30”});<br>db.t_04.insertOne({“name”: “diabolo1”, “age”: “30”, “sex”: ‘男’});<br>db.t_04.insertOne({name: ‘diabolo1’, age: ‘31’});<br>db.t_04.insertOne({name: ‘diabolo2’, age: ‘30’});<br>db.t_04.insertOne({“name”: “diabolo1”, “age”: “30”, “sex”: ‘女’});<br>// 测试数据-2<br>db.t_04.insertOne({“name”: “zdy1”, “sex”: “女”});<br>db.t_04.insertOne({“age”: “40”, “sex”: “男”});<br>// 测试数据-3<br>db.t_04.insertOne({“name”: “空竹”});<br>db.t_04.insertOne({“age”: “50”});</p>
<p>//与操作符 $and<br>// 测试数据-1的结果：筛选出同时符合 条件的行，并展示出符合条件行的所有 列<br>db.t_04.find({$and:[{“name”:”diabolo1”,”age”:”30”}]});<br>// 测试数据-2： 当查询条件的所有行都满足条件时，才会展示结果<br>db.t_04.find({$and:[{“name”:”zdy1”,”age”:”40”}]});<br>// 测试数据-3:  只有当所有条件都满足时，才符合结果，且所在行的条件列不能为空<br>db.t_04.find({$and:[{“name”:”空竹”,”age”:”50”}]});</p>
<p>//或操作符 $or，只需要满足一个条件即可<br>db.t_04.find({$or:[{“name”:”空竹”},{“age”:”50”}]});</p>
<p>//大于操作符 $gt，满足大于该条件值即可<br>db.t_04.find({“age”:{$gt:”30”}});<br>// 当条件是中文时，无法正常查询出结果<br>db.t_04.find({“name”:{$gt:”空竹”}});</p>
<p>//小于操作符 $lt，满足小于该条件值即可<br>db.t_04.find({“age”:{$lt:”31”}});</p>
<p>//大于等于操作符 $gte<br>db.t_04.find({“age”:{$gte:”31”}});<br>//小于等于操作符 $lte<br>db.t_04.find({“age”:{$lte:”31”}});<br>//不等于操作符 $ne<br>db.t_04.find({“age”:{$ne:”31”}});<br>//包含操作符 $in<br>db.t_04.find({“age”:{$in:[“30”,”31”]}});<br>//不包含操作符 $nin<br>db.t_04.find({“age”:{$nin:[“30”,”31”]}});</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>Parallels Desktop 18 for Mac破解版win11安装</title>
    <url>/2022/10/06/mac-20221006-Parallels-Desktop-18-for-Mac%E7%A0%B4%E8%A7%A3%E7%89%88win11%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://qiujunya.com/article/2022/9/12/248.html" target="_blank" rel="noopener">Parallels Desktop 18 for Mac破解版下载（已更新至v18.0.2版本）</a></p>
<h1 id="下载并安装-parallels-desktop-18"><a href="#下载并安装-parallels-desktop-18" class="headerlink" title="下载并安装 parallels desktop 18"></a>下载并安装 parallels desktop 18</h1><h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><ol>
<li>先安装包内的pd18</li>
<li>退出parallels账户</li>
<li>打开终端terminal，进入到ParallelsDesktopCrack这个文件夹（不会的可以把文件夹复制到桌面，然后在终端输入cd加空格，然后把文件夹拖到终端）</li>
<li>运行：chmod +x ./install.sh &amp;&amp; sudo ./install.sh 即可破解</li>
</ol>
<h1 id="parallels-desktop破解脚本执行过程"><a href="#parallels-desktop破解脚本执行过程" class="headerlink" title="parallels desktop破解脚本执行过程"></a>parallels desktop破解脚本执行过程</h1><p>Last login: Wed Oct  5 21:09:14 on ttys002<br>➜  parallelsdesktopcrack chmod +x ./install.sh &amp;&amp; sudo ./install.sh<br>Password:<br>[<em>] Exit Parallels Desktop<br>[</em>] Start Parallels Service<br>[<em>] Exit Parallels Desktop account …<br>The user has signed out successfully.<br>[</em>] Disable CEP …<br>[<em>] Stop Parallels Service<br>[</em>] Copy prl_disp_service<br>[<em>] Sign prl_disp_service<br>/Applications/Parallels Desktop.app/Contents/MacOS/Parallels Service.app/Contents/MacOS/prl_disp_service: replacing existing signature<br>[</em>] Copy fake licenses.json<br>[*] Crack over</p>
<h1 id="如下域名添加进hosts"><a href="#如下域名添加进hosts" class="headerlink" title="如下域名添加进hosts"></a>如下域名添加进hosts</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">download.parallels.com</span><br><span class="line">update.parallels.com</span><br><span class="line">desktop.parallels.com</span><br><span class="line">download.parallels.com.cdn.cloudflare.net</span><br><span class="line">update.parallels.com.cdn.cloudflare.net</span><br><span class="line">desktop.parallels.com.cdn.cloudflare.net</span><br><span class="line">www.parallels.cn</span><br><span class="line">www.parallels.com</span><br><span class="line">reportus.parallels.com</span><br><span class="line">parallels.com</span><br><span class="line">parallels.cn</span><br><span class="line">pax-manager.myparallels.com</span><br><span class="line">myparallels.com</span><br><span class="line">my.parallels.com</span><br></pre></td></tr></table></figure>
<h1 id="下载地址获取"><a href="#下载地址获取" class="headerlink" title="下载地址获取"></a>下载地址获取</h1><p>为防止被和谐，请移步微信公众号“龟仙人笔记”，回复”pd18”获取下载链接。另外本软件只提供交流学习用，请于下载后一周内删除。</p>
<h1 id="win10镜像获取-这些镜像都安装不成功，提示无操作镜像，通过parallels-desktop自身的win11下载安装可成功"><a href="#win10镜像获取-这些镜像都安装不成功，提示无操作镜像，通过parallels-desktop自身的win11下载安装可成功" class="headerlink" title="win10镜像获取(这些镜像都安装不成功，提示无操作镜像，通过parallels desktop自身的win11下载安装可成功)"></a>win10镜像获取(这些镜像都安装不成功，提示无操作镜像，通过parallels desktop自身的win11下载安装可成功)</h1><p><a href="https://msdn.itellyou.cn/" target="_blank" rel="noopener">msdn win镜像，需要判断arm 或 intel 镜像</a><br><a href="https://www.bilibili.com/read/cv13737213" target="_blank" rel="noopener">arm版win10，win11下载镜像</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">本文的arm版win10、win11是指的M1电脑系统安装Windows系统的，Intel版本的Mac电脑可以绕过。</span><br><span class="line"></span><br><span class="line">下面链接为迅雷链接，复制到迅雷下载</span><br><span class="line"></span><br><span class="line">Windows 10arm版：</span><br><span class="line"></span><br><span class="line">发布时间：2021-02-18</span><br><span class="line"></span><br><span class="line">版本号：Windows 10, version 20H2 (updated Feb 2021) (ARM64) - DVD (Chinese-Simplified)</span><br><span class="line"></span><br><span class="line">迅雷下载链接：ed2k:&#x2F;&#x2F;|file|SW_DVD9_Win_Pro_10_20H2.4_64ARM_ChnSimp_Pro_Ent_EDU_N_MLF_X22-52787.ISO|6555498496|731744E58C549CA20AC80AC5E6AC6830|&#x2F;</span><br><span class="line"></span><br><span class="line">Windows 11arm版：预览版</span><br><span class="line"></span><br><span class="line">版本号：Windows 11 Insider Preview (Dev Channel) - Build 22454</span><br><span class="line"></span><br><span class="line">发布时间：2021-09-11</span><br><span class="line"></span><br><span class="line">迅雷下载链接：ed2k:&#x2F;&#x2F;|file|Windows11_InsiderPreview_Client_x64_zh-cn_22454.iso|4903213056|A4FD6D7058261FCB31D076BA727FAF77|&#x2F;</span><br><span class="line"></span><br><span class="line">Windows 11arm版：正式版</span><br><span class="line"></span><br><span class="line">Windows 11, version 21H2 (ARM64) - DVD (Chinese-Simplified)</span><br><span class="line"></span><br><span class="line">发布时间：2021-10-05</span><br><span class="line"></span><br><span class="line">迅雷下载链接：：ed2k:&#x2F;&#x2F;|file|SW_DVD9_Win_Pro_11_21H2_64ARM_ChnSimp_Pro_Ent_EDU_N_MLF_-2_X22-82731.ISO|5608900608|5D3A8B542CBAB917C7AE43BCD17AC28E|&#x2F;</span><br><span class="line"></span><br><span class="line">你要是嫌麻烦，网站有会员专享下载链接：</span><br><span class="line"></span><br><span class="line">网站会员高速下载链接：ARM版Win10系统&#x2F;win11系统 https:&#x2F;&#x2F;www.macz.com&#x2F;mac&#x2F;8164.html?id&#x3D;NzUxNzYwJl8mNjEuMTU5LjExLjY3 作者：Mac夏天 https:&#x2F;&#x2F;www.bilibili.com&#x2F;read&#x2F;cv13737213 出处：bilibili</span><br></pre></td></tr></table></figure></p>
<h1 id="问题处理（未验证是否可行）"><a href="#问题处理（未验证是否可行）" class="headerlink" title="问题处理（未验证是否可行）"></a>问题处理（未验证是否可行）</h1><p><a href="https://site.douban.com/306121/widget/notes/194498428/note/819413445/" target="_blank" rel="noopener">macz软件下载 Parallels Desktop 无法启动，无法连接至 Parallels服务，在该虚拟机中没有安装操作系统解决方法</a></p>
<h1 id="parallels-desktop-18-密钥"><a href="#parallels-desktop-18-密钥" class="headerlink" title="parallels desktop 18 密钥"></a>parallels desktop 18 密钥</h1><p><a href="http://www.oemos.cn/parallels-desktop-key.html" target="_blank" rel="noopener">parallels desktop激活密钥</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">密钥:6J9X72-HKE8YD-MXJWZ4-SGS44V-VTA8GM</span><br><span class="line"></span><br><span class="line">密钥:6J9XV2-48DWW7-DEGZHB-Y8M4DE-52WR78</span><br><span class="line"></span><br><span class="line">密钥:6J9HGK-Y49PA2-V83YM9-RX7TWE-PV4Y5Q</span><br><span class="line"></span><br><span class="line">6J9RHF-GHZ5S9-XMYRR5-7VYNGW-VZ3Q9C</span><br><span class="line">6J9M87-59HGRJ-SACJ7B-K9VENA-NRXVZB</span><br><span class="line">6J9C82-H9AA96-RGGHRP-9YRXPR-JDRASM</span><br><span class="line">6J9G4J-9QDHMF-92E2WP-WCQ6SX-ZXQ4BR</span><br><span class="line">6J9HVB-39295K-CJQ3NV-QAK2NQ-PPJ2J7</span><br><span class="line">6J9EAA-PXRMS7-SNPJSJ-TFH9QZ-4ARHMR</span><br><span class="line">6J9PM3-TZ6G5S-5D7BVV-AWV99H-XTFDVY</span><br><span class="line">6J99WR-YWKYPH-K82YP8-99WDZH-YKBZCT</span><br><span class="line">6J93Q5-MFSDQ8-7S427R-9VK7PR-WEZ2HS</span><br><span class="line">6J9W68-4H93VA-25QWTW-6M998N-ZWHW7X</span><br><span class="line">6J9C7V-2MD3H3-M929QE-H9BS97-4FH7HE</span><br></pre></td></tr></table></figure></p>
<h1 id="解决parallels-desktop-18中win11无法连接wifi"><a href="#解决parallels-desktop-18中win11无法连接wifi" class="headerlink" title="解决parallels desktop 18中win11无法连接wifi"></a>解决parallels desktop 18中win11无法连接wifi</h1><p><a href="https://blog.51cto.com/u_14013325/4929737" target="_blank" rel="noopener">Parallels Desktop 16 Win11虚拟机将继续正常运作，但将无法连接网络</a></p>
<p>每次需要以此种命令运行parallels desktop:  sudo -b /Applications/Parallels\ Desktop.app/Contents/MacOS/prl_client_app</p>
<p>回车后会提示输入密码，输入Mac系统密码然后按回车，这里输入密码不会显示，输完直接按回车即可。然后在弹出窗口按提示打开所有权限，如果出现安装Windows的界面，点击左下角的“打开”，在“ 用户名 - 文稿 - parallels ”目录下面找到你原来的Windows系统打开，就可以解决Parallels Desktop 16不能联网的问题了</p>
<blockquote>
<p>一定不能重新下载安装win11，只需要左下角打开已经安装过的win11</p>
</blockquote>
<h2 id="首次网络可连接，后续又不能连接，处理办法"><a href="#首次网络可连接，后续又不能连接，处理办法" class="headerlink" title="首次网络可连接，后续又不能连接，处理办法"></a>首次网络可连接，后续又不能连接，处理办法</h2><p>能ping通过，但是浏览器访问无网络<br><a href="https://www.sohu.com/a/582939090_100259512" target="_blank" rel="noopener">pd虚拟机不能联网怎么办？如何解决Parallels Desktop虚拟机不能联网的问题</a></p>
<ol>
<li>将windows关机</li>
<li>通过sudo -b 启动</li>
<li>重新打开windows，通过左下角打开按钮来打开新的win窗口</li>
<li>给windows当前版本添加快照，右键windows -&gt; 操作 -&gt; 拍快照</li>
<li>重新安装 Parallels Tools，右键windows -&gt; 操作 -&gt; 重新安装 tools</li>
<li>共享网络（建议），可以ping通，但是浏览器无法访问，打开shadowly可以访问（公司网络ip地址限制）</li>
<li>关掉shadowly之后，浏览器也可以访问网络（暂不明白什么情况）</li>
</ol>
<h1 id="安装路径"><a href="#安装路径" class="headerlink" title="安装路径"></a>安装路径</h1><p>普通安装： /users/diabolo/parallels/<br>执行sudo -b /Applications/../..app 后： /var/root/Paralles/</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>mac</category>
        <category>parallels desktop</category>
      </categories>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>parallels desktop与mac文件夹共享</title>
    <url>/2022/10/06/mac-20221006-parallels-desktop%E4%B8%8Emac%E6%96%87%E4%BB%B6%E5%A4%B9%E5%85%B1%E4%BA%AB/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><ol>
<li>parallels desktop 18</li>
<li>windows11</li>
<li>mac Monterey m1 12.3</li>
</ol>
<h1 id="进入设置"><a href="#进入设置" class="headerlink" title="进入设置"></a>进入设置</h1><ol>
<li>启动parallels desktop</li>
<li>点击windows窗口右上角的设置</li>
<li>选择”选项”-&gt; “共享”</li>
<li>右侧分别为” 共享 mac” 和 “共享 windows”</li>
</ol>
<h1 id="windows访问mac文件夹内容"><a href="#windows访问mac文件夹内容" class="headerlink" title="windows访问mac文件夹内容"></a>windows访问mac文件夹内容</h1><ol>
<li>选择 “共享mac”</li>
<li>将此页面需要 从windows访问mac的哪些文件夹，就把哪些文件夹配置在该共享设置中<br>因为都是自己电脑，基本上全配置即可，root文件夹尽量不要配置</li>
</ol>
<h1 id="mac访问windows文件夹内容"><a href="#mac访问windows文件夹内容" class="headerlink" title="mac访问windows文件夹内容"></a>mac访问windows文件夹内容</h1><ol>
<li>选择 “共享 windows”</li>
<li>此页配置简单，勾选 “从 mac 访问 windows 文件夹”即可<blockquote>
<p>此处有提示： 当”windows 11”运行时，可依次转到 mac 电脑的 “finder 边栏” &gt; “网络” &gt; “windows 11”，<br>查看与 mac 共享的 windows 驱动器。</p>
</blockquote>
</li>
<li>打开高级设置，勾选 “从 mac 共享 网络驱动器” 和 “与 mac 共享 windows 连接的驱动器”</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>mac</category>
        <category>parallels desktop</category>
      </categories>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>本地registry仓库搭建</title>
    <url>/2022/09/29/database-mongodb-docker%E5%AE%89%E8%A3%85%E5%8F%8A%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C-20221008-mongo-ddl%E7%BB%83%E4%B9%A0/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>// 切换（使用）数据库，若数据库不存在，则新建；存在则切换<br>use mongo-test-01;<br>// 查看当前命令窗口所归属的数据库<br>db;<br>// 新建集合<br>db.createCollection(“t_02”);<br>// 删除当前窗口归属的数据库<br>db.dropDatabase();<br>//</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>docker registry</category>
      </categories>
      <tags>
        <tag>docker-registry</tag>
      </tags>
  </entry>
  <entry>
    <title>registry自定义发布的端口</title>
    <url>/2022/09/29/depth-docker-docker-registry-20220929-registry%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%91%E5%B8%83%E7%9A%84%E7%AB%AF%E5%8F%A3/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="registry自定义发布的端口"><a href="#registry自定义发布的端口" class="headerlink" title="registry自定义发布的端口"></a>registry自定义发布的端口</h1><ol>
<li>如果您已经在使用端口 5000，或者您想要运行多个本地注册表来分隔关注区域，您可以自定义注册表的端口设置。此示例在端口 5001 上运行注册表并将其命名为 registry-test。请记住，-p值的第一部分是主机端口，第二部分是容器内的端口。在容器内，注册表5000默认侦听端口。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">     -p 5001:5000 \</span><br><span class="line">     --name registry-test \</span><br><span class="line">     registry:2</span><br></pre></td></tr></table></figure></li>
<li>如果要更改容器内注册表监听的端口，可以使用环境变量REGISTRY_HTTP_ADDR来更改它。此命令使注册表在容器内的端口 5001 上进行侦听：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">     -e REGISTRY_HTTP_ADDR&#x3D;0.0.0.0:5001 \</span><br><span class="line">     -p 5001:5001 \</span><br><span class="line">     --name registry-test \</span><br><span class="line">     registry:2</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>docker registry</category>
      </categories>
      <tags>
        <tag>docker-registry</tag>
      </tags>
  </entry>
  <entry>
    <title>本地registry仓库搭建</title>
    <url>/2022/09/29/depth-docker-docker-registry-20220929-%E6%9C%AC%E5%9C%B0registry%E4%BB%93%E5%BA%93%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>Docker registry: <a href="https://docs.docker.com/registry/" target="_blank" rel="noopener">https://docs.docker.com/registry/</a></strong></li>
</ul>
<hr>
<h1 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull registry</span><br><span class="line">docker run -itd -v &#x2F;Users&#x2F;diabolo&#x2F;work&#x2F;workspace&#x2F;wk-docker&#x2F;docker-registry:&#x2F;var&#x2F;lib&#x2F;registry -p 5001:5000 --restart&#x3D;always --name myregistry registry:latest</span><br><span class="line"># registry容器内默认监听端口 5000</span><br><span class="line"># 或者通过修改环境变量，修改容器内监听端口来发布</span><br><span class="line">docker run -itd -e REGISTRY_HTTP_ADDR&#x3D;0.0.0.0:5001 -v &#x2F;Users&#x2F;diabolo&#x2F;work&#x2F;workspace&#x2F;wk-docker&#x2F;docker-registry:&#x2F;var&#x2F;lib&#x2F;registry -p 5001:5001 --restart&#x3D;always --name myregistry registry:latest</span><br></pre></td></tr></table></figure>
<blockquote>
<p>打开容器仓库地址: <a href="http://127.0.0.1:5001/v2/_catalog" target="_blank" rel="noopener">http://127.0.0.1:5001/v2/_catalog</a><br>列出my-hexo镜像有哪些tag: <a href="http://127.0.0.1:5001/v2/my-hexo/tags/list" target="_blank" rel="noopener">http://127.0.0.1:5001/v2/my-hexo/tags/list</a></p>
</blockquote>
<h2 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h2><p>-itd：在容器中打开一个伪终端进行交互操作，并在后台运行；<br>-v：把宿主机的/data/registry目录绑定 到 容器/var/lib/registry目录(这个目录是registry容器中存放镜像文件的目录)，来实现数据的持久化；<br>-p：映射端口；访问宿主机的5000端口就访问到registry容器的服务了；<br>–restart=always：这是重启的策略，假如这个容器异常退出会自动重启容器；<br>–name registry：创建容器命名为registry，你可以随便命名；<br>registry:latest：这个是刚才pull下来的镜像；</p>
<h1 id="停止registry"><a href="#停止registry" class="headerlink" title="停止registry"></a>停止registry</h1><ol>
<li>要停止注册表，请使用docker container stop与任何其他容器相同的命令。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker container stop registry</span><br></pre></td></tr></table></figure></li>
<li>要移除容器，请使用docker container rm.<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker container stop registry &amp;&amp; docker container rm -v registry</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>docker registry</category>
      </categories>
      <tags>
        <tag>docker-registry</tag>
      </tags>
  </entry>
  <entry>
    <title>推送至本地仓库</title>
    <url>/2022/09/29/depth-docker-docker-registry-20220929-%E6%8E%A8%E9%80%81%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="推送至本地仓库，若不指定my-ubuntu版本，则默认上传-latest"><a href="#推送至本地仓库，若不指定my-ubuntu版本，则默认上传-latest" class="headerlink" title="推送至本地仓库，若不指定my-ubuntu版本，则默认上传 latest"></a>推送至本地仓库，若不指定my-ubuntu版本，则默认上传 latest</h1><ol>
<li>将图像标记为localhost:5000/my-ubuntu. 这会为现有图像创建一个附加标签。当标签的第一部分是主机名和端口时，Docker 在推送时将其解释为注册表的位置。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker tag ubuntu:16.04 localhost:5000&#x2F;my-ubuntu:16.04</span><br></pre></td></tr></table></figure></li>
<li>将映像推送到运行在以下位置的本地注册表localhost:5000：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker push localhost:5000&#x2F;my-ubuntu:16.04</span><br></pre></td></tr></table></figure></li>
<li>删除本地缓存ubuntu:16.04和localhost:5000/my-ubuntu 图像，以便您可以测试从注册表中提取图像。这不会localhost:5000/my-ubuntu从您的注册表中删除图像。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker image remove ubuntu:16.04</span><br><span class="line">docker image remove localhost:5000&#x2F;my-ubuntu</span><br><span class="line">或推送指定版本：</span><br><span class="line">docker image remove localhost:5000&#x2F;my-ubuntu:16.04</span><br></pre></td></tr></table></figure></li>
<li>localhost:5000/my-ubuntu从本地注册表中提取图像。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull localhost:5000&#x2F;my-ubuntu</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="案例-myhexo-容器"><a href="#案例-myhexo-容器" class="headerlink" title="案例 myhexo 容器"></a>案例 myhexo 容器</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">➜  wk-github-zdy docker images</span><br><span class="line">REPOSITORY            TAG            IMAGE ID       CREATED         SIZE</span><br><span class="line">myhexo                1.0            fcb95862615f   3 days ago      195MB</span><br><span class="line">redis                 latest         9fb1c428ea15   6 days ago      111MB</span><br><span class="line">oraclelinux           9              73ce309b1736   7 weeks ago     242MB</span><br><span class="line">registry              latest         4206ae70dd03   7 weeks ago     22.6MB</span><br><span class="line">mysql                 8.0            d56063370fd1   8 weeks ago     490MB</span><br><span class="line">mongo                 latest         8522acba0ea1   8 weeks ago     667MB</span><br><span class="line">elasticsearch         8.3.3          a21975dcd56a   2 months ago    657MB</span><br><span class="line">mongo-express         latest         ce615669da5e   11 months ago   136MB</span><br><span class="line">loululin&#x2F;dmanywhere   0.8.4-alpine   f346f25c02ec   2 years ago     37.3MB</span><br><span class="line">➜  wk-github-zdy docker tag myhexo:1.0 localhost:5001&#x2F;my-hexo</span><br><span class="line">➜  wk-github-zdy docker images</span><br><span class="line">REPOSITORY               TAG            IMAGE ID       CREATED         SIZE</span><br><span class="line">localhost:5001&#x2F;my-hexo   latest         fcb95862615f   3 days ago      195MB</span><br><span class="line">myhexo                   1.0            fcb95862615f   3 days ago      195MB</span><br><span class="line">redis                    latest         9fb1c428ea15   6 days ago      111MB</span><br><span class="line">oraclelinux              9              73ce309b1736   7 weeks ago     242MB</span><br><span class="line">registry                 latest         4206ae70dd03   7 weeks ago     22.6MB</span><br><span class="line">mysql                    8.0            d56063370fd1   8 weeks ago     490MB</span><br><span class="line">mongo                    latest         8522acba0ea1   8 weeks ago     667MB</span><br><span class="line">elasticsearch            8.3.3          a21975dcd56a   2 months ago    657MB</span><br><span class="line">mongo-express            latest         ce615669da5e   11 months ago   136MB</span><br><span class="line">loululin&#x2F;dmanywhere      0.8.4-alpine   f346f25c02ec   2 years ago     37.3MB</span><br><span class="line">➜  wk-github-zdy docker push localhost:5001&#x2F;my-hexo</span><br><span class="line">Using default tag: latest</span><br><span class="line">The push refers to repository [localhost:5001&#x2F;my-hexo]</span><br><span class="line">9d65187790aa: Pushed</span><br><span class="line">2cb39a2a325b: Pushed</span><br><span class="line">d3d59b289b09: Pushed</span><br><span class="line">2b49ce1e2b9c: Pushed</span><br><span class="line">958c20e8729d: Pushed</span><br><span class="line">089589b87ea4: Pushed</span><br><span class="line">9957769b57f7: Pushed</span><br><span class="line">6163139c6d2b: Pushed</span><br><span class="line">e7d566ca3222: Pushed</span><br><span class="line">7cce60e85825: Pushed</span><br><span class="line">9833f26c6bda: Pushed</span><br><span class="line">latest: digest: sha256:9747a0b5918c78739900d1f0a6db6883bb963859e7f842ed3ef7d933839ed6c0 size: 2610</span><br></pre></td></tr></table></figure>
<h1 id="若没配置-tag-提示权限不足"><a href="#若没配置-tag-提示权限不足" class="headerlink" title="若没配置 tag ,提示权限不足"></a>若没配置 tag ,提示权限不足</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">➜  wk-github-zdy docker push registry</span><br><span class="line">Using default tag: latest</span><br><span class="line">The push refers to repository [docker.io&#x2F;library&#x2F;registry]</span><br><span class="line">7096a4058a34: Layer already exists</span><br><span class="line">98a9ffbe5dec: Layer already exists</span><br><span class="line">3b937836dc53: Layer already exists</span><br><span class="line">bfaf09ad3403: Layer already exists</span><br><span class="line">5d3e392a13a0: Layer already exists</span><br><span class="line">errors:</span><br><span class="line">denied: requested access to the resource is denied</span><br><span class="line">unauthorized: authentication required</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>docker registry</category>
      </categories>
      <tags>
        <tag>docker-registry</tag>
      </tags>
  </entry>
  <entry>
    <title>通过配置文件启动registry</title>
    <url>/2022/09/29/depth-docker-docker-registry-20220929-%E9%80%9A%E8%BF%87%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%90%AF%E5%8A%A8registry/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>docker registry 配置注册表: <a href="https://docs.docker.com/registry/configuration/" target="_blank" rel="noopener">https://docs.docker.com/registry/configuration/</a></strong></li>
</ul>
<hr>
<h1 id="指定配置文件"><a href="#指定配置文件" class="headerlink" title="指定配置文件"></a>指定配置文件</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -d -p 5000:5000 --restart&#x3D;always --name registry \</span><br><span class="line">             -v &#96;pwd&#96;&#x2F;config.yml:&#x2F;etc&#x2F;docker&#x2F;registry&#x2F;config.yml \</span><br><span class="line">             registry:latest</span><br></pre></td></tr></table></figure>
<h2 id="配置文件案例"><a href="#配置文件案例" class="headerlink" title="配置文件案例"></a>配置文件案例</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">version: 0.1</span><br><span class="line">log:</span><br><span class="line">  accesslog:</span><br><span class="line">    disabled: true</span><br><span class="line">  level: debug</span><br><span class="line">  formatter: text</span><br><span class="line">  fields:</span><br><span class="line">    service: registry</span><br><span class="line">    environment: staging</span><br><span class="line">  hooks:</span><br><span class="line">    - type: mail</span><br><span class="line">      disabled: true</span><br><span class="line">      levels:</span><br><span class="line">        - panic</span><br><span class="line">      options:</span><br><span class="line">        smtp:</span><br><span class="line">          addr: mail.example.com:25</span><br><span class="line">          username: mailuser</span><br><span class="line">          password: password</span><br><span class="line">          insecure: true</span><br><span class="line">        from: sender@example.com</span><br><span class="line">        to:</span><br><span class="line">          - errors@example.com</span><br><span class="line">loglevel: debug # deprecated: use &quot;log&quot;</span><br><span class="line">storage:</span><br><span class="line">  filesystem:</span><br><span class="line">    rootdirectory: &#x2F;var&#x2F;lib&#x2F;registry</span><br><span class="line">    maxthreads: 100</span><br><span class="line">  azure:</span><br><span class="line">    accountname: accountname</span><br><span class="line">    accountkey: base64encodedaccountkey</span><br><span class="line">    container: containername</span><br><span class="line">  gcs:</span><br><span class="line">    bucket: bucketname</span><br><span class="line">    keyfile: &#x2F;path&#x2F;to&#x2F;keyfile</span><br><span class="line">    credentials:</span><br><span class="line">      type: service_account</span><br><span class="line">      project_id: project_id_string</span><br><span class="line">      private_key_id: private_key_id_string</span><br><span class="line">      private_key: private_key_string</span><br><span class="line">      client_email: client@example.com</span><br><span class="line">      client_id: client_id_string</span><br><span class="line">      auth_uri: http:&#x2F;&#x2F;example.com&#x2F;auth_uri</span><br><span class="line">      token_uri: http:&#x2F;&#x2F;example.com&#x2F;token_uri</span><br><span class="line">      auth_provider_x509_cert_url: http:&#x2F;&#x2F;example.com&#x2F;provider_cert_url</span><br><span class="line">      client_x509_cert_url: http:&#x2F;&#x2F;example.com&#x2F;client_cert_url</span><br><span class="line">    rootdirectory: &#x2F;gcs&#x2F;object&#x2F;name&#x2F;prefix</span><br><span class="line">    chunksize: 5242880</span><br><span class="line">  s3:</span><br><span class="line">    accesskey: awsaccesskey</span><br><span class="line">    secretkey: awssecretkey</span><br><span class="line">    region: us-west-1</span><br><span class="line">    regionendpoint: http:&#x2F;&#x2F;myobjects.local</span><br><span class="line">    bucket: bucketname</span><br><span class="line">    encrypt: true</span><br><span class="line">    keyid: mykeyid</span><br><span class="line">    secure: true</span><br><span class="line">    v4auth: true</span><br><span class="line">    chunksize: 5242880</span><br><span class="line">    multipartcopychunksize: 33554432</span><br><span class="line">    multipartcopymaxconcurrency: 100</span><br><span class="line">    multipartcopythresholdsize: 33554432</span><br><span class="line">    rootdirectory: &#x2F;s3&#x2F;object&#x2F;name&#x2F;prefix</span><br><span class="line">  swift:</span><br><span class="line">    username: username</span><br><span class="line">    password: password</span><br><span class="line">    authurl: https:&#x2F;&#x2F;storage.myprovider.com&#x2F;auth&#x2F;v1.0 or https:&#x2F;&#x2F;storage.myprovider.com&#x2F;v2.0 or https:&#x2F;&#x2F;storage.myprovider.com&#x2F;v3&#x2F;auth</span><br><span class="line">    tenant: tenantname</span><br><span class="line">    tenantid: tenantid</span><br><span class="line">    domain: domain name for Openstack Identity v3 API</span><br><span class="line">    domainid: domain id for Openstack Identity v3 API</span><br><span class="line">    insecureskipverify: true</span><br><span class="line">    region: fr</span><br><span class="line">    container: containername</span><br><span class="line">    rootdirectory: &#x2F;swift&#x2F;object&#x2F;name&#x2F;prefix</span><br><span class="line">  oss:</span><br><span class="line">    accesskeyid: accesskeyid</span><br><span class="line">    accesskeysecret: accesskeysecret</span><br><span class="line">    region: OSS region name</span><br><span class="line">    endpoint: optional endpoints</span><br><span class="line">    internal: optional internal endpoint</span><br><span class="line">    bucket: OSS bucket</span><br><span class="line">    encrypt: optional data encryption setting</span><br><span class="line">    secure: optional ssl setting</span><br><span class="line">    chunksize: optional size valye</span><br><span class="line">    rootdirectory: optional root directory</span><br><span class="line">  inmemory:  # This driver takes no parameters</span><br><span class="line">  delete:</span><br><span class="line">    enabled: false</span><br><span class="line">  redirect:</span><br><span class="line">    disable: false</span><br><span class="line">  cache:</span><br><span class="line">    blobdescriptor: redis</span><br><span class="line">  maintenance:</span><br><span class="line">    uploadpurging:</span><br><span class="line">      enabled: true</span><br><span class="line">      age: 168h</span><br><span class="line">      interval: 24h</span><br><span class="line">      dryrun: false</span><br><span class="line">    readonly:</span><br><span class="line">      enabled: false</span><br><span class="line">auth:</span><br><span class="line">  silly:</span><br><span class="line">    realm: silly-realm</span><br><span class="line">    service: silly-service</span><br><span class="line">  token:</span><br><span class="line">    autoredirect: true</span><br><span class="line">    realm: token-realm</span><br><span class="line">    service: token-service</span><br><span class="line">    issuer: registry-token-issuer</span><br><span class="line">    rootcertbundle: &#x2F;root&#x2F;certs&#x2F;bundle</span><br><span class="line">  htpasswd:</span><br><span class="line">    realm: basic-realm</span><br><span class="line">    path: &#x2F;path&#x2F;to&#x2F;htpasswd</span><br><span class="line">middleware:</span><br><span class="line">  registry:</span><br><span class="line">    - name: ARegistryMiddleware</span><br><span class="line">      options:</span><br><span class="line">        foo: bar</span><br><span class="line">  repository:</span><br><span class="line">    - name: ARepositoryMiddleware</span><br><span class="line">      options:</span><br><span class="line">        foo: bar</span><br><span class="line">  storage:</span><br><span class="line">    - name: cloudfront</span><br><span class="line">      options:</span><br><span class="line">        baseurl: https:&#x2F;&#x2F;my.cloudfronted.domain.com&#x2F;</span><br><span class="line">        privatekey: &#x2F;path&#x2F;to&#x2F;pem</span><br><span class="line">        keypairid: cloudfrontkeypairid</span><br><span class="line">        duration: 3000s</span><br><span class="line">        ipfilteredby: awsregion</span><br><span class="line">        awsregion: us-east-1, use-east-2</span><br><span class="line">        updatefrenquency: 12h</span><br><span class="line">        iprangesurl: https:&#x2F;&#x2F;ip-ranges.amazonaws.com&#x2F;ip-ranges.json</span><br><span class="line">  storage:</span><br><span class="line">    - name: redirect</span><br><span class="line">      options:</span><br><span class="line">        baseurl: https:&#x2F;&#x2F;example.com&#x2F;</span><br><span class="line">reporting:</span><br><span class="line">  bugsnag:</span><br><span class="line">    apikey: bugsnagapikey</span><br><span class="line">    releasestage: bugsnagreleasestage</span><br><span class="line">    endpoint: bugsnagendpoint</span><br><span class="line">  newrelic:</span><br><span class="line">    licensekey: newreliclicensekey</span><br><span class="line">    name: newrelicname</span><br><span class="line">    verbose: true</span><br><span class="line">http:</span><br><span class="line">  addr: localhost:5000</span><br><span class="line">  prefix: &#x2F;my&#x2F;nested&#x2F;registry&#x2F;</span><br><span class="line">  host: https:&#x2F;&#x2F;myregistryaddress.org:5000</span><br><span class="line">  secret: asecretforlocaldevelopment</span><br><span class="line">  relativeurls: false</span><br><span class="line">  draintimeout: 60s</span><br><span class="line">  tls:</span><br><span class="line">    certificate: &#x2F;path&#x2F;to&#x2F;x509&#x2F;public</span><br><span class="line">    key: &#x2F;path&#x2F;to&#x2F;x509&#x2F;private</span><br><span class="line">    clientcas:</span><br><span class="line">      - &#x2F;path&#x2F;to&#x2F;ca.pem</span><br><span class="line">      - &#x2F;path&#x2F;to&#x2F;another&#x2F;ca.pem</span><br><span class="line">    letsencrypt:</span><br><span class="line">      cachefile: &#x2F;path&#x2F;to&#x2F;cache-file</span><br><span class="line">      email: emailused@letsencrypt.com</span><br><span class="line">      hosts: [myregistryaddress.org]</span><br><span class="line">  debug:</span><br><span class="line">    addr: localhost:5001</span><br><span class="line">    prometheus:</span><br><span class="line">      enabled: true</span><br><span class="line">      path: &#x2F;metrics</span><br><span class="line">  headers:</span><br><span class="line">    X-Content-Type-Options: [nosniff]</span><br><span class="line">  http2:</span><br><span class="line">    disabled: false</span><br><span class="line">notifications:</span><br><span class="line">  events:</span><br><span class="line">    includereferences: true</span><br><span class="line">  endpoints:</span><br><span class="line">    - name: alistener</span><br><span class="line">      disabled: false</span><br><span class="line">      url: https:&#x2F;&#x2F;my.listener.com&#x2F;event</span><br><span class="line">      headers: &lt;http.Header&gt;</span><br><span class="line">      timeout: 1s</span><br><span class="line">      threshold: 10</span><br><span class="line">      backoff: 1s</span><br><span class="line">      ignoredmediatypes:</span><br><span class="line">        - application&#x2F;octet-stream</span><br><span class="line">      ignore:</span><br><span class="line">        mediatypes:</span><br><span class="line">           - application&#x2F;octet-stream</span><br><span class="line">        actions:</span><br><span class="line">           - pull</span><br><span class="line">redis:</span><br><span class="line">  addr: localhost:6379</span><br><span class="line">  password: asecret</span><br><span class="line">  db: 0</span><br><span class="line">  dialtimeout: 10ms</span><br><span class="line">  readtimeout: 10ms</span><br><span class="line">  writetimeout: 10ms</span><br><span class="line">  pool:</span><br><span class="line">    maxidle: 16</span><br><span class="line">    maxactive: 64</span><br><span class="line">    idletimeout: 300s</span><br><span class="line">health:</span><br><span class="line">  storagedriver:</span><br><span class="line">    enabled: true</span><br><span class="line">    interval: 10s</span><br><span class="line">    threshold: 3</span><br><span class="line">  file:</span><br><span class="line">    - file: &#x2F;path&#x2F;to&#x2F;checked&#x2F;file</span><br><span class="line">      interval: 10s</span><br><span class="line">  http:</span><br><span class="line">    - uri: http:&#x2F;&#x2F;server.to.check&#x2F;must&#x2F;return&#x2F;200</span><br><span class="line">      headers:</span><br><span class="line">        Authorization: [Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ&#x3D;&#x3D;]</span><br><span class="line">      statuscode: 200</span><br><span class="line">      timeout: 3s</span><br><span class="line">      interval: 10s</span><br><span class="line">      threshold: 3</span><br><span class="line">  tcp:</span><br><span class="line">    - addr: redis-server.domain.com:6379</span><br><span class="line">      timeout: 3s</span><br><span class="line">      interval: 10s</span><br><span class="line">      threshold: 3</span><br><span class="line">proxy:</span><br><span class="line">  remoteurl: https:&#x2F;&#x2F;registry-1.docker.io</span><br><span class="line">  username: [username]</span><br><span class="line">  password: [password]</span><br><span class="line">compatibility:</span><br><span class="line">  schema1:</span><br><span class="line">    signingkeyfile: &#x2F;etc&#x2F;registry&#x2F;key.json</span><br><span class="line">    enabled: true</span><br><span class="line">validation:</span><br><span class="line">  manifests:</span><br><span class="line">    urls:</span><br><span class="line">      allow:</span><br><span class="line">        - ^https?:&#x2F;&#x2F;([^&#x2F;]+\.)*example\.com&#x2F;</span><br><span class="line">      deny:</span><br><span class="line">        - ^https?:&#x2F;&#x2F;www\.example\.com&#x2F;</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>docker registry</category>
      </categories>
      <tags>
        <tag>docker-registry</tag>
      </tags>
  </entry>
  <entry>
    <title>docker redis中版本号查看</title>
    <url>/2022/09/28/depth-docker-docker-redis-20220928-docker-redis%E7%89%88%E6%9C%AC%E6%9F%A5%E7%9C%8B/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="执行命令如下"><a href="#执行命令如下" class="headerlink" title="执行命令如下"></a>执行命令如下</h1><p>docker exec -it myredis redis-server -v</p>
<blockquote>
<p>myredis为容器名称</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>docker redis</category>
      </categories>
      <tags>
        <tag>docker-redis</tag>
      </tags>
  </entry>
  <entry>
    <title>使用docker启动redis容器失败的原因</title>
    <url>/2022/09/28/depth-docker-docker-redis-20220928-%E4%BD%BF%E7%94%A8docker%E5%90%AF%E5%8A%A8redis%E5%AE%B9%E5%99%A8%E5%A4%B1%E8%B4%A5%E7%9A%84%E5%8E%9F%E5%9B%A0/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>使用docker启动redis容器失败的原因：<a href="https://blog.csdn.net/m0_67402774/article/details/126553643" target="_blank" rel="noopener">https://blog.csdn.net/m0_67402774/article/details/126553643</a></strong></li>
</ul>
<hr>
<h1 id="使用docker启动redis容器失败的原因"><a href="#使用docker启动redis容器失败的原因" class="headerlink" title="使用docker启动redis容器失败的原因"></a>使用docker启动redis容器失败的原因</h1><h2 id="启动执行命令"><a href="#启动执行命令" class="headerlink" title="启动执行命令"></a>启动执行命令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -p 6379:6379 --name redis -v &#x2F;root&#x2F;guli&#x2F;redis&#x2F;redis.conf:&#x2F;etc&#x2F;redis&#x2F;redis.conf -d redis redis-server &#x2F;etc&#x2F;redis&#x2F;redis.conf</span><br></pre></td></tr></table></figure>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>发现一启动，就停止。<br>后来，去网上查了以后发现，是因为redis.conf文件中的daemonize为yes，意思是redis服务在后台运行，与docker中的-d参数冲突了。<br>只要把daemonize的参数值改为no就可以了，再次执行以上命令，容器启动成功。</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>docker redis</category>
      </categories>
      <tags>
        <tag>docker-redis</tag>
      </tags>
  </entry>
  <entry>
    <title>解决创建redis容器没有conf配置文件</title>
    <url>/2022/09/28/depth-docker-docker-redis-20220928-%E8%A7%A3%E5%86%B3%E5%88%9B%E5%BB%BAredis%E5%AE%B9%E5%99%A8%E6%B2%A1%E6%9C%89conf%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>解决创建redis容器没有conf配置文件: <a href="https://longsheng.org/post/18174.html" target="_blank" rel="noopener">https://longsheng.org/post/18174.html</a></strong></li>
</ul>
<hr>
<h1 id="解决创建redis容器没有conf配置文件"><a href="#解决创建redis容器没有conf配置文件" class="headerlink" title="解决创建redis容器没有conf配置文件"></a>解决创建redis容器没有conf配置文件</h1><ol>
<li>如果通过以下命令创建redis容器，docker redis中会出现 redis.conf 文件夹<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -d -p 6379:6379 --restart&#x3D;always -v  &#x2F;Users&#x2F;diabolo&#x2F;work&#x2F;workspace&#x2F;wk-docker&#x2F;docker-redis&#x2F;6379&#x2F;redis.conf:&#x2F;etc&#x2F;redis&#x2F;redis.conf  -v &#x2F;Users&#x2F;diabolo&#x2F;work&#x2F;workspace&#x2F;wk-docker&#x2F;docker-redis&#x2F;6379&#x2F;data:&#x2F;data   --name myredis redis:latest redis-server &#x2F;etc&#x2F;redis&#x2F;redis.conf</span><br></pre></td></tr></table></figure></li>
<li>解决</li>
</ol>
<ul>
<li>首先应该在宿主机路径下创建 redis.conf 文件</li>
<li>然后再通过命令创建容器</li>
<li>否则容器会将 redis.conf 以文件夹的形式关联创建</li>
</ul>
<h1 id="参数解释"><a href="#参数解释" class="headerlink" title="参数解释"></a>参数解释</h1><ul>
<li>-v /usr/local/redis/redis.conf:/etc/redis.conf：映射配置文件</li>
<li>-v /root/usr/local/redis/data:/data：映射数据目录</li>
</ul>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>docker redis</category>
      </categories>
      <tags>
        <tag>docker-redis</tag>
      </tags>
  </entry>
  <entry>
    <title>docker redis容器创建方式</title>
    <url>/2022/09/28/depth-docker-docker-redis-20220928-docker-redis%E5%AE%B9%E5%99%A8%E5%88%9B%E5%BB%BA%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="docker-redis容器创建方式"><a href="#docker-redis容器创建方式" class="headerlink" title="docker redis容器创建方式"></a>docker redis容器创建方式</h1><ol>
<li>通过命令创建<br>docker run -d –name redis -p 6379:6379 redis:latest redis-server –appendonly yes –requirepass “你的密码”</li>
<li>通过数据卷挂载创建<br>docker run -d -p 6379:6379 –restart=always -v  /Users/diabolo/work/workspace/wk-docker/docker-redis/6379/redis.conf:/etc/redis/redis.conf  -v /Users/diabolo/work/workspace/wk-docker/docker-redis/6379/data:/data   –name myredis redis:latest redis-server /etc/redis/redis.conf</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>docker redis</category>
      </categories>
      <tags>
        <tag>docker-redis</tag>
      </tags>
  </entry>
  <entry>
    <title>docker run其他参数</title>
    <url>/2022/09/28/depth-docker-notes-20220928-docker-run%E5%85%B6%E4%BB%96%E5%8F%82%E6%95%B0/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="docker-run其他参数"><a href="#docker-run其他参数" class="headerlink" title="docker run其他参数"></a>docker run其他参数</h1><h2 id="–privileged-true"><a href="#–privileged-true" class="headerlink" title="–privileged=true"></a>–privileged=true</h2><p>–privileged=true表示让启动的容器用户具备真正root权限</p>
<h2 id="–restart-always参数能够使我们在重启docker时，自动启动相关容器。"><a href="#–restart-always参数能够使我们在重启docker时，自动启动相关容器。" class="headerlink" title="–restart=always参数能够使我们在重启docker时，自动启动相关容器。"></a>–restart=always参数能够使我们在重启docker时，自动启动相关容器。</h2><p>Docker容器的重启策略如下：</p>
<ul>
<li>no，默认策略，在容器退出时不重启容器</li>
<li>on-failure，在容器非正常退出时（退出状态非0），才会重启容器</li>
<li>on-failure:3，在容器非正常退出时重启容器，最多重启3次</li>
<li>always，在容器退出时总是重启容器</li>
<li>unless-stopped，在容器退出时总是重启容器，但是不考虑在Docker守护进程启动时就已经停止了的容器<blockquote>
<p>如果创建的时候没有创建这个参数，则可以通过此命令添加： docker container update –restart=always 容器名字<br>还可以通过修改容器的配置文件来修尽管这个参数，首先停止容器，不然无法修改配置文件<br>配置默认文件路径为：/var/lib/docker/containers/容器ID<br>在该目录下找到一个文件 hostconfig.json ，找到该文件中关键字 RestartPolicy<br>修改前配置：“RestartPolicy”:{“Name”:“no”,“MaximumRetryCount”:0}<br>修改后配置：“RestartPolicy”:{“Name”:“always”,“MaximumRetryCount”:0}<br>最后启动容器。</p>
</blockquote>
</li>
</ul>
<h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">docker run -p 6001:6001 -d -it --name myhexo1 -v &#x2F;Users&#x2F;diabolo&#x2F;work&#x2F;workspace&#x2F;wk-github&#x2F;wk-github-zdy&#x2F;diabolo-hub-source-code&#x2F;:&#x2F;usr&#x2F;blog&#x2F;diabolo-hub&#x2F; myhexo:1.0</span><br><span class="line"></span><br><span class="line">docker run -d --name redis -p 6379:6379 redis:latest redis-server --appendonly yes --requirepass &quot;你的密码&quot;</span><br><span class="line"></span><br><span class="line">docker run -d -p 6379:6379 --restart&#x3D;always --privileged&#x3D;true  -v  &#x2F;var&#x2F;redis&#x2F;redis.conf:&#x2F;etc&#x2F;redis&#x2F;redis.conf  -v &#x2F;var&#x2F;redis&#x2F;data:&#x2F;data   --name myredis redis:6.0.8 redis-server  &#x2F;etc&#x2F;redis&#x2F;redis.conf</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>depth-docker-compose-疑问-20220927-疑问点</title>
    <url>/2022/09/27/depth-docker-compose-%E7%96%91%E9%97%AE-20220927-%E7%96%91%E9%97%AE%E7%82%B9/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>一是，docker-compose和docker-engine可以分开装在不同的节点上么，就像docker-cli和docker-engine，若可以是不是需要一些配置；</p>
<p>二是，docker-compose.yml里面的service可不可以按照先后顺序启动，不如第一个service启动完成后，第二个service才启动</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>docker-compose命令</title>
    <url>/2022/09/27/depth-docker-compose-notes-20220927-docker-compose%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>Docker Compose介绍及使用入门: <a href="https://www.jianshu.com/p/ee2fea4136f0" target="_blank" rel="noopener">https://www.jianshu.com/p/ee2fea4136f0</a></strong></li>
<li><strong>docker-compose简介及使用: <a href="https://www.cnblogs.com/xiaoyuxixi/p/12738325.html" target="_blank" rel="noopener">https://www.cnblogs.com/xiaoyuxixi/p/12738325.html</a></strong></li>
</ul>
<hr>
<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><ul>
<li>docker-compose up，构建镜像并启动容器；</li>
<li>docker-compose down，停止容器，删除容器，移除自定义网络<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">E:\myapp&gt;docker-compose down</span><br><span class="line">Stopping myapp ... done</span><br><span class="line">Removing myapp ... done</span><br><span class="line">Removing network myapp_default</span><br></pre></td></tr></table></figure></li>
<li>docker-compose ls，查看所有运行的容器</li>
<li>docker-compose logs -f container_name，查看具体容器的日志，-f参数表示实时日志输出；</li>
<li>docker-compose port container_name container_port，查看和容器端口绑定的主机端口；</li>
<li>docker-compose stop container_name，停止指定的容器，如果不指定则停止所有的容器；</li>
<li>docker-compose start container_name，启动指定的容器，如果不指定则停止所有的容器；</li>
<li>docker-compose rm container_name，删除指定的已停止容器，如果不指定则删除所有已停止容器；</li>
<li>docker-compose build，构建或者重新构建服务的镜像，但不会创建和启动容器</li>
</ul>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker-compose</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>docker-compose</tag>
      </tags>
  </entry>
  <entry>
    <title>compose.yml案例2</title>
    <url>/2022/09/27/depth-docker-compose-%E6%A1%88%E4%BE%8B-20220927-compose-yml%E6%A1%88%E4%BE%8B2/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 使用的yml版本</span><br><span class="line">version: &quot;3.9&quot;</span><br><span class="line">services:</span><br><span class="line">  # 服务名称，可以自定义</span><br><span class="line">  myapp:</span><br><span class="line">    # 容器名称，可以自定义</span><br><span class="line">    container_name: myapp</span><br><span class="line">    # 指定Dockerfile所在的目录</span><br><span class="line">    build: .</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;8080:8080&quot;</span><br></pre></td></tr></table></figure>
<h1 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h1><p>然后执行docker-compose up即可，主要完成以下的两步操作：</p>
<ul>
<li>镜像构建docker build；</li>
<li>启动yml中的所有容器docker run；<h2 id="执行过程"><a href="#执行过程" class="headerlink" title="执行过程"></a>执行过程</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">E:\myapp&gt;docker-compose up</span><br><span class="line"># 创建了默认类型的自定义网络，即bridge类型网络，而非使用默认的docker0桥接网络，拥有自己的独立网段，可以通过docker network ls及docker network inspect查看具体的网络信息</span><br><span class="line">Creating network &quot;myapp_default&quot; with the default driver</span><br><span class="line">Building myapp</span><br><span class="line">[+] Building 0.5s (7&#x2F;7) FINISHED</span><br><span class="line"> &#x3D;&gt; [internal] load build definition from Dockerfile                                                                                 0.0s</span><br><span class="line"> &#x3D;&gt; &#x3D;&gt; transferring dockerfile: 153B                                                                                                 0.0s</span><br><span class="line"> &#x3D;&gt; [internal] load .dockerignore                                                                                                    0.0s</span><br><span class="line"> &#x3D;&gt; &#x3D;&gt; transferring context: 2B                                                                                                      0.0s</span><br><span class="line"> &#x3D;&gt; [internal] load metadata for docker.io&#x2F;library&#x2F;openjdk:8                                                                         0.0s</span><br><span class="line"> &#x3D;&gt; [internal] load build context                                                                                                    0.2s</span><br><span class="line"> &#x3D;&gt; &#x3D;&gt; transferring context: 17.62MB                                                                                                 0.1s</span><br><span class="line"> &#x3D;&gt; CACHED [1&#x2F;2] FROM docker.io&#x2F;library&#x2F;openjdk:8                                                                                    0.0s</span><br><span class="line"> &#x3D;&gt; [2&#x2F;2] ADD  target&#x2F;myapp-0.0.1-SNAPSHOT.jar &#x2F;demo.jar                                                                             0.1s</span><br><span class="line"> &#x3D;&gt; exporting to image                                                                                                               0.1s</span><br><span class="line"> &#x3D;&gt; &#x3D;&gt; exporting layers                                                                                                              0.1s</span><br><span class="line"> # 将镜像写入本地的镜像仓库，并以项目名称_服务名称命名镜像</span><br><span class="line"> &#x3D;&gt; &#x3D;&gt; writing image sha256:c387978706931f09fa16a737704f2c1047e8f632de192a25b0dc42dc151ac4c7                                         0.0s</span><br><span class="line"> &#x3D;&gt; &#x3D;&gt; naming to docker.io&#x2F;library&#x2F;myapp_myapp                                                                                       0.0s</span><br><span class="line"></span><br><span class="line">Use &#39;docker scan&#39; to run Snyk tests against images to find vulnerabilities and learn how to fix them</span><br><span class="line">WARNING: Image for service myapp was built because it did not already exist. To rebuild this image you must use &#96;docker-compose build&#96; or &#96;docker-compose up --build&#96;.</span><br><span class="line">Creating myapp ... done</span><br><span class="line">Attaching to myapp</span><br><span class="line">myapp    |</span><br><span class="line">myapp    |   .   ____          _            __ _ _</span><br><span class="line">myapp    |  &#x2F;\\ &#x2F; ___&#39;_ __ _ _(_)_ __  __ _ \ \ \ \</span><br><span class="line">myapp    | ( ( )\___ | &#39;_ | &#39;_| | &#39;_ \&#x2F; _&#96; | \ \ \ \</span><br><span class="line">myapp    |  \\&#x2F;  ___)| |_)| | | | | || (_| |  ) ) ) )</span><br><span class="line">myapp    |   &#39;  |____| .__|_| |_|_| |_\__, | &#x2F; &#x2F; &#x2F; &#x2F;</span><br><span class="line">myapp    |  &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|_|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|___&#x2F;&#x3D;&#x2F;_&#x2F;_&#x2F;_&#x2F;</span><br><span class="line">myapp    |  :: Spring Boot ::                (v2.6.0)</span><br><span class="line">......</span><br></pre></td></tr></table></figure>
</li>
</ul>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker-compose</category>
        <category>yml案例</category>
      </categories>
      <tags>
        <tag>docker-compose</tag>
      </tags>
  </entry>
  <entry>
    <title>docker-compose.yml案例</title>
    <url>/2022/09/27/depth-docker-compose-%E6%A1%88%E4%BE%8B-20220927-docker-compose%E6%A1%88%E4%BE%8B1/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="docker-compose-源码实例"><a href="#docker-compose-源码实例" class="headerlink" title="docker-compose 源码实例"></a>docker-compose 源码实例</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#docker-Compse的版本</span><br><span class="line">version: &#39;3&#39;</span><br><span class="line"></span><br><span class="line">#建立2个service 一个wordpress 一个 mysql</span><br><span class="line">services:</span><br><span class="line">  wordpress:</span><br><span class="line">    image: wordpress</span><br><span class="line">    #端口映射80 映射到8080端口</span><br><span class="line">    ports:</span><br><span class="line">      - 8080:80</span><br><span class="line">    #环境变量2个</span><br><span class="line">    environment:</span><br><span class="line">      WORDPRESS_DB_HOST: mysql</span><br><span class="line">      WORDPRESS_DB_PASSWORD: root</span><br><span class="line">    networks:</span><br><span class="line">      - my-bridge</span><br><span class="line"></span><br><span class="line">  mysql:</span><br><span class="line">    image: mysql</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: root</span><br><span class="line">      MYSQL_DATABASE: wordpress</span><br><span class="line">    volumes:</span><br><span class="line">      - mysql-data:&#x2F;var&#x2F;lib&#x2F;mysql</span><br><span class="line">    networks:</span><br><span class="line">      - my-bridge</span><br><span class="line">#建立一个volumes</span><br><span class="line">volumes:</span><br><span class="line">  mysql-data:</span><br><span class="line">#建立一个networks</span><br><span class="line">networks:</span><br><span class="line">  my-bridge:</span><br><span class="line">    driver: bridge</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker-compose</category>
        <category>yml案例</category>
      </categories>
      <tags>
        <tag>docker-compose</tag>
      </tags>
  </entry>
  <entry>
    <title>mac用户查看</title>
    <url>/2022/09/26/mac-20220926-mac%E7%94%A8%E6%88%B7%E6%9F%A5%E7%9C%8B/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="当前用户的用户名"><a href="#当前用户的用户名" class="headerlink" title="当前用户的用户名"></a>当前用户的用户名</h1><p>whoami</p>
<h1 id="切换到root超级用户-—-需要输入密码"><a href="#切换到root超级用户-—-需要输入密码" class="headerlink" title="切换到root超级用户 —- 需要输入密码"></a>切换到root超级用户 —- 需要输入密码</h1><p>sudo -i</p>
<h1 id="su-要切换到的用户名-切换到某一个普通用户-注意-横杠两边都有一个空格"><a href="#su-要切换到的用户名-切换到某一个普通用户-注意-横杠两边都有一个空格" class="headerlink" title="su - 要切换到的用户名 // 切换到某一个普通用户 注意:横杠两边都有一个空格"></a>su - 要切换到的用户名 // 切换到某一个普通用户 注意:横杠两边都有一个空格</h1><p>su - diabolo，切换到 diabolo</p>
<h1 id="查看当前目录下所有文件的读写属性"><a href="#查看当前目录下所有文件的读写属性" class="headerlink" title="查看当前目录下所有文件的读写属性"></a>查看当前目录下所有文件的读写属性</h1><p>ls -l</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>mac</category>
      </categories>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>su、sudo、sudo su、sudo -i使用和区别</title>
    <url>/2022/09/26/mac-20220926-su%E3%80%81sudo%E3%80%81sudo-su%E3%80%81sudo-i%E4%BD%BF%E7%94%A8%E5%92%8C%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li>**su、sudo、sudo su、sudo -i使用和区别: <a href="https://zhuanlan.zhihu.com/p/250665300" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/250665300</a></li>
</ul>
<hr>
<h1 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h1><h2 id="密码"><a href="#密码" class="headerlink" title="密码"></a>密码</h2><ol>
<li>sudo 需要输入当前用户的密码</li>
<li>su 需要输入 root 用户的密码<h2 id="行为"><a href="#行为" class="headerlink" title="行为"></a>行为</h2></li>
<li>sudo 只允许使用提升的权限运行单个命令</li>
<li>su 启动一个新的shell，同时允许使用 root 权限运行尽可能多的命令，直到明确退出</li>
</ol>
<h2 id="su-介绍"><a href="#su-介绍" class="headerlink" title="su 介绍"></a>su 介绍</h2><p>su 用以切换不同的用户的身份</p>
<ol>
<li>su - diabolo, su - root<br>默认只是切换身份，并没有切换环境变量，环境变量依然是普通用户的。<br>切换用户身份时，用户的环境变量也切换成新用户的环境变量,所以”-“不能省略,不然有些操作无法执行。<br>su root 输入root密码后切换之root用户但是pwd目录不变<br>su - root 输入root密码后切换之root用户但是pwd目录/root</li>
</ol>
<h2 id="sudo-介绍"><a href="#sudo-介绍" class="headerlink" title="sudo 介绍"></a>sudo 介绍</h2><p>sudo 一般加的是命令sudo -i root与sudo - root、sudo -i ,sudo - ，sudo root效果相同</p>
<p>sudo -i 直接运行sudo命令加-i参数 要求执行该命令的用户必须在sudoers中才可以</p>
<p>sudo su 运行sudo命令给su命令提权，运行su命令。要求执行该命令的用户必须在sudoers中才可以</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>mac</category>
      </categories>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>修改文件所属用户</title>
    <url>/2022/09/26/mac-20220926-%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E6%89%80%E5%B1%9E%E7%94%A8%E6%88%B7/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="由于-db-json-属于-root，一直执行失败，提示没权限"><a href="#由于-db-json-属于-root，一直执行失败，提示没权限" class="headerlink" title="由于 db.json 属于 root，一直执行失败，提示没权限"></a>由于 db.json 属于 root，一直执行失败，提示没权限</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zhangdaiyindeMacBook-Pro:diabolo-hub-source-code root# ls -l</span><br><span class="line">total 10632</span><br><span class="line">drwxr-xr-x   16 diabolo  staff      512 Sep 26 14:24 .git</span><br><span class="line">-rw-r--r--    1 diabolo  staff       66 Jul 10 22:48 .gitattributes</span><br><span class="line">-rw-r--r--    1 diabolo  staff       74 Jul 10 22:48 .gitignore</span><br><span class="line">drwxr-xr-x   10 diabolo  staff      320 Sep 26 14:20 .idea</span><br><span class="line">-rw-r--r--    1 diabolo  staff      934 Sep 23 17:29 Dockerfile-bak</span><br><span class="line">-rw-r--r--    1 diabolo  staff     1628 Sep 26 14:09 Dockerfile-hexo</span><br><span class="line">-rw-r--r--    1 diabolo  staff     2145 Sep 26 11:41 Dockerfile-pm2</span><br><span class="line">-rw-r--r--    1 diabolo  staff      640 Jul 10 22:48 README.md</span><br><span class="line">-rw-r--r--    1 diabolo  staff     3288 Aug  3 14:13 _config.yml</span><br><span class="line">-rw-r--r--    1 root     staff  4013230 Sep 26 11:38 db.json</span><br><span class="line">-rw-r--r--    1 diabolo  staff      184 Sep 26 10:42 entrypoint.sh</span><br><span class="line">-rw-r--r--    1 diabolo  staff      262 Sep 20 15:24 hexo_run.js</span><br><span class="line">drwxr-xr-x  374 diabolo  staff    11968 Sep 16 14:29 node_modules</span><br><span class="line">-rw-r--r--    1 diabolo  staff   458034 Sep 16 14:29 package-lock.json</span><br><span class="line">-rw-r--r--    1 diabolo  staff      969 Sep 16 14:29 package.json</span><br><span class="line">drwxr-xr-x   28 root     staff      896 Sep 26 11:21 public</span><br><span class="line">drwxr-xr-x    5 diabolo  staff      160 Jul 10 22:48 scaffolds</span><br><span class="line">drwxr-xr-x   10 diabolo  staff      320 Aug  3 14:13 source</span><br><span class="line">drwxr-xr-x    5 diabolo  staff      160 Jul 10 22:48 themes</span><br><span class="line">drwxr-xr-x    4 diabolo  staff      128 Aug  3 14:13 uploadPhotos</span><br><span class="line">-rw-r--r--    1 diabolo  staff     1430 Sep  5 14:47 ????????????????????????docker-hexo.md</span><br></pre></td></tr></table></figure>
<h1 id="将-db-json-文件和-public-文件夹修改为-diabolo-用户所有"><a href="#将-db-json-文件和-public-文件夹修改为-diabolo-用户所有" class="headerlink" title="将 db.json 文件和 public 文件夹修改为 diabolo 用户所有"></a>将 db.json 文件和 public 文件夹修改为 diabolo 用户所有</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo chown diabolo:staff db.json</span><br><span class="line">sudo chown diabolo:staff public</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>mac</category>
      </categories>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>部署到github</title>
    <url>/2022/09/26/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E9%83%A8%E7%BD%B2%E5%88%B0github/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="deploy配置"><a href="#deploy配置" class="headerlink" title="deploy配置"></a>deploy配置</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:diabolo-hub&#x2F;xxx.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line">  token: &#39;ghp_b...&#39;</span><br><span class="line">  message:</span><br><span class="line">  name: diabolo-hub</span><br><span class="line">  email: zhangdaiyin.cool@163.com</span><br></pre></td></tr></table></figure>
<h1 id="token配置"><a href="#token配置" class="headerlink" title="token配置"></a>token配置</h1><p><a href="https://blog.csdn.net/qq_43659183/article/details/126041835" target="_blank" rel="noopener">使用personal token将hexo本地文件推到GitHub</a></p>
<ol>
<li>个人设置中心</li>
<li>左侧底部的开发者中心</li>
<li>创建一个 personal token，权限勾选第一个 repo 即可，点击底部创建token</li>
</ol>
<h1 id="提示权限不足时，需要重新生成token并验证"><a href="#提示权限不足时，需要重新生成token并验证" class="headerlink" title="提示权限不足时，需要重新生成token并验证"></a>提示权限不足时，需要重新生成token并验证</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">➜  diabolo-hub-source-code git:(first_code) ✗ hexo deploy</span><br><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">INFO  Copying files from extend dirs...</span><br><span class="line">On branch master</span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">ssh_dispatch_run_fatal: Connection to 20.205.243.166 port 22: Operation timed out</span><br><span class="line">fatal: Could not read from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br><span class="line">FATAL Something&#39;s wrong. Maybe you can find the solution here: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;troubleshooting.html</span><br><span class="line">Error</span><br><span class="line">    at ChildProcess.&lt;anonymous&gt; (&#x2F;Users&#x2F;diabolo&#x2F;work&#x2F;workspace&#x2F;wk-github&#x2F;wk-github-zdy&#x2F;diabolo-hub-source-code&#x2F;node_modules&#x2F;hexo-util&#x2F;lib&#x2F;spawn.js:37:17)</span><br><span class="line">    at ChildProcess.emit (node:events:513:28)</span><br><span class="line">    at maybeClose (node:internal&#x2F;child_process:1093:16)</span><br><span class="line">    at Process.ChildProcess._handle.onexit (node:internal&#x2F;child_process:302:5)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>若token无误，还是提示权限不足，可能是发布目录中存在文件 或 文件夹 的操作权限不足，如 root 读写权限，普通用户构建发布</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>docker logs 日志查询</title>
    <url>/2022/09/26/depth-docker-notes-20220926-docker-logs-%E6%97%A5%E5%BF%97%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>Docker日志查看命令:<a href="https://blog.csdn.net/begefefsef/article/details/126327588" target="_blank" rel="noopener">https://blog.csdn.net/begefefsef/article/details/126327588</a> </strong></li>
</ul>
<hr>
<h1 id="简单日志查询"><a href="#简单日志查询" class="headerlink" title="简单日志查询"></a>简单日志查询</h1><p>docker logs 容器id</p>
<h1 id="滚动日志查看"><a href="#滚动日志查看" class="headerlink" title="滚动日志查看"></a>滚动日志查看</h1><p>docker logs -f 容器ID</p>
<h1 id="自动更新，展示最后指定300行数的日志"><a href="#自动更新，展示最后指定300行数的日志" class="headerlink" title="自动更新，展示最后指定300行数的日志"></a>自动更新，展示最后指定300行数的日志</h1><p>docker logs -f –tail=300 容器id</p>
<h1 id="查看最近30分钟的日志"><a href="#查看最近30分钟的日志" class="headerlink" title="查看最近30分钟的日志"></a>查看最近30分钟的日志</h1><p>docker logs –since 30m 容器ID</p>
<h1 id="查看某时间之后的日志的最新500条日志："><a href="#查看某时间之后的日志的最新500条日志：" class="headerlink" title="查看某时间之后的日志的最新500条日志："></a>查看某时间之后的日志的最新500条日志：</h1><p>docker logs –since=”2021-11-30” –tail=500 容器ID</p>
<h1 id="查看某时间之后的日志："><a href="#查看某时间之后的日志：" class="headerlink" title="查看某时间之后的日志："></a>查看某时间之后的日志：</h1><p>docker logs -t –since=”2021-11-30T00:00:00” 容器ID</p>
<h1 id="查看某时间段日志："><a href="#查看某时间段日志：" class="headerlink" title="查看某时间段日志："></a>查看某时间段日志：</h1><p>docker logs -t –since=”2021-11-30T00:00:00” –until “2021-12-30T00:00:00” 容器ID</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Dockerfiler如何使用多个CMD命令</title>
    <url>/2022/09/26/depth-docker-notes-20220927-Dockerfiler%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%A4%9A%E4%B8%AACMD%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Dockerfiler如何使用多个CMD命令"><a href="#Dockerfiler如何使用多个CMD命令" class="headerlink" title="Dockerfiler如何使用多个CMD命令"></a>Dockerfiler如何使用多个CMD命令</h1><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>一个是CMD不用中括号框起来，将命令用”&amp;&amp;”符号链接：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 用nohup框起来，不然npm start执行了之后不会执行后面的</span><br><span class="line">CMD nohup sh -c &#39;npm start &amp;&amp; node .&#x2F;server&#x2F;server.js&#39;</span><br></pre></td></tr></table></figure></p>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>不用CMD，用ENTRYPOINT命令，指定一个执行的shell脚本，然后在entrypoint.sh文件中写上要执行的命令：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ENTRYPOINT [&quot;.&#x2F;entrypoint.sh&quot;]</span><br></pre></td></tr></table></figure><br>entrypoint.sh文件如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; entrypoint.sh</span><br><span class="line">nohup npm start &amp;</span><br><span class="line"></span><br><span class="line">nohup node .&#x2F;server&#x2F;server.js &amp;</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>容器运行后退出，仍然保持一直运行</title>
    <url>/2022/09/26/depth-docker-notes-20220926-%E5%AE%B9%E5%99%A8%E8%BF%90%E8%A1%8C%E5%90%8E%E9%80%80%E5%87%BA%EF%BC%8C%E4%BB%8D%E7%84%B6%E4%BF%9D%E6%8C%81%E4%B8%80%E7%9B%B4%E8%BF%90%E8%A1%8C/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="使用命令一直循环打印日志"><a href="#使用命令一直循环打印日志" class="headerlink" title="使用命令一直循环打印日志"></a>使用命令一直循环打印日志</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -p 6001:6001 -d -it --name myhexo2 -v &#x2F;Users&#x2F;diabolo&#x2F;work&#x2F;workspace&#x2F;wk-github&#x2F;wk-github-zdy&#x2F;diabolo-hub-source-code&#x2F;:&#x2F;usr&#x2F;blog&#x2F; myhexo:1.2 &#x2F;bin&#x2F;sh -c &quot;while true; do echo hello world; sleep 1; done&quot;</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>services</title>
    <url>/2022/09/26/depth-docker-compose-yml-%E4%BB%8B%E7%BB%8D-20220927-services/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="yml的services介绍"><a href="#yml的services介绍" class="headerlink" title="yml的services介绍"></a>yml的services介绍</h1><ul>
<li>一个service代表一个container，这个container可以从dockerhub的image来创建，或者从本地的Dockerfile build出来的image来创建。</li>
<li>service的启动类似docker run，我们可以给其指定network和volme，所以可以给service指定network和volume的引用<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">services:</span><br><span class="line">    db:</span><br><span class="line">        image: postgres:9.4</span><br><span class="line">        volumes:</span><br><span class="line">            - &quot;db-data:&#x2F;var&#x2F;lib&#x2F;postgresql&#x2F;data&quot;</span><br><span class="line">        networks:</span><br><span class="line">            - back-tier</span><br><span class="line"></span><br><span class="line">等价于:</span><br><span class="line"></span><br><span class="line">docker run -d --network back-tier -v db-data:&#x2F;var&#x2F;lib&#x2F;postgresql&#x2F;data&#x2F; postgres:9.4</span><br></pre></td></tr></table></figure>
</li>
</ul>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker-compose</category>
        <category>yml</category>
      </categories>
      <tags>
        <tag>docker-compose</tag>
      </tags>
  </entry>
  <entry>
    <title>network</title>
    <url>/2022/09/26/depth-docker-compose-yml-%E4%BB%8B%E7%BB%8D-20220927-network/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="yml的networks介绍"><a href="#yml的networks介绍" class="headerlink" title="yml的networks介绍"></a>yml的networks介绍</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">services:</span><br><span class="line">    worker:</span><br><span class="line">        build: .&#x2F;worker</span><br><span class="line">        links:</span><br><span class="line">            - db</span><br><span class="line">            - redis</span><br><span class="line">        networks:</span><br><span class="line">            - back-tier</span><br><span class="line"></span><br><span class="line">back-tier信息如下：</span><br><span class="line">networks:</span><br><span class="line">    front-tier:</span><br><span class="line">        driver: bridge</span><br><span class="line">    back-tier:</span><br><span class="line">        driver: bridge</span><br><span class="line"></span><br><span class="line">network类似：</span><br><span class="line"></span><br><span class="line">docker network create -d bridge back-tier</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker-compose</category>
        <category>yml</category>
      </categories>
      <tags>
        <tag>docker-compose</tag>
      </tags>
  </entry>
  <entry>
    <title>docker volume</title>
    <url>/2022/09/23/depth-docker-config-20220923-docker-volume/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="volume"><a href="#volume" class="headerlink" title="volume"></a>volume</h1><ol>
<li><p>创建数据卷<br>docker volume create [OPTIONS] [VOLUME]<br>例: docker volume create hello</p>
<blockquote>
<p>mac电脑默认挂在路径： /var/lib/docker/volumes</p>
</blockquote>
</li>
<li><p>查看数据卷的挂载信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sh-3.2# docker volume inspect myhexo-vol</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;CreatedAt&quot;: &quot;2022-09-23T03:00:47Z&quot;,</span><br><span class="line">        &quot;Driver&quot;: &quot;local&quot;,</span><br><span class="line">        &quot;Labels&quot;: &#123;&#125;,</span><br><span class="line">        &quot;Mountpoint&quot;: &quot;&#x2F;var&#x2F;lib&#x2F;docker&#x2F;volumes&#x2F;myhexo-vol&#x2F;_data&quot;,</span><br><span class="line">        &quot;Name&quot;: &quot;myhexo-vol&quot;,</span><br><span class="line">        &quot;Options&quot;: &#123;&#125;,</span><br><span class="line">        &quot;Scope&quot;: &quot;local&quot;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<h1 id="查看全部数据卷"><a href="#查看全部数据卷" class="headerlink" title="查看全部数据卷"></a>查看全部数据卷</h1><p>docker volume ls</p>
</li>
</ol>
<h1 id="删除数据卷"><a href="#删除数据卷" class="headerlink" title="删除数据卷"></a>删除数据卷</h1><p>docker volume rm 数据卷名称/id</p>
<h1 id="删除所有无用数据卷"><a href="#删除所有无用数据卷" class="headerlink" title="删除所有无用数据卷"></a>删除所有无用数据卷</h1><p>docker volume prune</p>
<h1 id="设置容器数据路径只读"><a href="#设置容器数据路径只读" class="headerlink" title="设置容器数据路径只读"></a>设置容器数据路径只读</h1><p>在容器路径后面追加 :ro<br>docker run -v 宿主路径:容器路径:ro</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker copy</title>
    <url>/2022/09/23/depth-docker-config-20220923-docker-copy/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<pre><code>COPY 指令详解: https://blog.csdn.net/qq_33801641/article/details/121122340
</code></pre><hr>
<h1 id="docker-copy"><a href="#docker-copy" class="headerlink" title="docker copy"></a>docker copy</h1><ul>
<li>作用：复制内容到镜像</li>
<li>格式： COPY <src> <dest></li>
<li>详解：复制本地主机的 <src>下内容到镜像中的 <dest>，目标路径不存在时，会自动创建。</li>
<li><src>：可以是 Dockerfile 所在目录的一个相对路径(文件或目录)</li>
<li><dest>：可以是镜像内绝对路径，或者相对于工作目录(WORKDIR)的相对路径</li>
<li>路径：支持正则表达式， COPY test* /tmp</li>
</ul>
<h1 id="两种格式"><a href="#两种格式" class="headerlink" title="两种格式"></a>两种格式</h1><p>COPY [–chown=<user>:<group>] <src>… <dest><br>COPY [–chown=<user>:<group>] [“<src>“,… “<dest>“]<br>–chown<br>仅适用于 linux 上的 dockerfile，在 window 上没有用户、组的概念</p>
<h1 id="COPY-作用"><a href="#COPY-作用" class="headerlink" title="COPY 作用"></a>COPY 作用</h1><p>COPY 指令从 <src> 复制新文件、目录或远程文件 URL，并将它们添加到路径 <dest><br>可以指定多个 <src> 资源，但如果它们是文件或目录，则它们的路径被解析为相对于构建上下文的源<br>每个 <src> 可能包含通配符，匹配将使用 Go 的 filepath.Match 规则完成</p>
<h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><ol>
<li><ul>
<li>通配符<br>把所有 hom 开头的文件复制到镜像文件系统的 /mydir/ 目录下</li>
</ul>
</li>
</ol>
<p>COPY hom* /mydir/</p>
<ol>
<li>? 通配符<br>? 匹配 0 或 1 个字符，比如会把 home.txt 文件复制到 /mydir/ 目录下</li>
</ol>
<p>COPY hom?.txt /mydir/</p>
<ol>
<li>工作目录<br><dest> 是绝对路径，或相对于 WORKDIR 的路径，源将在目标容器内复制到该路径中</li>
</ol>
<p>使用相对路径的栗子<br>COPY test.txt relativeDir/</p>
<p>等价于</p>
<p>COPY test.txt <WORKDIR>/relativeDir/</p>
<h1 id="标志-–from"><a href="#标志-–from" class="headerlink" title="标志 –from="></a>标志 –from=<name></h1><p>将从 from 指定的构建阶段中寻找源文件 <src><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 第一构建阶段:将仅用于生成 requirements.txt 文件</span><br><span class="line">FROM tiangolo&#x2F;uvicorn-gunicorn:python3.9 as requirements-stage</span><br><span class="line"></span><br><span class="line"># 将当前工作目录设置为 &#x2F;tmp</span><br><span class="line">WORKDIR &#x2F;tmp</span><br><span class="line"></span><br><span class="line"># 生成 requirements.txt</span><br><span class="line">RUN touch requirements.txt</span><br><span class="line"></span><br><span class="line"># 第二构建阶段，在这往后的任何内容都将保留在最终容器映像中</span><br><span class="line">FROM python:3.9</span><br><span class="line"></span><br><span class="line"># 将当前工作目录设置为 &#x2F;code</span><br><span class="line">WORKDIR &#x2F;code</span><br><span class="line"></span><br><span class="line"># 从第一个阶段复制 requirements.txt;这个文件只存在于前一个 Docker 阶段，这就是使用 --from-requirements-stage 复制它的原因</span><br><span class="line">COPY --from&#x3D;requirements-stage &#x2F;tmp&#x2F;requirements.txt &#x2F;code&#x2F;requirements.txt</span><br><span class="line"></span><br><span class="line"># 运行命令</span><br><span class="line">RUN pip install --no-cache-dir --upgrade -r &#x2F;code&#x2F;requirements.txt</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>CMD与ENTRYPOINT区别</title>
    <url>/2022/09/23/depth-docker-notes-20220923-CMD%E4%B8%8EENTRYPOINT%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>entrypoint和cmd的区别是:  <a href="https://www.php.cn/docker/456654.html" target="_blank" rel="noopener">https://www.php.cn/docker/456654.html</a></strong></li>
<li><strong>Dockerfile 里指定执行命令用RUN 、ENTRYPOING和用CMD有何不同？: <a href="https://blog.csdn.net/agonie201218/article/details/121976911" target="_blank" rel="noopener">https://blog.csdn.net/agonie201218/article/details/121976911</a></strong></li>
</ul>
<hr>
<h1 id="CMD与ENTRYPOINT区别"><a href="#CMD与ENTRYPOINT区别" class="headerlink" title="CMD与ENTRYPOINT区别"></a>CMD与ENTRYPOINT区别</h1><ol>
<li>CMD用法：</li>
</ol>
<ul>
<li>CMD [“executable”,“param1”,“param2”] ：exec形式（首选）</li>
<li>CMD [“param1”,“param2”] ：作为ENTRYPOINT的默认参数</li>
<li>CMD command param1 param2 ：Shell形式</li>
</ul>
<ol>
<li>ENTRYPOINT用法：</li>
</ol>
<ul>
<li>ENTRYPOINT [“executable”, “param1”, “param2”]</li>
<li>ENTRYPOINT command param1 param2</li>
<li>多个CMD命令只有最后一个生效，前面的会被覆盖</li>
</ul>
<ol>
<li>小结<br>CMD和ENTRYPOINT指令都可以用来定义运行容器时所使用的默认命令<br>Dockerfile至少指定一个CMD或ENTRYPOINT<br>CMD可以用作ENTRYPOINT默认参数，或者用作容器的默认命令<br>docker run指定时，将会覆盖CMD<br>如果是可执行文件，希望运行时传参，应该使用ENTRYPOINT</li>
</ol>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ol>
<li>Dockerfile中只能指定一个ENTRYPOINT，如果指定了很多，只有最后一个有效。</li>
<li>执行docker run命令时，也可以添加–entrypoint参数，会把指定的参数继续传递给ENTRYPOINT<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ENTRYPOINT [&quot;echo&quot;,&quot;foo&quot;]</span><br><span class="line">然后执行：</span><br><span class="line">docker run --entrypoint&#x3D;echo CONTAINER_NAME bar #注意没有echo</span><br><span class="line">那么，就相当于执行了echo bar，最终结果就是</span><br></pre></td></tr></table></figure></li>
<li>docker run命令如果指定了参数会把CMD里的参数覆盖：<br>（这里说明一下，如：docker run -it ubuntu /bin/bash 命令的参数是指/bin/bash 而非 -it ,-it只是docker 的参数，而不是容器的参数，以下所说参数均如此。）</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker信息命令</title>
    <url>/2022/09/23/depth-docker-notes-20220923-docker%E4%BF%A1%E6%81%AF%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="查看docker系统信息"><a href="#查看docker系统信息" class="headerlink" title="查看docker系统信息"></a>查看docker系统信息</h1><p>docker system df</p>
<h1 id="查看docker信息"><a href="#查看docker信息" class="headerlink" title="查看docker信息"></a>查看docker信息</h1><p>docker info</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>depth-docker-excp-20220920-docker容器启动后立即退出</title>
    <url>/2022/09/20/depth-docker-excp-20220920-docker%E5%AE%B9%E5%99%A8%E5%90%AF%E5%8A%A8%E5%90%8E%E7%AB%8B%E5%8D%B3%E9%80%80%E5%87%BA/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/m0_67393342/article/details/124171304" target="_blank" rel="noopener">docker启动容器之后马上又自动关闭解决办法</a></p>
<h1 id="docker容器启动后立即退出"><a href="#docker容器启动后立即退出" class="headerlink" title="docker容器启动后立即退出"></a>docker容器启动后立即退出</h1><h2 id="退出原因"><a href="#退出原因" class="headerlink" title="退出原因"></a>退出原因</h2><ol>
<li>docker容器运行必须有一个前台进程， 如果没有前台进程执行，容器认为空闲，就会自行退出</li>
<li>容器运行的命令如果不是那些一直挂起的命令（ 运行top，tail、循环等），就是会自动退出</li>
<li>这个是 docker 的机制问题</li>
</ol>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h3><p>网上有很多介绍，就是起一个死循环进程，让他不停的循环下去，前台永远有进程执行，那么容器就不会退出了,以centos为例<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -d centos &#x2F;bin&#x2F;sh -c &quot;while true; do echo hello world; sleep 1; done&quot;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>缺点： 命令太冗长了，还占用一个终端</p>
<h3 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -dit centos &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>
<p>添加-it 参数交互运行<br>添加-d 参数后台运行<br>这样就能启动一个一直停留在后台运行的Centos了。<br>docker ps 容器运行起来了<br>进入容器的方法：<br>使用exec，不要使用attach命令<br>attach命令就是使用现有终端，如果你要退出容器操作，那么bash结束，容器也就退出了<br>shell&gt;docker exec -it /bin/bash //新建一个bash</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>hexo后台运行</title>
    <url>/2022/09/20/hexo-%E6%8F%92%E4%BB%B6-20220920-hexo%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>hexo 长期后台运行：<a href="http://t.zoukankan.com/young233-p-14628456.html" target="_blank" rel="noopener">http://t.zoukankan.com/young233-p-14628456.html</a></strong></li>
<li><strong>pm2官网文档：<a href="https://pm2.keymetrics.io/" target="_blank" rel="noopener">https://pm2.keymetrics.io/</a></strong></li>
</ul>
<hr>
<h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><ol>
<li>首先，我们需要安装它。<br>npm install -g pm2</li>
<li>进到博客的根目录，新建一个文件：hexo_run.js<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//run</span></span><br><span class="line"><span class="keyword">const</span> &#123; exec &#125; = <span class="built_in">require</span>(<span class="string">'child_process'</span>)</span><br><span class="line"><span class="comment">/* 其实就是等于执行hexo server -p 6001，如果不指定端口，则默认端口: 4000 */</span></span><br><span class="line">exec(<span class="string">'hexo server -p 6001'</span>,(error, stdout, stderr) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span>(error)&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'exec error: $&#123;error&#125;'</span>)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'stdout: $&#123;stdout&#125;'</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'stderr: $&#123;stderr&#125;'</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
<li>在博客根目录启动这个进程<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">pm2 start hexo_run.js</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># 启动js</span><br><span class="line">pm2 start hexo_run.js</span><br><span class="line"># 停止js</span><br><span class="line">pm2 stop hexo_run.js</span><br><span class="line"># 运行起来后可以使用pm2 show + 进程pid查看后台hexo进行</span><br><span class="line">pm2 show pid</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>plugin</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>docker run</title>
    <url>/2022/09/20/depth-docker-notes-20220920-docker-run/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h1><p>docker exec -it myhexo2 /bin/sh</p>
<h1 id="单纯启动应用"><a href="#单纯启动应用" class="headerlink" title="单纯启动应用"></a>单纯启动应用</h1><p>docker run -p 6001:6001 -d -it –name myhexo myhexo:1.0</p>
<h1 id="保持镜像永不退出运行"><a href="#保持镜像永不退出运行" class="headerlink" title="保持镜像永不退出运行"></a>保持镜像永不退出运行</h1><p>docker run -p 6001:6001 -d –name myhexo myhexo:1.0 /bin/sh -c “while true; do echo hello world; sleep 1; done”</p>
<h1 id="启动并进入容器"><a href="#启动并进入容器" class="headerlink" title="启动并进入容器"></a>启动并进入容器</h1><p>docker run -p 6001:6001 -d -it –name myhexo myhexo:1.0 /bin/bash</p>
<h1 id="docker-run-的时候执行-其他命令"><a href="#docker-run-的时候执行-其他命令" class="headerlink" title="docker run 的时候执行 其他命令"></a>docker run 的时候执行 其他命令</h1><p>docker run CONTAINER_NAME echo foo<br>等于运行的时候执行 echo foo</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>depth-docker-notes-20220919-docker-scan镜像扫描</title>
    <url>/2022/09/19/depth-docker-notes-20220919-docker-scan%E9%95%9C%E5%83%8F%E6%89%AB%E6%8F%8F/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="docker-scan"><a href="#docker-scan" class="headerlink" title="docker scan"></a>docker scan</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sh-3.2# docker scan --json myhexo</span><br><span class="line">failed to read docker scan configuration file. Please restart Docker Desktop: open &#x2F;var&#x2F;root&#x2F;.docker&#x2F;scan&#x2F;config.json: no such file or directory</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>depth-docker-notes-dockerfile-20220919-构建centos镜像使用</title>
    <url>/2022/09/19/depth-docker-notes-dockerfile-20220919-%E6%9E%84%E5%BB%BAcentos%E9%95%9C%E5%83%8F%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="构建centos镜像使用"><a href="#构建centos镜像使用" class="headerlink" title="构建centos镜像使用"></a>构建centos镜像使用</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FROM centos</span><br><span class="line">#指定作者</span><br><span class="line">MAINTAINER  zhangbao&lt;zhangbaohpu@163.com&gt;</span><br><span class="line"></span><br><span class="line">#ENV kv格式，这里指定工作目录，及默认进入容器的目录</span><br><span class="line">ENV MYPATH &#x2F;usr&#x2F;local</span><br><span class="line">WORKDIR $MYPATH</span><br><span class="line"></span><br><span class="line">#将原有的yum配置备份下</span><br><span class="line">RUN tar cvf &#x2F;etc&#x2F;yum.repos.d.tar &#x2F;etc&#x2F;yum.repos.d</span><br><span class="line"></span><br><span class="line">#修改yum源配置，</span><br><span class="line">RUN curl -o &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;Centos-vault-8.5.2111.repo</span><br><span class="line"></span><br><span class="line">#删除掉多于的repo文件</span><br><span class="line">RUN rm -rf &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Linux-*</span><br><span class="line"></span><br><span class="line">#使yum配置更新</span><br><span class="line">RUN yum clean all</span><br><span class="line">RUN yum makecache</span><br><span class="line"></span><br><span class="line">#下载需要的工具类</span><br><span class="line">RUN yum -y install vim</span><br><span class="line">RUN yum -y install net-tools</span><br><span class="line"></span><br><span class="line">EXPOSE 80</span><br><span class="line"></span><br><span class="line">CMD echo &quot;--end--&quot;</span><br><span class="line">CMD &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>dockerfile指令</title>
    <url>/2022/09/19/depth-docker-config-20220919-dockerfile%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="dockerfile指令"><a href="#dockerfile指令" class="headerlink" title="dockerfile指令"></a>dockerfile指令</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FROM            指定基础镜像</span><br><span class="line">MAINTAINER      指定作者</span><br><span class="line">RUN             执行参数中定义的命令，构建镜像时需要的命令</span><br><span class="line">EXPOSE          向容器外部公开的端口号</span><br><span class="line">WORKDIR         设置容器内默认工作目录</span><br><span class="line">USER            指定用户</span><br><span class="line">ENTROYPOINT     指定一个容器启动时运行的命令</span><br><span class="line">ENV             设置环境变量</span><br><span class="line">ADD|COPY        复制文件到镜像中</span><br><span class="line">VOLUME          容器数据卷，向镜像创建的容器添加卷</span><br><span class="line">CMD             容器启动时要运行的命令，可以有多个，但只有最后一个生效</span><br></pre></td></tr></table></figure>
<h1 id="或"><a href="#或" class="headerlink" title="或"></a>或</h1><p>FROM image_name:tag 定义了使用哪个基础镜像启动构建流程<br>MAINTAINER user_name 声明了镜像的创建者<br>ENV key value 设置环境变量（可以写多条）<br>RUN command 是Dockerfile的核心部分（可以写多条）<br>ADD source_dir/file 将宿主机的文件复制到容器内，如果是一个压缩文件，将会在复制后自动解压<br>COPY source_dir/file 和ADD类似，区别在于如果是一个压缩文件，复制后不解压<br>WORKDIR path_dir 设置工作目录</p>
<h1 id="dockerfile的构建过程就是build的执行过程"><a href="#dockerfile的构建过程就是build的执行过程" class="headerlink" title="dockerfile的构建过程就是build的执行过程"></a>dockerfile的构建过程就是build的执行过程</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.把当前目录和子目录当做上下文传递给docker服务，命令最后的点表示当前上下文。</span><br><span class="line">2.从当前目录（不包括子目录）找到Dockerfile文件，如果不指定文件，必须是此文件名。</span><br><span class="line">3.检查docker语法。</span><br><span class="line">4.从基础镜像运行一个容器。</span><br><span class="line">5.执行指令，修改容器，如上面操作添加数据卷，修改首页。</span><br><span class="line">6.对修改后的容器提交一个新的镜像层，也可叫做中间层镜像。</span><br><span class="line">7.针对中间层生成的镜像，运行新的容器。</span><br><span class="line">8.重复执行修改容器、提交镜像、运行容器指令，直到所有指令执行完成。</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：每条指令都会生成新的镜像，也就是生成中间层镜像，这样执行速度其实会很慢，可以不使用缓存。在构建命令中加上–no-cache=true 即可。可根据实际场景选择是否需要缓存。</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>workdir</title>
    <url>/2022/09/19/depth-docker-config-20220919-workdir/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">RUN cd &#x2F;app</span><br><span class="line">RUN echo &quot;hello&quot; &gt; world.txt</span><br></pre></td></tr></table></figure>
<ol>
<li>如上命令，在linux中，cd /app 会影响到后面执行的语句，表示linux中，连续两行是同一个进程执行环境，因此前一个命令修改的内容状态，会直接影响后一个命令；</li>
<li>在dockerfile中，这两行 run 命令的执行环境根本不同，是两个完全不同的容器，到第二行命令会启动一个全新的容器。 属于 dockerfile 构建分层存储的概念</li>
</ol>
<h1 id="workdir的作用"><a href="#workdir的作用" class="headerlink" title="workdir的作用"></a>workdir的作用</h1><ol>
<li>使用 cd /app 这样的命令，在dockerfile中不会影响到后续命令的执行，不会改变后续命令的执行环境</li>
<li>如果在dockerfile中需要改变后续命令的进程的工作目录，则需要使用 workdir /app 命令</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>构建新镜像</title>
    <url>/2022/09/19/depth-docker-notes-20220919-%E9%95%9C%E5%83%8F%E6%9E%84%E5%BB%BA/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="构建新镜像"><a href="#构建新镜像" class="headerlink" title="构建新镜像"></a>构建新镜像</h1><p>如果是自定义Dockerfile文件名，则构建时必须指定文件名，否则文件名必须是：Dockerfile<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker build -f dockerfile-mycentos -t mysentos:1.0 .</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker build的时候提示 operation not permitted</title>
    <url>/2022/09/19/depth-docker-excp-20220919-docker-build%E6%8F%90%E7%A4%BAoperation-not-permitted/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="docker-build的时候提示-operation-not-permitted"><a href="#docker-build的时候提示-operation-not-permitted" class="headerlink" title="docker build的时候提示 operation not permitted"></a>docker build的时候提示 operation not permitted</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker build -f Dockerfile -t myhexo:1.0 .</span><br><span class="line">[+] Building 0.0s (1&#x2F;2)</span><br><span class="line"> &#x3D;&gt; ERROR [internal] load build definition from Dockerfile                                                                               0.0s</span><br><span class="line"> &#x3D;&gt; &#x3D;&gt; transferring dockerfile: 40B                                                                                                      0.0s</span><br><span class="line">------</span><br><span class="line"> &gt; [internal] load build definition from Dockerfile:</span><br><span class="line">------</span><br><span class="line">failed to solve with frontend dockerfile.v0: failed to read dockerfile: error from sender: open .Trash: operation not permitted</span><br></pre></td></tr></table></figure>
<h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><ol>
<li>获取root权限<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 先进入root权限</span><br><span class="line">sudo su</span><br><span class="line"># 输入密码</span><br><span class="line"></span><br><span class="line"># 进入dockerfile目录</span><br><span class="line">cd work&#x2F;workSpace&#x2F;wk-github&#x2F;wk-github-zdy&#x2F;diabolo-hub-source-code&#x2F;</span><br><span class="line"></span><br><span class="line"># 再执行docker build</span><br><span class="line">docker build -f Dockerfile -t myhexo:1.0 .</span><br></pre></td></tr></table></figure></li>
<li>-f Dockerfile 全路径 （这个没试过）</li>
</ol>
<h2 id="此时再提示错误如下："><a href="#此时再提示错误如下：" class="headerlink" title="此时再提示错误如下："></a>此时再提示错误如下：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>excp</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>npm-20220916-npm</title>
    <url>/2022/09/16/npm-20220916-npm/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="查找npm安装根目录"><a href="#查找npm安装根目录" class="headerlink" title="查找npm安装根目录"></a>查找npm安装根目录</h1><p>npm root -g</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-20220916-1-查看版本及路径</title>
    <url>/2022/09/16/python-notes-20220916-1-%E6%9F%A5%E7%9C%8B%E7%89%88%E6%9C%AC%E5%8F%8A%E8%B7%AF%E5%BE%84/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>➜  ~ python3<br>Python 3.8.9 (default, Apr 13 2022, 08:48:06)<br>[Clang 13.1.6 (clang-1316.0.21.2.5)] on darwin<br>Type “help”, “copyright”, “credits” or “license” for more information.</p>
<blockquote>
<blockquote>
<blockquote>
<p>exit()<br>➜  ~ which python<br>python not found<br>➜  ~ which python3<br>/usr/bin/python3</p>
</blockquote>
</blockquote>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>su提示sorry</title>
    <url>/2022/09/16/mac-20220916-su%E6%8F%90%E7%A4%BAsorry/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="在执行mac命令时，提示-su-Sorry"><a href="#在执行mac命令时，提示-su-Sorry" class="headerlink" title="在执行mac命令时，提示 su: Sorry"></a>在执行mac命令时，提示 su: Sorry</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">➜  diabolo-hub-source-code git:(first_code) ✗ su npm install -g hexo</span><br><span class="line">Password:</span><br><span class="line">su: Sorry</span><br></pre></td></tr></table></figure>
<h1 id="处理方式"><a href="#处理方式" class="headerlink" title="处理方式"></a>处理方式</h1><p>sudo su<br>输入密码，回车<br>npm install -g hexo</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>mac</category>
      </categories>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>java-maven-mac-1-maven-for-mac配置</title>
    <url>/2022/09/04/java-maven-mac-1-maven-for-mac%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h1><ol>
<li>解压 apache maven</li>
<li>vi ~/.bash_profile</li>
<li>配置<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 先按一下 i，别问为什么，按就完事了</span><br><span class="line"></span><br><span class="line">export M2_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;apache-maven-3.6.2</span><br><span class="line">export PATH&#x3D;$PATH:$M2_HOME&#x2F;bin</span><br><span class="line"></span><br><span class="line"># 再按一下 esc,别问为什么，问了也不告诉你。气人不？</span><br></pre></td></tr></table></figure></li>
<li>激活<br>然后输入source ~/.bash_profile，让刚才的配置生效。</li>
<li>验证<br>最后，验证一下吧，mvn -v</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>Beetl 3中文文档</title>
    <url>/2022/09/04/engine-%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E-1-Beetl-%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Beetl-3中文文档"><a href="#Beetl-3中文文档" class="headerlink" title="Beetl 3中文文档"></a>Beetl 3中文文档</h1><p><a href="https://www.kancloud.cn/xiandafu/beetl3_guide/1992542" target="_blank" rel="noopener">Beetl 3中文文档</a></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>engine</category>
        <category>模板引擎</category>
      </categories>
      <tags>
        <tag>模板引擎</tag>
        <tag>beetl</tag>
      </tags>
  </entry>
  <entry>
    <title>git ssh for mac</title>
    <url>/2022/09/04/git-config-git-ssh-for-mac/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="git-ssh-for-mac"><a href="#git-ssh-for-mac" class="headerlink" title="git ssh for mac"></a>git ssh for mac</h1><ol>
<li>步骤1.检查是否已经存在SSH Key<br>打开电脑终端，输入以下命令：</li>
</ol>
<p>ls -al ~/.ssh</p>
<ol>
<li>步骤2. 生成/设置SSH Key<br>继续上一步可能出现的情况</li>
</ol>
<ul>
<li>情况一：终端出现文件id_rsa.pub 或 id_dsa.pub，则表示该电脑已经存在SSH Key，此时可继续输入命令：</li>
</ul>
<p>pbcopy &lt; ~/.ssh/id_rsa.pub</p>
<p>这样你需要的SSH Key 就已经复制到粘贴板上了，然后进行步骤3</p>
<ul>
<li>情况二：终端未出现id_rsa.pub 或 id_dsa.pub文件，表示该电脑还没有配置SSH Key，此时需要输入命令：</li>
</ul>
<p>ssh-keygen -t rsa -C “your_email@example.com”<br>（注意，这里的  your_email@example.com  是你自己的邮箱（例如：11<strong>**</strong>@qq.com），选一般的常用的邮箱即可，不常用的邮箱一般不推荐）</p>
<p>默认会在相应路径下（/your_home_path）生成id_rsa和id_rsa.pub两个文件，</p>
<p>连续回车即可，也可能会让你输入密码，密码就是你的开机密码</p>
<p>此时再输入命令：ls -al ~/.ssh     就会出现id_rsa.pub 和 id_dsa.pub两个文件，然后重复情况一的步骤即输入以下命令再进行步骤3 输入：</p>
<p>pbcopy &lt; ~/.ssh/id_rsa.pub</p>
<h1 id="注-mac下启动ssh服务"><a href="#注-mac下启动ssh服务" class="headerlink" title="注* mac下启动ssh服务"></a>注* mac下启动ssh服务</h1><p>mac本身安装了ssh服务，默认情况下不会开机自启</p>
<p>1.启动sshd服务：</p>
<p>sudo launchctl load -w /System/Library/LaunchDaemons/ssh.plist</p>
<p>2.停止sshd服务：</p>
<p>sudo launchctl unload -w /System/Library/LaunchDaemons/ssh.plist</p>
<p>3查看是否启动：</p>
<p>sudo launchctl list | grep ssh</p>
<p>如果看到下面的输出表示成功启动了：</p>
<ul>
<li>0 com.openssh.sshd</li>
</ul>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>config</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>seata</title>
    <url>/2022/09/04/depth-distributed-%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1-seata-1-seata%E4%B8%AD%E9%97%B4%E4%BB%B6%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="seata"><a href="#seata" class="headerlink" title="seata"></a>seata</h1><p>Seata是一款开源的分布式事务解决方案,致力于在微服务架构下提供高性能和简单易用的分布式事务服务</p>
<p>@globaltransaction</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>distributed</category>
        <category>分布式事务</category>
        <category>seata</category>
      </categories>
      <tags>
        <tag>分布式事务</tag>
        <tag>seata</tag>
      </tags>
  </entry>
  <entry>
    <title>ideal-插件-AceJump</title>
    <url>/2022/09/01/ideal-%E6%8F%92%E4%BB%B6-AceJump/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="跳转-Default-Mode："><a href="#跳转-Default-Mode：" class="headerlink" title="跳转 - Default Mode："></a>跳转 - Default Mode：</h1><p>Ctrl + ; 快捷键激活AceJump; mac输入 control + ;<br>在编辑器中输入想要到达位置部分字符，AceJump后搜索所有匹配的字符，然后在这些字符上打上标签<br>输入想要跳转位置黄色标签字符，光标就会定位到指定位置</p>
<h1 id="导航功能-类似IDE中Navigate-To-Declaration-Mode"><a href="#导航功能-类似IDE中Navigate-To-Declaration-Mode" class="headerlink" title="导航功能[类似IDE中Navigate To] - Declaration Mode"></a>导航功能[类似IDE中Navigate To] - Declaration Mode</h1><p>此功能类似于IDE中Ctrl + b 快捷键<br>按两次 Ctrl + ; 快捷键激活该模式 ； mac输入 control + ;<br>输入部分想要定位字符datab 【目标database】<br>输入想要导航变量位置标签【g】</p>
<h1 id="跳转-选中目标单词-Target-Mode"><a href="#跳转-选中目标单词-Target-Mode" class="headerlink" title="跳转 + 选中目标单词 - Target Mode"></a>跳转 + 选中目标单词 - Target Mode</h1><p>按3次 Ctrl + ; 快捷键<br>输入 想要选中单词部分或者全部 字符， 例如：datab<br>输入目标单词位置 标签，例如10行database： 输入 g 单词<br>结果跳转到10行database位置，且选中database</p>
<h1 id="按行跳转-Line-Mode"><a href="#按行跳转-Line-Mode" class="headerlink" title="按行跳转 - Line Mode"></a>按行跳转 - Line Mode</h1><p>a). 快捷键 Ctrl+Shift+;</p>
<blockquote>
<p>   该快捷键功能：会在 1) 行首、2) 行首第一个非空字符位置、3）行尾 三个位置加标签<br>b). 快捷键[只标记行首，行首第一个非空，行尾]： 1) 第一步：Ctrl + ; 2) 第二步 方向键： 向左方向键 - 标记行首，向右方向键 - 标记行尾 , 向上方向键 - 标记行首第一个非空字符</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>ideal-插件-0-插件总览</title>
    <url>/2022/09/01/ideal-%E6%8F%92%E4%BB%B6-0-%E6%8F%92%E4%BB%B6%E6%80%BB%E8%A7%88/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ol>
<li>AceJump 字符串定位</li>
<li>Grep Console 控制台配置</li>
<li>maven-search maven搜索</li>
<li>Maven Helper maven依赖搜索</li>
<li>EasyCode 在线mybatis增删改查的工具，比逆向工程更厉害</li>
<li>RestfulTookit 接口测试，类似postman</li>
<li>Iedis redis客户端工具</li>
<li>Mongo Plugin mongo插件</li>
<li>RabbitMQ Script Support rabbitmq插件</li>
<li>mybatis sql plugin mybatis xml转换 自动化生成</li>
<li>JUnitGenerator V2.0 测试工具</li>
<li>CodeGlance 代码小地图</li>
<li>stackoverflow 社区工具</li>
<li>Generate AllSetter 自动setter getter</li>
<li>Codota API查看工具</li>
<li>jclasslib bytecode viewer 反编译</li>
<li>Auto filling Java call arguments 自动填充函数</li>
<li>GenerateO2O 自动转换模型</li>
<li>AllFormat 在线格式化</li>
<li>IDEA Mind Map 项目思维导图</li>
<li>Easy Javadoc 注释生成工具</li>
<li>MacOS Tab Management 窗口合并工具</li>
<li>vo2dto 模型转换</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>命令终端</title>
    <url>/2022/08/26/mac-1-%E5%91%BD%E4%BB%A4%E7%BB%88%E7%AB%AF/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="命令终端"><a href="#命令终端" class="headerlink" title="命令终端"></a>命令终端</h1><p><a href="https://www.jianshu.com/p/9c3439cc3bdb?u_atoken=abccd7d0-5db9-4311-a150-376f87b1c3e0&amp;u_asession=01tqY_qte0ww-SmCMs6Rf7LTceSxa0uabGrVYW57kMqXY8SDUHw6CEN4M8AzwCpjXzX0KNBwm7Lovlpxjd_P_q4JsKWYrT3W_NKPr8w6oU7K9soc77tDMC_MShycAxC0yjMKWrbBzYAhXhkL4v5_cjQmBkFo3NEHBv0PZUm6pbxQU&amp;u_asig=05DXtJx0MBnPXeyXNVIQ2lAu4ORHLAZXvgBSQez37VNVqrLcIV7_Zf0Lq3e2MaR2X1v_fPgsHeuX4saI6rv5Oup9Ei8EJd8PL_-8ud7aoWTNuwCD8ATKUaaHkIQxdw9bhYJaIaUH4Fy66SL0uUZipLxip2x3lAOH046TaWNHfHu6v9JS7q8ZD7Xtz2Ly-b0kmuyAKRFSVJkkdwVUnyHAIJzf8vOpb2xjEQPc8iJLOOOlLcEThxK2nYkJzr7cSEQYHXdf9JIAkyKervFWgmMgV8j-3h9VXwMyh6PgyDIVSG1W_hDRriGDStngj0SN5DMOzoc-FijF2nFh6KRQeOtyHZY_8UGYrT3V6X_B3vjazZeddoWxgqSBNLGOkDFGT-Ns60mWspDxyAEEo4kbsryBKb9Q&amp;u_aref=Nz%2FPTJ48ZLy4gsaXj%2BNllcI6sYc%3D" target="_blank" rel="noopener">iTerm2 + Oh My Zsh 打造舒适终端体验</a></p>
<h1 id="查看端口占用"><a href="#查看端口占用" class="headerlink" title="查看端口占用"></a>查看端口占用</h1><p>sudo lsof -i:5000  ##此条指令用于查询端口正在被那些进程占据</p>
<h1 id="杀掉进程"><a href="#杀掉进程" class="headerlink" title="杀掉进程"></a>杀掉进程</h1><p>sudo kill PID ## 此条指令可将上述查出来占用的端口给删除掉，其中，PID根据上述查询出来的结果而定<br>sudo kill -9 pid</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>mac</category>
      </categories>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>java-maven-maven-for-mac配置环境</title>
    <url>/2022/08/03/java-maven-maven-for-mac%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>查看文件路径：1）首先，打开终端；</p>
<p>2）再将apache-maven-3.5.0 文件夹拖入到终端内，文件夹路径就会显示出来；</p>
<p>在终端打开配置环境变量到文件：</p>
<p>1）在终端输入  vim ~/.bash_profile，进入到环境变量配置文件里面；</p>
<p>2）进入后，是read模式，按下 i (编辑)键，进入insert模式；</p>
<p>3）将环境变量加入其实，环境变量如下：</p>
<p>export MAVEN_HOME=/Users/robbie/apache-maven-3.3.3</p>
<p>export PATH=$PATH:$MAVEN_HOME/bin</p>
<p>4）按下 ESC，退出insert模式；<br>5）输入 :wq (保存修改)退出当前文件；<br>6）使修改的环境变量bash_profile文件生效，输入 source .bash_profile，按下Enter键即可.<br>maven的安装包中conf文件夹下的setting.xml文件指定正确的仓库</p>
<h1 id="如果仍然提示mvn找不到-zsh-command-not-found-mvn"><a href="#如果仍然提示mvn找不到-zsh-command-not-found-mvn" class="headerlink" title="如果仍然提示mvn找不到: zsh: command not found: mvn"></a>如果仍然提示mvn找不到: zsh: command not found: mvn</h1><p>输入:<br>➜ ~ mvn -v</p>
<p>提示:<br>zsh: command not found: mvn</p>
<p>解决方法:<br>step 1:</p>
<p>vim ~/.zshrc<br>step 2:(Add at the end of the file)</p>
<p>source ~/.bash_profile;<br>step 3:(Execution shell)</p>
<blockquote>
<p>source ~/.bash_profile</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>log4j2-容器环境中检查log4j包版本</title>
    <url>/2022/08/03/log4j2-%E5%AE%B9%E5%99%A8%E7%8E%AF%E5%A2%83%E4%B8%AD%E6%A3%80%E6%9F%A5log4j%E5%8C%85%E7%89%88%E6%9C%AC/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="容器中检查包的版本"><a href="#容器中检查包的版本" class="headerlink" title="容器中检查包的版本"></a>容器中检查包的版本</h1><p>容器环境中先执行这个命令<br>jar   vtf   *.jar   | grep log4j </p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>分布式-链路跟踪-sofa-alipay-dst</title>
    <url>/2022/08/03/%E5%88%86%E5%B8%83%E5%BC%8F-%E9%93%BE%E8%B7%AF%E8%B7%9F%E8%B8%AA-sofa-alipay-dst/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="阿里sofa-dst"><a href="#阿里sofa-dst" class="headerlink" title="阿里sofa dst"></a>阿里sofa dst</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>分布式-链路跟踪-自定义traceId</title>
    <url>/2022/08/03/%E5%88%86%E5%B8%83%E5%BC%8F-%E9%93%BE%E8%B7%AF%E8%B7%9F%E8%B8%AA-%E8%87%AA%E5%AE%9A%E4%B9%89traceId/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="自定义tracerId"><a href="#自定义tracerId" class="headerlink" title="自定义tracerId"></a>自定义tracerId</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.cic.irc.invoice.config;</span><br><span class="line"></span><br><span class="line">import com.cic.irc.invoice.domain.util.SerialNoUtil;</span><br><span class="line">import lombok.extern.slf4j.Slf4j;</span><br><span class="line">import org.aspectj.lang.JoinPoint;</span><br><span class="line">import org.aspectj.lang.annotation.Aspect;</span><br><span class="line">import org.aspectj.lang.annotation.Before;</span><br><span class="line">import org.slf4j.MDC;</span><br><span class="line">import org.springframework.core.annotation.Order;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author : Daiyin.Zhang</span><br><span class="line"> * @version ：$Id: MDCAspect.java v 0.1 2021&#x2F;12&#x2F;8 9:10 Daiyin.Zhang Exp $</span><br><span class="line"> * @description : mdc</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Slf4j</span><br><span class="line">@Aspect</span><br><span class="line">@Component</span><br><span class="line">@Order(1001)</span><br><span class="line">public class MdcAspect &#123;</span><br><span class="line"></span><br><span class="line">    @Before(&quot;execution(public * com.cic.irc.invoice.adaptor.consumer.consumer.*.*(..)) || &quot; +</span><br><span class="line">            &quot;execution(public * com.cic.irc.invoice.adaptor.rest.web.*.*(..)) || &quot; +</span><br><span class="line">            &quot;execution(public * com.cic.irc.invoice.adaptor.rpc.*.impl.*Impl.*(..)) || &quot; +</span><br><span class="line">            &quot;execution(public * com.cic.irc.invoice.adaptor.schedule.handler.*.*.*(..))&quot;)</span><br><span class="line">    public void around(JoinPoint pjp) &#123;</span><br><span class="line">        MDC.put(&quot;traceId&quot;, SerialNoUtil.getSeqInvoiceNo());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>分布式-分布式消息队列-kafka-异常-查看topic异常could-not-be-established-Broker-may-not-be-available</title>
    <url>/2022/08/03/%E5%88%86%E5%B8%83%E5%BC%8F-%E5%88%86%E5%B8%83%E5%BC%8F%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97-kafka-%E5%BC%82%E5%B8%B8-%E6%9F%A5%E7%9C%8Btopic%E5%BC%82%E5%B8%B8could-not-be-established-Broker-may-not-be-available/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="查看topic异常"><a href="#查看topic异常" class="headerlink" title="查看topic异常"></a>查看topic异常</h1><p>could not be established. Broker may not be available<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\softAddress\kafka_2.12-3.1.0&gt;.\bin\windows\kafka-topics.bat --list --bootstrap-server localhost:9092</span><br><span class="line">[2022-04-04 23:13:08,655] WARN [AdminClient clientId&#x3D;adminclient-1] Connection to node -1 (localhost&#x2F;127.0.0.1:9092) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)</span><br><span class="line">[2022-04-04 23:13:10,808] WARN [AdminClient clientId&#x3D;adminclient-1] Connection to node -1 (localhost&#x2F;127.0.0.1:9092) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)</span><br><span class="line">[2022-04-04 23:13:12,937] WARN [AdminClient clientId&#x3D;adminclient-1] Connection to node -1 (localhost&#x2F;127.0.0.1:9092) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)</span><br><span class="line">[2022-04-04 23:13:15,190] WARN [AdminClient clientId&#x3D;adminclient-1] Connection to node -1 (localhost&#x2F;127.0.0.1:9092) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)</span><br><span class="line">[2022-04-04 23:13:17,594] WARN [AdminClient clientId&#x3D;adminclient-1] Connection to node -1 (localhost&#x2F;127.0.0.1:9092) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)</span><br><span class="line">[2022-04-04 23:13:20,472] WARN [AdminClient clientId&#x3D;adminclient-1] Connection to node -1 (localhost&#x2F;127.0.0.1:9092) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)</span><br><span class="line">[2022-04-04 23:13:23,517] WARN [AdminClient clientId&#x3D;adminclient-1] Connection to node -1 (localhost&#x2F;127.0.0.1:9092) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)</span><br><span class="line">[2022-04-04 23:13:26,695] WARN [AdminClient clientId&#x3D;adminclient-1] Connection to node -1 (localhost&#x2F;127.0.0.1:9092) could</span><br></pre></td></tr></table></figure></p>
<h1 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h1><p>发现Kafka broker已经宕机</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>分布式-分布式消息队列-kafka-笔记-Kafka本地测试</title>
    <url>/2022/08/03/%E5%88%86%E5%B8%83%E5%BC%8F-%E5%88%86%E5%B8%83%E5%BC%8F%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97-kafka-%E7%AC%94%E8%AE%B0-Kafka%E6%9C%AC%E5%9C%B0%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Kafka本地测试"><a href="#Kafka本地测试" class="headerlink" title="Kafka本地测试"></a>Kafka本地测试</h1><h2 id="启动kafka（需要先启动zookeeper）"><a href="#启动kafka（需要先启动zookeeper）" class="headerlink" title="启动kafka（需要先启动zookeeper）"></a>启动kafka（需要先启动zookeeper）</h2><p>.\bin\windows\kafka-server-start.bat .\config\server.properties</p>
<h1 id="创建主题，同一个主题创建一次即可。"><a href="#创建主题，同一个主题创建一次即可。" class="headerlink" title="创建主题，同一个主题创建一次即可。"></a>创建主题，同一个主题创建一次即可。</h1><p>.\bin\windows\kafka-topics.bat –create –zookeeper localhost:2181 –replication-factor 1 –partitions 1 –topic test1<br>或<br>.\bin\windows\kafka-topics.bat –create –bootstrap-server localhost:9092 –replication-factor 1 –partitions 1 –topic test1</p>
<h1 id="启动生产者和消费者"><a href="#启动生产者和消费者" class="headerlink" title="启动生产者和消费者"></a>启动生产者和消费者</h1><p>.\bin\windows\kafka-console-producer.bat –broker-list localhost:9092 –topic test1</p>
<p>.\bin\windows\kafka-console-consumer.bat –bootstrap-server localhost:9092 –topic test1 –from-beginning</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>分布式-分布式消息队列-kafka-笔记-Kafka常用命令</title>
    <url>/2022/08/03/%E5%88%86%E5%B8%83%E5%BC%8F-%E5%88%86%E5%B8%83%E5%BC%8F%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97-kafka-%E7%AC%94%E8%AE%B0-Kafka%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Kafka常用命令"><a href="#Kafka常用命令" class="headerlink" title="Kafka常用命令"></a>Kafka常用命令</h1><h2 id="启动kafka（需要先启动zookeeper）"><a href="#启动kafka（需要先启动zookeeper）" class="headerlink" title="启动kafka（需要先启动zookeeper）"></a>启动kafka（需要先启动zookeeper）</h2><p>.\bin\windows\kafka-server-start.bat .\config\server.properties</p>
<h3 id="后台常驻方式-带上参数-daemon-如"><a href="#后台常驻方式-带上参数-daemon-如" class="headerlink" title="后台常驻方式,带上参数 -daemon,如:"></a>后台常驻方式,带上参数 -daemon,如:</h3><p>/kafka/bin/kafka-server-start.sh -daemon /kafka/config/server.properties</p>
<h3 id="指定-JMX-port-端口启动，指定-jmx，可以方便监控-Kafka-集群"><a href="#指定-JMX-port-端口启动，指定-jmx，可以方便监控-Kafka-集群" class="headerlink" title="指定 JMX port 端口启动，指定 jmx，可以方便监控 Kafka 集群"></a>指定 JMX port 端口启动，指定 jmx，可以方便监控 Kafka 集群</h3><p>JMX_PORT=9991 /kafka/bin/kafka-server-start.sh -daemon /kafka/config/server.properties</p>
<h2 id="停止Kafka"><a href="#停止Kafka" class="headerlink" title="停止Kafka"></a>停止Kafka</h2><p>/kafka/bin/kafka-server-stop.sh</p>
<h2 id="创建topic"><a href="#创建topic" class="headerlink" title="创建topic"></a>创建topic</h2><h3 id="官方推荐如果kafka版本大于等于2-2使用–bootstrap-server替代–zookeeper-（2-2以上也兼容–zookeeper）命令如下"><a href="#官方推荐如果kafka版本大于等于2-2使用–bootstrap-server替代–zookeeper-（2-2以上也兼容–zookeeper）命令如下" class="headerlink" title="官方推荐如果kafka版本大于等于2.2使用–bootstrap-server替代–zookeeper （2.2以上也兼容–zookeeper）命令如下"></a>官方推荐如果kafka版本大于等于2.2使用–bootstrap-server替代–zookeeper （2.2以上也兼容–zookeeper）命令如下</h3><p>kafka-topics.sh –create –bootstrap-server localhost:9092 –replication-factor 1 –partitions 1 –topic mytest</p>
<h3 id="如果kafka版本小于2-2则命令如下"><a href="#如果kafka版本小于2-2则命令如下" class="headerlink" title="如果kafka版本小于2.2则命令如下"></a>如果kafka版本小于2.2则命令如下</h3><p>kafka-topics.sh –create –zookeeper localhost:2181 –replication-factor 1 –partitions 1 –topic mytest</p>
<h3 id="参数解释"><a href="#参数解释" class="headerlink" title="参数解释"></a>参数解释</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* 官方推荐如果kafka版本大于等于2.2使用–bootstrap-server替代–zookeeper （2.2以上也兼容–zookeeper）命令如下</span><br><span class="line">kafka-topics.sh --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic mytest</span><br><span class="line">如果kafka版本小于2.2则命令如下</span><br><span class="line">kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic mytest</span><br><span class="line">* 参数解释</span><br><span class="line">1. 指定kafka集群(2.2以上)或zookeeper集群</span><br><span class="line">--bootstrap-server node1:9092,node2:9092,node3:9092....</span><br><span class="line">或</span><br><span class="line">--zookeeper node1:2181,node2:2181,node3:2181...</span><br><span class="line">2.指定分区数</span><br><span class="line">--partitions </span><br><span class="line">3.指定分区的副本数</span><br><span class="line">--replication-factor</span><br><span class="line">所以执行上面命令将会创建一个名为mytest的topic，该topic下面有1个分区,并且该分区只有1个副本</span><br></pre></td></tr></table></figure>
<h2 id="列出所有Topic"><a href="#列出所有Topic" class="headerlink" title="列出所有Topic"></a>列出所有Topic</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kafka-topics.sh --list --bootstrap-server localhost:9092</span><br></pre></td></tr></table></figure>
<h2 id="查看指定Topic"><a href="#查看指定Topic" class="headerlink" title="查看指定Topic"></a>查看指定Topic</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kafka-topics.sh --describe --bootstrap-server localhost:9092 --topic mytest</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Partition:0 表示该分区的id为0</span><br><span class="line">leader: 9 表示分区的首领副本所在的broker（本例子中broker.id配置为9,所以这里显示9,具体在config&#x2F;server.properties配置。这里只有一个分区，所以首领分区也就是自己）</span><br><span class="line">Replicas: 9 表示分区的跟随副本所在的broker</span><br><span class="line">Isr: 9 表示分区的同步副本所在的broker(同步副本可以认为跟首领副本准实时同步的副本，可以配置判断条件，后面会讲，首领副本挂掉后，服务器会从同步副本中选举新的首领)</span><br></pre></td></tr></table></figure>
<h2 id="增加Topic的partition数"><a href="#增加Topic的partition数" class="headerlink" title="增加Topic的partition数"></a>增加Topic的partition数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kafka-topics.sh --bootstrap-server localhost:9092 --alter --topic mytest --partitions 5</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>分布式-分布式消息队列-kafka-笔记-Kafka本地测试大全</title>
    <url>/2022/08/03/%E5%88%86%E5%B8%83%E5%BC%8F-%E5%88%86%E5%B8%83%E5%BC%8F%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97-kafka-%E7%AC%94%E8%AE%B0-Kafka%E6%9C%AC%E5%9C%B0%E6%B5%8B%E8%AF%95%E5%A4%A7%E5%85%A8/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="启动kafka（需要先启动zookeeper）"><a href="#启动kafka（需要先启动zookeeper）" class="headerlink" title="启动kafka（需要先启动zookeeper）"></a>启动kafka（需要先启动zookeeper）</h1><p>.\bin\windows\kafka-server-start.bat .\config\server.properties</p>
<hr>
<p>title: “随机查询数据”<br>date: 2022-03-18<br>comments: true<br>share: true<br>toc: true<br>categories:</p>
<ul>
<li>分布式</li>
<li>MQ</li>
<li>kafka</li>
<li>notes<br>tags:</li>
<li>kafka</li>
</ul>
<hr>
<h1 id="创建主题，同一个主题创建一次即可。"><a href="#创建主题，同一个主题创建一次即可。" class="headerlink" title="创建主题，同一个主题创建一次即可。"></a>创建主题，同一个主题创建一次即可。</h1><p>.\bin\windows\kafka-topics.bat –create –zookeeper localhost:2181 –replication-factor 1 –partitions 1 –topic test1<br>或<br>.\bin\windows\kafka-topics.bat –create –bootstrap-server localhost:9092 –replication-factor 1 –partitions 1 –topic test1</p>
<h1 id="启动生产者和消费者"><a href="#启动生产者和消费者" class="headerlink" title="启动生产者和消费者"></a>启动生产者和消费者</h1><p>.\bin\windows\kafka-console-producer.bat –broker-list localhost:9092 –topic test1</p>
<p>.\bin\windows\kafka-console-consumer.bat –bootstrap-server localhost:9092 –topic test1 –from-beginning</p>
<h1 id="列出所有topic"><a href="#列出所有topic" class="headerlink" title="列出所有topic"></a>列出所有topic</h1><p>.\bin\windows\kafka-topics.bat –list –bootstrap-server localhost:9092</p>
<h1 id="查看指定topic"><a href="#查看指定topic" class="headerlink" title="查看指定topic"></a>查看指定topic</h1><p>.\bin\windows\kafka-topics.bat –describe –bootstrap-server localhost:9092 –topic test1</p>
<h1 id="增加topic的partition"><a href="#增加topic的partition" class="headerlink" title="增加topic的partition"></a>增加topic的partition</h1><p>.\bin\windows\kafka-topics.bat –bootstrap-server localhost:9092 –alter –topic test1 –partitions 5</p>
<h1 id="查看-topic-指定分区-offset-的最大值或最小值"><a href="#查看-topic-指定分区-offset-的最大值或最小值" class="headerlink" title=".查看 topic 指定分区 offset 的最大值或最小值"></a>.查看 topic 指定分区 offset 的最大值或最小值</h1><p>.\bin\windows\kafka-run-class.bat kafka.tools.GetOffsetShell –topic test1 –time -1 –broker-list 127.0.0.1:9092 –partitions 0 </p>
<h1 id="删除topic"><a href="#删除topic" class="headerlink" title="删除topic"></a>删除topic</h1><p>.\bin\windows\kafka-topics.bat –bootstrap-server localhost:9092 –topic test2 –delete </p>
<blockquote>
<p> windows环境下删除topic需要关注brokder情况</p>
</blockquote>
<h1 id="消费消息"><a href="#消费消息" class="headerlink" title="消费消息"></a>消费消息</h1><p>1.从头开始<br>.\bin\windows\kafka-console-consumer.bat –bootstrap-server localhost:9092 –topic test1 –from-beginning<br>2.从尾部开始<br>从尾部开始取数据，必需要指定分区：<br>.\bin\windows\kafka-console-consumer.bat –bootstrap-server localhost:9092 –topic test1 –offset latest –partition 0</p>
<ol>
<li>指定分区<br>.\bin\windows\kafka-console-consumer.bat –bootstrap-server localhost:9092 –topic test1 –offset latest –partition 0</li>
</ol>
<h1 id="消费者Group"><a href="#消费者Group" class="headerlink" title="消费者Group"></a>消费者Group</h1><ol>
<li>指定Group<br>.\bin\windows\kafka-consumer-groups.bat –bootstrap-server localhost:9092 –topic test1 -group test_group –from-beginning</li>
<li>消费者Group列表<br>.\bin\windows\kafka-consumer-groups.bat –bootstrap-server localhost:9092 –list</li>
<li>查看Group详情[用来判断是否有延迟数据]<br>.\bin\windows\kafka-consumer-groups.bat –bootstrap-server localhost:9092 –group test_group –describe<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Consumer group &#39;test_group&#39; has no active members.</span><br><span class="line"></span><br><span class="line">TOPIC           PARTITION  CURRENT-OFFSET  LOG-END-OFFSET  LAG             CONSUMER-ID     HOST            CLIENT-ID</span><br><span class="line">test            0          5               5               0               -               -               -</span><br><span class="line"></span><br><span class="line"># CURRENT-OFFSET: 当前消费者群组最近提交的 offset，也就是消费者分区里读取的当前位置</span><br><span class="line"># LOG-END-OFFSET: 当前最高水位偏移量，也就是最近一个读取消息的偏移量，同时也是最近一个提交到集群的偏移量</span><br><span class="line"># LAG：消费者的 CURRENT-OFFSET 与 broker 的 LOG-END-OFFSET 之间的差距</span><br></pre></td></tr></table></figure></li>
<li>删除group<br>.\bin\windows\kafka-consumer-groups.bat –bootstrap-server localhost:9092 –group test_group –delete</li>
</ol>
<h1 id="平衡Leader"><a href="#平衡Leader" class="headerlink" title="平衡Leader"></a>平衡Leader</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kafka-preferred-replica-election.sh --bootstrap-server localhost:9092</span><br><span class="line">或</span><br><span class="line">kafka-leader-election.sh --bootstrap-server localhost:9092 --topic test --partition&#x3D;2 --election-type preferred</span><br><span class="line">--partition:指定需要重新分配leader的partition编号</span><br></pre></td></tr></table></figure>
<h1 id="自带压测工具"><a href="#自带压测工具" class="headerlink" title="自带压测工具"></a>自带压测工具</h1><p>kafka-producer-perf-test.sh –topic test –num-records 100 –record-size 1 –throughput 100 –producer-props bootstrap.servers=localhost:9092 </p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>分布式-分布式消息队列-kafka-笔记-windows下删除topic</title>
    <url>/2022/08/03/%E5%88%86%E5%B8%83%E5%BC%8F-%E5%88%86%E5%B8%83%E5%BC%8F%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97-kafka-%E7%AC%94%E8%AE%B0-windows%E4%B8%8B%E5%88%A0%E9%99%A4topic/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="删除topic"><a href="#删除topic" class="headerlink" title="删除topic"></a>删除topic</h1><p>.\bin\windows\kafka-topics.bat –bootstrap-server localhost:9092 –topic test2 –delete </p>
<h1 id="列出所有topic"><a href="#列出所有topic" class="headerlink" title="列出所有topic"></a>列出所有topic</h1><p>.\bin\windows\kafka-topics.bat –list –bootstrap-server localhost:9092</p>
<h1 id="删除Topic之后需要如下操作才能正常使用"><a href="#删除Topic之后需要如下操作才能正常使用" class="headerlink" title="删除Topic之后需要如下操作才能正常使用"></a>删除Topic之后需要如下操作才能正常使用</h1><ol>
<li>删除test2对应的kafka日志<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\tmp\kafka-logs\test2-0</span><br></pre></td></tr></table></figure></li>
<li>删除 ZK 日志<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\tmp\zookeeper\version-2\log.2a（或其他）</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>分布式-分布式消息队列-kafka-异常-Kafka启动日志分析</title>
    <url>/2022/08/03/%E5%88%86%E5%B8%83%E5%BC%8F-%E5%88%86%E5%B8%83%E5%BC%8F%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97-kafka-%E5%BC%82%E5%B8%B8-Kafka%E5%90%AF%E5%8A%A8%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="记录新的控制器，从现在开始将使用代理"><a href="#记录新的控制器，从现在开始将使用代理" class="headerlink" title="记录新的控制器，从现在开始将使用代理"></a>记录新的控制器，从现在开始将使用代理</h1><p>[2022-04-05 00:19:01,198] INFO [BrokerToControllerChannelManager broker=0 name=forwarding]: Recorded new controller, from now on will use broker LAPTOP-BKST47D9:9092 (id: 0 rack: null) (kafka.server.BrokerToControllerRequestThread)<br>[2022-04-05 00:19:01,198] INFO [BrokerToControllerChannelManager broker=0 name=alterIsr]: Recorded new controller, from now on will use broker LAPTOP-BKST47D9:9092 (id: 0 rack: null) (kafka.server.BrokerToControllerRequestThread)</p>
<h1 id="For-requests-intended-only-for-the-leader-this-error-indicates-that-the-broker-is-not-the-current-leader-For-requests-intended-for-any-replica-this-error-indicates-that-the-broker-is-not-a-replica-of-the-topic-partition"><a href="#For-requests-intended-only-for-the-leader-this-error-indicates-that-the-broker-is-not-the-current-leader-For-requests-intended-for-any-replica-this-error-indicates-that-the-broker-is-not-a-replica-of-the-topic-partition" class="headerlink" title="For requests intended only for the leader, this error indicates that the broker is not the current leader. For requests intended for any replica, this error indicates that the broker is not a replica of the topic partition"></a>For requests intended only for the leader, this error indicates that the broker is not the current leader. For requests intended for any replica, this error indicates that the broker is not a replica of the topic partition</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;0</span><br><span class="line">&gt;[2022-04-05 00:55:21,822] WARN [Producer clientId&#x3D;console-producer] Got error produce response with correlation id 4 on topic-partition test2-0, retrying (2 attempts left). Error: NOT_LEADER_OR_FOLLOWER (org.apache.kafka.clients.producer.internals.Sender)</span><br><span class="line">[2022-04-05 00:55:21,822] WARN [Producer clientId&#x3D;console-producer] Received invalid metadata error in produce request on partition test2-0 due to org.apache.kafka.common.errors.NotLeaderOrFollowerException: For requests intended only for the leader, this error indicates that the broker is not the current leader. For requests intended for any replica, this error indicates that the broker is not a replica of the topic partition.. Going to request metadata update now (org.apache.kafka.clients.producer.internals.Sender)</span><br><span class="line">[2022-04-05 00:55:21,937] WARN [Producer clientId&#x3D;console-producer] Got error produce response with correlation id 6 on topic-partition test2-0, retrying (1 attempts left). Error: NOT_LEADER_OR_FOLLOWER (org.apache.kafka.clients.producer.internals.Sender)</span><br><span class="line">[2022-04-05 00:55:21,938] WARN [Producer clientId&#x3D;console-producer] Received invalid metadata error in produce request on partition test2-0 due to org.apache.kafka.common.errors.NotLeaderOrFollowerException: For requests intended only for the leader, this error indicates that the broker is not the current leader. For requests intended for any replica, this error indicates that the broker is not a replica of the topic partition.. Going to request metadata update now (org.apache.kafka.clients.producer.internals.Sender)</span><br><span class="line">[2022-04-05 00:55:22,041] WARN [Producer clientId&#x3D;console-producer] Got error produce response with correlation id 8 on topic-partition test2-0, retrying (0 attempts left). Error: NOT_LEADER_OR_FOLLOWER (org.apache.kafka.clients.producer.internals.Sender)</span><br><span class="line">[2022-04-05 00:55:22,041] WARN [Producer clientId&#x3D;console-producer] Received invalid metadata error in produce request on partition test2-0 due to org.apache.kafka.common.errors.NotLeaderOrFollowerException: For requests intended only for the leader, this error indicates that the broker is not the current leader. For requests intended for any replica, this error indicates that the broker is not a replica of the topic partition.. Going to request metadata update now (org.apache.kafka.clients.producer.internals.Sender)</span><br><span class="line">[2022-04-05 00:55:22,145] ERROR Error when sending message to topic test2 with key: null, value: 1 bytes with error: (org.apache.kafka.clients.producer.internals.ErrorLoggingCallback)</span><br><span class="line">org.apache.kafka.common.errors.NotLeaderOrFollowerException: For requests intended only for the leader, this error indicates that the broker is not the current leader. For requests intended for any replica, this error indicates that the broker is not a replica of the topic partition.</span><br><span class="line">[2022-04-05 00:55:22,145] WARN [Producer clientId&#x3D;console-producer] Received invalid metadata error in produce request on partition test2-0 due to org.apache.kafka.common.errors.NotLeaderOrFollowerException: For requests intended only for the leader, this error indicates that the broker is not the current leader. For requests intended for any replica, this error indicates that the broker is not a replica of the topic partition.. Going to request metadata update now (org.apache.kafka.clients.producer.internals.Sender)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>原因是在集群环境下建立topic的时候，没有建立分区和副本，所以报了这个错。重新修改topic信息，然后就可以了。</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>分布式-分布式消息队列-kafka-异常-kafka启动doesn-t-match-stored-clusterId-Some-vSZ9JoaaSYmqv4MNleLXfg-in-meta-properties</title>
    <url>/2022/08/03/%E5%88%86%E5%B8%83%E5%BC%8F-%E5%88%86%E5%B8%83%E5%BC%8F%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97-kafka-%E5%BC%82%E5%B8%B8-kafka%E5%90%AF%E5%8A%A8doesn-t-match-stored-clusterId-Some-vSZ9JoaaSYmqv4MNleLXfg-in-meta-properties/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="doesn’t-match-stored-clusterId-Some-vSZ9JoaaSYmqv4MNleLXfg-in-meta-properties"><a href="#doesn’t-match-stored-clusterId-Some-vSZ9JoaaSYmqv4MNleLXfg-in-meta-properties" class="headerlink" title="doesn’t match stored clusterId Some(vSZ9JoaaSYmqv4MNleLXfg) in meta.properties"></a>doesn’t match stored clusterId Some(vSZ9JoaaSYmqv4MNleLXfg) in meta.properties</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INFO Cluster ID &#x3D; QihSqRV1TiiUuqq8IxcoMw (kafka.server.KafkaServer)</span><br><span class="line">[2022-04-04 22:00:21,646] ERROR Fatal error during KafkaServer startup. Prepare to shutdown (kafka.server.KafkaServer)</span><br><span class="line">kafka.common.InconsistentClusterIdException: The Cluster ID QihSqRV1TiiUuqq8IxcoMw doesn&#39;t match stored clusterId Some(vSZ9JoaaSYmqv4MNleLXfg) in meta.properties. The broker is trying to join the wrong cluster. Configured zookeeper.connect may be wrong.</span><br><span class="line">        at kafka.server.KafkaServer.startup(KafkaServer.scala:228)</span><br><span class="line">        at kafka.Kafka$.main(Kafka.scala:109)</span><br><span class="line">        at kafka.Kafka.main(Kafka.scala)</span><br><span class="line">[2022-04-04 22:00:21,678] INFO shutting down (kafka.server.KafkaServer)</span><br><span class="line">[2022-04-04 22:00:21,678] INFO [feature-zk-node-event-process-thread]: Shutting down (kafka.server.FinalizedFeatureChangeListener$ChangeNotificationProcessorThread)</span><br><span class="line">[2022-04-04 22:00:21,678] INFO [feature-zk-node-event-process-thread]: Stopped (kafka.server.FinalizedFeatureChangeListener$ChangeNotificationProcessorThread)</span><br><span class="line">[2022-04-04 22:00:21,678] INFO [feature-zk-node-event-process-thread]: Shutdown completed (kafka.server.FinalizedFeatureChangeListener$ChangeNotificationProcessorThread)</span><br><span class="line">[2022-04-04 22:00:21,678] INFO [ZooKeeperClient Kafka server] Closing. (kafka.zookeeper.ZooKeeperClient)</span><br><span class="line">[2022-04-04 22:00:21,846] INFO Session: 0x10016d131540000 closed (org.apache.zookeeper.ZooKeeper)</span><br><span class="line">[2022-04-04 22:00:21,846] INFO EventThread shut down for session: 0x10016d131540000 (org.apache.zookeeper.ClientCnxn)</span><br><span class="line">[2022-04-04 22:00:21,846] INFO [ZooKeeperClient Kafka server] Closed. (kafka.zookeeper.ZooKeeperClient)</span><br><span class="line">[2022-04-04 22:00:21,861] INFO App info kafka.server for 0 unregistered (org.apache.kafka.common.utils.AppInfoParser)</span><br><span class="line">[2022-04-04 22:00:21,861] INFO shut down completed (kafka.server.KafkaServer)</span><br><span class="line">[2022-04-04 22:00:21,861] ERROR Exiting Kafka. (kafka.Kafka$)</span><br><span class="line">[2022-04-04 22:00:21,892] INFO shutting down (kafka.server.KafkaServer)</span><br></pre></td></tr></table></figure>
<h1 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h1><ol>
<li>找到 config/server.properties 中的log.dir<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">############################# Log Basics #############################</span><br><span class="line"></span><br><span class="line"># A comma separated list of directories under which to store log files</span><br><span class="line">log.dirs&#x3D;D:&#x2F;tmp&#x2F;kafka-logs</span><br></pre></td></tr></table></figure></li>
<li>找到 log.dirs 下的meta.properties<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#</span><br><span class="line">#Sun Jun 14 19:58:03 CST 2020</span><br><span class="line">cluster.id&#x3D;vSZ9JoaaSYmqv4MNleLXfg</span><br><span class="line">version&#x3D;0</span><br><span class="line">broker.id&#x3D;0</span><br></pre></td></tr></table></figure></li>
<li>将错误提示里的id = vSZ9JoaaSYmqv4MNleLXfg ，修改在文件里<blockquote>
<p>匹配后发现cluster.id与错误日志中的id一致</p>
<h2 id="处理2"><a href="#处理2" class="headerlink" title="处理2"></a>处理2</h2></blockquote>
</li>
<li>直接删除log.dirs=D:/tmp/kafka-logs/meta.properties文件，重启即可<blockquote>
<p>只要该目录存在，再重启kafka时会自动生成该文件</p>
</blockquote>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>分布式-分布式消息队列-kafka-异常-Kafka启动-node-already-exists-and-owner-72083030559031298-does-not-match-current-session-72083315371278336</title>
    <url>/2022/08/03/%E5%88%86%E5%B8%83%E5%BC%8F-%E5%88%86%E5%B8%83%E5%BC%8F%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97-kafka-%E5%BC%82%E5%B8%B8-Kafka%E5%90%AF%E5%8A%A8-node-already-exists-and-owner-72083030559031298-does-not-match-current-session-72083315371278336/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="node-already-exists-and-owner-‘72083030559031298’-does-not-match-current-session-‘72083315371278336’"><a href="#node-already-exists-and-owner-‘72083030559031298’-does-not-match-current-session-‘72083315371278336’" class="headerlink" title="node already exists and owner ‘72083030559031298’ does not match current session ‘72083315371278336’"></a>node already exists and owner ‘72083030559031298’ does not match current session ‘72083315371278336’</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[2022-04-05 00:39:16,165] INFO Creating &#x2F;brokers&#x2F;ids&#x2F;0 (is it secure? false) (kafka.zk.KafkaZkClient)</span><br><span class="line">[2022-04-05 00:39:16,233] ERROR Error while creating ephemeral at &#x2F;brokers&#x2F;ids&#x2F;0, node already exists and owner &#39;72083030559031298&#39; does not match current session &#39;72083315371278336&#39; (kafka.zk.KafkaZkClient$CheckedEphemeral)</span><br><span class="line">[2022-04-05 00:39:16,233] ERROR [KafkaServer id&#x3D;0] Fatal error during KafkaServer startup. Prepare to shutdown (kafka.server.KafkaServer)</span><br><span class="line">org.apache.zookeeper.KeeperException$NodeExistsException: KeeperErrorCode &#x3D; NodeExists</span><br><span class="line">        at org.apache.zookeeper.KeeperException.create(KeeperException.java:126)</span><br><span class="line">        at kafka.zk.KafkaZkClient$CheckedEphemeral.getAfterNodeExists(KafkaZkClient.scala:1904)</span><br><span class="line">        at kafka.zk.KafkaZkClient$CheckedEphemeral.create(KafkaZkClient.scala:1842)</span><br><span class="line">        at kafka.zk.KafkaZkClient.checkedEphemeralCreate(KafkaZkClient.scala:1809)</span><br><span class="line">        at kafka.zk.KafkaZkClient.registerBroker(KafkaZkClient.scala:96)</span><br><span class="line">        at kafka.server.KafkaServer.startup(KafkaServer.scala:324)</span><br><span class="line">        at kafka.Kafka$.main(Kafka.scala:109)</span><br><span class="line">        at kafka.Kafka.main(Kafka.scala)</span><br><span class="line">[2022-04-05 00:39:16,233] INFO [KafkaServer id&#x3D;0] shutting down (kafka.server.KafkaServer)</span><br><span class="line">[2022-04-05 00:39:16,233] INFO [SocketServer listenerType&#x3D;ZK_BROKER, nodeId&#x3D;0] Stopping socket server request processors (kafka.network.SocketServer)</span><br><span class="line">[2022-04-05 00:39:16,249] INFO [SocketServer listenerType&#x3D;ZK_BROKER, nodeId&#x3D;0] Stopped socket server request processors (kafka.network.SocketServer)</span><br><span class="line">[2022-04-05 00:39:16,249] INFO [ReplicaManager broker&#x3D;0] Shutting down (kafka.server.ReplicaManager)</span><br><span class="line">[2022-04-05 00:39:16,249] INFO [LogDirFailureHandler]: Shutting down (kafka.server.ReplicaManager$LogDirFailureHandler)</span><br></pre></td></tr></table></figure>
<h1 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h1><p>实例抢占 重新启动</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>分布式-分布式消息队列-kafka-异常-windows环境下删除topic导致broker宕机</title>
    <url>/2022/08/03/%E5%88%86%E5%B8%83%E5%BC%8F-%E5%88%86%E5%B8%83%E5%BC%8F%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97-kafka-%E5%BC%82%E5%B8%B8-windows%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%88%A0%E9%99%A4topic%E5%AF%BC%E8%87%B4broker%E5%AE%95%E6%9C%BA/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="windows下删除topic导致Kafka退出"><a href="#windows下删除topic导致Kafka退出" class="headerlink" title="windows下删除topic导致Kafka退出"></a>windows下删除topic导致Kafka退出</h1><p>删除topic：test2<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[2022-04-04 23:12:47,807] ERROR Error while renaming dir for test2-0 in log dir D:\tmp\kafka-logs (kafka.server.LogDirFailureChannel)</span><br><span class="line">java.nio.file.AccessDeniedException: D:\tmp\kafka-logs\test2-0 -&gt; D:\tmp\kafka-logs\test2-0.75c7c849eca04c9a8d4a14b30d0ee427-delete</span><br><span class="line">        at sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:83)</span><br><span class="line">        at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:97)</span><br><span class="line">        at sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:387)</span><br><span class="line">        at sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:287)</span><br><span class="line">        at java.nio.file.Files.move(Files.java:1395)</span><br><span class="line">        at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:934)</span><br><span class="line">        at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:918)</span><br><span class="line">        at kafka.log.LocalLog.$anonfun$renameDir$2(LocalLog.scala:111)</span><br><span class="line">        at kafka.log.LocalLog.renameDir(LocalLog.scala:739)</span><br><span class="line">        at kafka.log.UnifiedLog.$anonfun$renameDir$2(UnifiedLog.scala:681)</span><br><span class="line">        at kafka.log.UnifiedLog.renameDir(UnifiedLog.scala:1707)</span><br><span class="line">        at kafka.log.LogManager.asyncDelete(LogManager.scala:1068)</span><br><span class="line">        at kafka.log.LogManager.$anonfun$asyncDelete$3(LogManager.scala:1103)</span><br><span class="line">        at scala.Option.foreach(Option.scala:407)</span><br><span class="line">        at kafka.log.LogManager.$anonfun$asyncDelete$2$adapted(LogManager.scala:1101)</span><br><span class="line">        at scala.collection.mutable.HashSet.foreach(HashSet.scala:79)</span><br><span class="line">        at kafka.log.LogManager.asyncDelete(LogManager.scala:1099)</span><br><span class="line">        at kafka.server.ReplicaManager.stopPartitions(ReplicaManager.scala:460)</span><br><span class="line">        at kafka.server.ReplicaManager.stopReplicas(ReplicaManager.scala:397)</span><br><span class="line">        at kafka.server.KafkaApis.handleStopReplicaRequest(KafkaApis.scala:291)</span><br><span class="line">        at kafka.server.KafkaApis.handle(KafkaApis.scala:174)</span><br><span class="line">        at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)</span><br><span class="line">        at java.lang.Thread.run(Thread.java:745)</span><br><span class="line">        Suppressed: java.nio.file.AccessDeniedException: D:\tmp\kafka-logs\test2-0 -&gt; D:\tmp\kafka-logs\test2-0.75c7c849eca04c9a8d4a14b30d0ee427-delete</span><br><span class="line">                at sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:83)</span><br><span class="line">                at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:97)</span><br><span class="line">                at sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:301)</span><br><span class="line">                at sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:287)</span><br><span class="line">                at java.nio.file.Files.move(Files.java:1395)</span><br><span class="line">                at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:931)</span><br><span class="line">                ... 17 more</span><br><span class="line">[2022-04-04 23:12:47,822] WARN [ReplicaManager broker&#x3D;0] Stopping serving replicas in dir D:\tmp\kafka-logs (kafka.server.ReplicaManager)</span><br></pre></td></tr></table></figure></p>
<h1 id="参考方案"><a href="#参考方案" class="headerlink" title="参考方案"></a>参考方案</h1><p><a href="https://stackoverflow.com/questions/50755827/accessdeniedexception-when-deleting-a-topic-on-windows-kafka" target="_blank" rel="noopener"></a></p>
<ol>
<li><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我知道我迟到了，但请记住，即使您手动删除主题或通过某些 Kafka UI 删除所有 kafka 日志，kafka 仍然可能无法启动，因为它与 ZK 同步的状态。</span><br><span class="line"></span><br><span class="line">因此，请确保通过删除 ZK 的日志来清理 ZK 状态。</span><br><span class="line"></span><br><span class="line">请知道这些行为是不可逆转的。也以管理员身份运行</span><br></pre></td></tr></table></figure></li>
<li><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我有一个类似的问题，它只发生在 Windows 下，请参阅KAFKA-1194，它仍然适用于 Kafka 1.1.0</span><br><span class="line"></span><br><span class="line">唯一可用的解决方法是禁用清洁器log.cleaner.enable &#x3D; false</span><br><span class="line"></span><br><span class="line">对于 windows 下的本地开发，您可以忽略此问题，因为它不适用于其他操作系统。</span><br></pre></td></tr></table></figure></li>
<li><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">删除主题后我遇到了类似的问题。我不得不去主题位置并手动删除它并且它有效。 &#x2F;tmp&#x2F;kafka-logs&#x2F;[yourTopicName]</span><br><span class="line"></span><br><span class="line">我不确定这是否对你有用，因为我也是 KAFKA 的新手。</span><br><span class="line"></span><br><span class="line">在我的情况下，我还必须删除 ZK 日志，然后它就起作用了</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h1><ol>
<li>删除test2对应的kafka日志<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\tmp\kafka-logs\test2-0</span><br></pre></td></tr></table></figure></li>
<li>删除 ZK 日志<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\tmp\zookeeper\version-2\log.2a（或其他）</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>分布式-分布式消息队列-kafka-异常-创建topic提示zookeeper-is-not-a-recognized-option</title>
    <url>/2022/08/03/%E5%88%86%E5%B8%83%E5%BC%8F-%E5%88%86%E5%B8%83%E5%BC%8F%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97-kafka-%E5%BC%82%E5%B8%B8-%E5%88%9B%E5%BB%BAtopic%E6%8F%90%E7%A4%BAzookeeper-is-not-a-recognized-option/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="zookeeper-is-not-a-recognized-option"><a href="#zookeeper-is-not-a-recognized-option" class="headerlink" title="zookeeper is not a recognized option"></a>zookeeper is not a recognized option</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\softAddress\kafka_2.12-3.1.0&gt;.\bin\windows\kafka-topics.bat --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test2</span><br><span class="line">Exception in thread &quot;main&quot; joptsimple.UnrecognizedOptionException: zookeeper is not a recognized option</span><br><span class="line">        at joptsimple.OptionException.unrecognizedOption(OptionException.java:108)</span><br><span class="line">        at joptsimple.OptionParser.handleLongOptionToken(OptionParser.java:510)</span><br><span class="line">        at joptsimple.OptionParserState$2.handleArgument(OptionParserState.java:56)</span><br><span class="line">        at joptsimple.OptionParser.parse(OptionParser.java:396)</span><br><span class="line">        at kafka.admin.TopicCommand$TopicCommandOptions.&lt;init&gt;(TopicCommand.scala:567)</span><br><span class="line">        at kafka.admin.TopicCommand$.main(TopicCommand.scala:47)</span><br><span class="line">        at kafka.admin.TopicCommand.main(TopicCommand.scala)</span><br></pre></td></tr></table></figure>
<h1 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h1><p>原来新版本的kafka，已经不需要依赖zookeeper来创建topic，新版的kafka创建topic指令为下：<br>windows:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.\bin\windows\kafka-topics.bat --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic test1</span><br></pre></td></tr></table></figure><br>linux:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;kafka-topics.sh --create --bootstrap-server master:9097 --replication-factor 1 --partitions 1 --topic test1</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>注意，这里的master是我主机ip映射的主机名，改成该kafka服务器对应的IP即可。</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>分布式-分布式消息队列-kafka-异常-创建topic失败Cancelled-createTopics-request-with-correlation-id-3-due-to-node-0-being-disconnected</title>
    <url>/2022/08/03/%E5%88%86%E5%B8%83%E5%BC%8F-%E5%88%86%E5%B8%83%E5%BC%8F%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97-kafka-%E5%BC%82%E5%B8%B8-%E5%88%9B%E5%BB%BAtopic%E5%A4%B1%E8%B4%A5Cancelled-createTopics-request-with-correlation-id-3-due-to-node-0-being-disconnected/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Cancelled-createTopics-request-with-correlation-id-3-due-to-node-0-being-disconnected"><a href="#Cancelled-createTopics-request-with-correlation-id-3-due-to-node-0-being-disconnected" class="headerlink" title="Cancelled createTopics request with correlation id 3 due to node 0 being disconnected"></a>Cancelled createTopics request with correlation id 3 due to node 0 being disconnected</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\softAddress\kafka_2.12-3.1.0\bin\windows&gt;kafka-topics.bat --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic test1</span><br><span class="line">Error while executing topic command : Call(callName&#x3D;createTopics, deadlineMs&#x3D;1649084056838, tries&#x3D;1, nextAllowedTryMs&#x3D;1649084056951) timed out at 1649084056851 after 1 attempt(s)</span><br><span class="line">[2022-04-04 22:54:16,855] ERROR org.apache.kafka.common.errors.TimeoutException: Call(callName&#x3D;createTopics, deadlineMs&#x3D;1649084056838, tries&#x3D;1, nextAllowedTryMs&#x3D;1649084056951) timed out at 1649084056851 after 1 attempt(s)</span><br><span class="line">Caused by: org.apache.kafka.common.errors.DisconnectException: Cancelled createTopics request with correlation id 3 due to node 0 being disconnected</span><br><span class="line"> (kafka.admin.TopicCommand$)</span><br></pre></td></tr></table></figure>
<h1 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h1><ol>
<li>查看kafka broker发现如下<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INFO [BrokerToControllerChannelManager broker&#x3D;0 name&#x3D;forwarding]: Recorded new controller, from now on will use broker LAPTOP-BKST47D9:9092 (id: 0 rack: null) (kafka.server.BrokerToControllerRequestThread)</span><br><span class="line">[2022-04-04 22:15:05,385] INFO [BrokerToControllerChannelManager broker&#x3D;0 name&#x3D;alterIsr]: Recorded new controller, from now on will use broker LAPTOP-BKST47D9:9092 (id: 0 rack: null) (kafka.server.BrokerToControllerRequestThread)</span><br></pre></td></tr></table></figure></li>
<li>使用ctrl + c执行如下<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[2022-04-04 22:15:05,385] INFO [BrokerToControllerChannelManager broker&#x3D;0 name&#x3D;forwarding]: Recorded new controller, from now on will use broker LAPTOP-BKST47D9:9092 (id: 0 rack: null) (kafka.server.BrokerToControllerRequestThread)</span><br><span class="line">[2022-04-04 22:15:05,385] INFO [BrokerToControllerChannelManager broker&#x3D;0 name&#x3D;alterIsr]: Recorded new controller, from now on will use broker LAPTOP-BKST47D9:9092 (id: 0 rack: null) (kafka.server.BrokerToControllerRequestThread)</span><br><span class="line">[2022-04-04 22:45:51,372] INFO Creating topic test1 with configuration &#123;&#125; and initial partition assignment Map(0 -&gt; ArrayBuffer(0)) (kafka.zk.AdminZkClient)</span><br><span class="line">[2022-04-04 22:53:17,084] INFO Creating topic test1 with configuration &#123;&#125; and initial partition assignment Map(0 -&gt; ArrayBuffer(0)) (kafka.zk.AdminZkClient)</span><br><span class="line">[2022-04-04 22:56:37,976] WARN Attempting to send response via channel for which there is no open connection, connection id 172.31.128.1:9092-172.31.128.1:54580-0 (kafka.network.Processor)</span><br><span class="line">[2022-04-04 22:56:38,133] INFO [Controller id&#x3D;0, targetBrokerId&#x3D;0] Node 0 disconnected. (org.apache.kafka.clients.NetworkClient)</span><br><span class="line">[2022-04-04 22:56:38,150] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions Set(test1-0) (kafka.server.ReplicaFetcherManager)</span><br><span class="line">[2022-04-04 22:56:38,260] INFO [LogLoader partition&#x3D;test1-0, dir&#x3D;D:\tmp\kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)</span><br><span class="line">[2022-04-04 22:56:38,358] INFO Created log for partition test1-0 in D:\tmp\kafka-logs\test1-0 with properties &#123;&#125; (kafka.log.LogManager)</span><br><span class="line">[2022-04-04 22:56:38,358] INFO [Partition test1-0 broker&#x3D;0] No checkpointed highwatermark is found for partition test1-0 (kafka.cluster.Partition)</span><br><span class="line">[2022-04-04 22:56:38,358] INFO [Partition test1-0 broker&#x3D;0] Log loaded for partition test1-0 with initial high watermark 0 (kafka.cluster.Partition)</span><br><span class="line">[2022-04-04 22:57:34,426] INFO Creating topic test2 with configuration &#123;&#125; and initial partition assignment Map(0 -&gt; ArrayBuffer(0)) (kafka.zk.AdminZkClient)</span><br><span class="line">[2022-04-04 22:57:34,593] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions Set(test2-0) (kafka.server.ReplicaFetcherManager)</span><br><span class="line">[2022-04-04 22:57:34,597] INFO [LogLoader partition&#x3D;test2-0, dir&#x3D;D:\tmp\kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)</span><br><span class="line">[2022-04-04 22:57:34,597] INFO Created log for partition test2-0 in D:\tmp\kafka-logs\test2-0 with properties &#123;&#125; (kafka.log.LogManager)</span><br></pre></td></tr></table></figure>
再创建即可</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-course-1-20-自定义类型的枚举</title>
    <url>/2022/08/03/python-notes-course-1-20-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%9E%9A%E4%B8%BE/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="自定义类型的枚举"><a href="#自定义类型的枚举" class="headerlink" title="自定义类型的枚举"></a>自定义类型的枚举</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python3</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line">from enum import Enum, unique</span><br><span class="line"></span><br><span class="line">Enum(&#39;Month&#39;, (&#39;Jan&#39;, &#39;Feb&#39;, &#39;Mar&#39;, &#39;Apr&#39;, &#39;May&#39;, &#39;Jun&#39;, &#39;Jul&#39;, &#39;Aug&#39;, &#39;Sep&#39;, &#39;Oct&#39;, &#39;Nov&#39;, &#39;Dec&#39;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># @unique 装饰器可以帮助我们检查保证没有重复值</span><br><span class="line">@unique</span><br><span class="line">class Month(Enum):</span><br><span class="line">    Jan &#x3D; &#39;January&#39;</span><br><span class="line">    Feb &#x3D; &#39;February&#39;</span><br><span class="line">    Mar &#x3D; &#39;March&#39;</span><br><span class="line">    Apr &#x3D; &#39;April&#39;</span><br><span class="line">    May &#x3D; &#39;May&#39;</span><br><span class="line">    Jun &#x3D; &#39;June&#39;</span><br><span class="line">    Jul &#x3D; &#39;July&#39;</span><br><span class="line">    Aug &#x3D; &#39;August&#39;</span><br><span class="line">    Sep &#x3D; &#39;September &#39;</span><br><span class="line">    Oct &#x3D; &#39;October&#39;</span><br><span class="line">    Nov &#x3D; &#39;November&#39;</span><br><span class="line">    Dec &#x3D; &#39;December&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    print(Month.Jan, &#39;----------&#39;,</span><br><span class="line">          Month.Jan.name, &#39;----------&#39;, Month.Jan.value)</span><br><span class="line">    for name, member in Month.__members__.items():</span><br><span class="line">        print(name, &#39;----------&#39;, member, &#39;----------&#39;, member.value)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>此时，member.value = January 或 February …<br>若不自定义，member.value = 数字，从1 开始</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-course-1-3-基本数据结构</title>
    <url>/2022/08/03/python-notes-course-1-3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><p>有单引号 ‘’，双引号 “”，三引号 ‘’’ ‘’’</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>如果要打印打印号，则可以使用双引号；如果要打印双引号，则可以使用三引号<br>例： ‘’’亮点水说：”你好！”‘’’</p>
<h1 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h1><p>包括 正整数、负整数 和 零<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int1 &#x3D; 1</span><br><span class="line">int2 &#x3D; 100</span><br><span class="line">int3 &#x3D; -8080</span><br><span class="line">int 4 &#x3D; 0</span><br><span class="line"></span><br><span class="line">print(int1)</span><br></pre></td></tr></table></figure></p>
<h1 id="浮点数"><a href="#浮点数" class="headerlink" title="浮点数"></a>浮点数</h1><p>输出数字类型<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int1 &#x3D; 1</span><br><span class="line">int2 &#x3D; 1 &#x2F; 2</span><br><span class="line"></span><br><span class="line">print(int1)</span><br><span class="line">print(int2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(type(int1))</span><br><span class="line">print(type(int2))</span><br><span class="line"></span><br><span class="line"># 结果</span><br><span class="line">1</span><br><span class="line">0.5</span><br><span class="line">&lt;class &#39;int&#39;&gt;</span><br><span class="line">&lt;class &#39;float&#39;&gt;</span><br></pre></td></tr></table></figure></p>
<h1 id="布尔值"><a href="#布尔值" class="headerlink" title="布尔值"></a>布尔值</h1><p>布尔值可以用 and、or 和 not 运算。</p>
<ol>
<li>and 运算是与运算，只有所有都为 True，and 运算结果才是 True。</li>
<li>or 运算是或运算，只要其中有一个为 True，or 运算结果就是 True。</li>
<li>not 运算是非运算，它是一个单目运算符，把 True 变成 False，False 变成 True。</li>
</ol>
<h1 id="空值"><a href="#空值" class="headerlink" title="空值"></a>空值</h1><p>基本上每种编程语言都有自己的特殊值——空值，在 Python 中，用 None 来表示</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-course-1-4-字符串的编码问题</title>
    <url>/2022/08/03/python-notes-course-1-4-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="字符串编码（中文）"><a href="#字符串编码（中文）" class="headerlink" title="字符串编码（中文）"></a>字符串编码（中文）</h1><p>当Python 解释器读取源代码时，为了让它按 UTF-8 编码读取，我们通常在文件开头写上这两行：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br></pre></td></tr></table></figure></p>
<ol>
<li>第一行注释是为了告诉 Linux/OS X 系统，这是一个 Python 可执行程序，Windows 系统会忽略这个注释；</li>
<li>第二行注释是为了告诉 Python 解释器，按照 UTF-8 编码读取源代码，否则，你在源代码中写的中文输出可能会有乱码。<blockquote>
<p>申明了 UTF-8 编码并不意味着你的 .py 文件就是 UTF-8 编码的，必须并且要确保文本编辑器正在使用 UTF-8 without BOM 编码</p>
</blockquote>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-course-1-6-多变量赋值</title>
    <url>/2022/08/03/python-notes-course-1-6-%E5%A4%9A%E5%8F%98%E9%87%8F%E8%B5%8B%E5%80%BC/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="多变量赋值"><a href="#多变量赋值" class="headerlink" title="多变量赋值"></a>多变量赋值</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a, b, c &#x3D; 1, 2, &quot;liangdianshui&quot;</span><br></pre></td></tr></table></figure>
<p>以上实例，两个整型对象 1 和 2 的分配给变量 a 和 b，字符串对象 “liangdianshui” 分配给变量 c。</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-course-1-5-基本数据类型转换</title>
    <url>/2022/08/03/python-notes-course-1-5-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="转换方法"><a href="#转换方法" class="headerlink" title="转换方法"></a>转换方法</h1><table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>int(x[,base ])</td>
<td>将x转换为一个整数</td>
</tr>
<tr>
<td>float(x )</td>
<td>将x转换到一个浮点数</td>
</tr>
<tr>
<td>complex(real [,imag ])</td>
<td>创建一个复数</td>
</tr>
<tr>
<td>str(x )</td>
<td>将对象 x 转换为字符串</td>
</tr>
<tr>
<td>repr(x )</td>
<td>将对象 x 转换为表达式字符串</td>
</tr>
<tr>
<td>eval(str )</td>
<td>用来计算在字符串中的有效 Python 表达式,并返回一个对象</td>
</tr>
<tr>
<td>tuple(s )</td>
<td>将序列 s 转换为一个元组</td>
</tr>
<tr>
<td>list(s )</td>
<td>将序列 s 转换为一个列表</td>
</tr>
<tr>
<td>chr(x )</td>
<td>将一个整数转换为一个字符</td>
</tr>
<tr>
<td>unichr(x )</td>
<td>将一个整数转换为 Unicode 字符</td>
</tr>
<tr>
<td>ord(x )</td>
<td>将一个字符转换为它的整数值</td>
</tr>
<tr>
<td>hex(x )</td>
<td>将一个整数转换为一个十六进制字符串</td>
</tr>
<tr>
<td>oct(x )</td>
<td>将一个整数转换为一个八进制字符串</td>
</tr>
</tbody>
</table>
<h1 id="整数形式的字符串可以转换成功int"><a href="#整数形式的字符串可以转换成功int" class="headerlink" title="整数形式的字符串可以转换成功int"></a>整数形式的字符串可以转换成功int</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(int(&#39;128&#39;))</span><br></pre></td></tr></table></figure>
<h1 id="小数形式的字符串不能转换成int"><a href="#小数形式的字符串不能转换成int" class="headerlink" title="小数形式的字符串不能转换成int"></a>小数形式的字符串不能转换成int</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(int(&#39;88.99&#39;))</span><br><span class="line"># 转换失败，报错</span><br></pre></td></tr></table></figure>
<h1 id="浮点数可以转换成int"><a href="#浮点数可以转换成int" class="headerlink" title="浮点数可以转换成int"></a>浮点数可以转换成int</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(int(88.99))</span><br><span class="line"># 输出结果 88，取整处理</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-course-1-7-list</title>
    <url>/2022/08/03/python-notes-course-1-7-list/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="创建list"><a href="#创建list" class="headerlink" title="创建list"></a>创建list</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">list1&#x3D;[&#39;两点水&#39;,&#39;twowter&#39;,&#39;liangdianshui&#39;,123]</span><br></pre></td></tr></table></figure>
<h1 id="如何访问list中的值"><a href="#如何访问list中的值" class="headerlink" title="如何访问list中的值"></a>如何访问list中的值</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name &#x3D; [&#39;一点水&#39;, &#39;两点水&#39;, &#39;三点水&#39;, &#39;四点水&#39;, &#39;五点水&#39;]</span><br><span class="line"></span><br><span class="line"># 通过索引来访问列表</span><br><span class="line">print(name[2])</span><br><span class="line"># 通过方括号的形式来截取列表中的数据</span><br><span class="line">print(name[0:2])</span><br><span class="line"># 左闭右开，只会打印： 一点水  两点水</span><br><span class="line"></span><br><span class="line"># 打印整个list</span><br><span class="line">print(name[:])</span><br><span class="line"></span><br><span class="line"># 左闭右开，从左边初始位置到右边的2，打印一点水  两点水</span><br><span class="line">print(name[:2])</span><br><span class="line"></span><br><span class="line"># 从左边2索引开始，一直打印到最后，三点水  四点水 五点水</span><br><span class="line">print(name[2:])</span><br></pre></td></tr></table></figure>
<h1 id="如何更新list"><a href="#如何更新list" class="headerlink" title="如何更新list"></a>如何更新list</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 通过索引对列表的数据项进行修改或更新</span><br><span class="line">name[1]&#x3D;&#39;2点水&#39;</span><br><span class="line">print(name)</span><br><span class="line"></span><br><span class="line"># 使用 append() 方法来添加列表项</span><br><span class="line">name.append(&#39;六点水&#39;)</span><br><span class="line">print(name)</span><br></pre></td></tr></table></figure>
<h1 id="如何删除元素"><a href="#如何删除元素" class="headerlink" title="如何删除元素"></a>如何删除元素</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 使用 del 语句来删除列表的的元素</span><br><span class="line">del name[3]</span><br><span class="line">print(name)</span><br></pre></td></tr></table></figure>
<h1 id="list常用运算符"><a href="#list常用运算符" class="headerlink" title="list常用运算符"></a>list常用运算符</h1><h2 id="求长度"><a href="#求长度" class="headerlink" title="求长度"></a>求长度</h2><p>len(list)                              3</p>
<h2 id="组合"><a href="#组合" class="headerlink" title="组合"></a>组合</h2><p>[1, 2, 3] + [4, 5, 6] = [1, 2, 3, 4, 5, 6]      </p>
<h2 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h2><p>[‘Hi!’] * 4                            [‘Hi!’, ‘Hi!’, ‘Hi!’, ‘Hi!’]    </p>
<h2 id="元素是否存在列表中"><a href="#元素是否存在列表中" class="headerlink" title="元素是否存在列表中"></a>元素是否存在列表中</h2><p>3 in [1, 2, 3]                        true or false</p>
<h2 id="迭代"><a href="#迭代" class="headerlink" title="迭代"></a>迭代</h2><p>for x in [1, 2, 3]: print x,        1 2 3</p>
<h1 id="list常用运算符-1"><a href="#list常用运算符-1" class="headerlink" title="list常用运算符"></a>list常用运算符</h1><table>
<thead>
<tr>
<th>函数&amp;方法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>len(list)</td>
<td>列表元素个数</td>
</tr>
<tr>
<td>max(list)</td>
<td>返回列表元素最大值</td>
</tr>
<tr>
<td>min(list)</td>
<td>返回列表元素最小值</td>
</tr>
<tr>
<td>list(seq)</td>
<td>将元组转换为列表</td>
</tr>
<tr>
<td>list.append(obj)</td>
<td>在列表末尾添加新的对象</td>
</tr>
<tr>
<td>list.count(obj)</td>
<td>统计某个元素在列表中出现的次数</td>
</tr>
<tr>
<td>list.extend(seq)</td>
<td>在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表）</td>
</tr>
<tr>
<td>list.index(obj)</td>
<td>从列表中找出某个值第一个匹配项的索引位置</td>
</tr>
<tr>
<td>list.insert(index, obj)</td>
<td>将对象插入列表</td>
</tr>
<tr>
<td>list.pop(obj=list[-1])</td>
<td>移除列表中的一个元素（默认最后一个元素），并且返回该元素的值</td>
</tr>
<tr>
<td>list.remove(obj)</td>
<td>移除列表中的一个元素（参数是列表中元素），并且不返回任何值</td>
</tr>
<tr>
<td>list.reverse()</td>
<td>反向列表中元素</td>
</tr>
<tr>
<td>list.sort([func])</td>
<td>对原列表进行排序</td>
</tr>
</tbody>
</table>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-course-1-8-元组</title>
    <url>/2022/08/03/python-notes-course-1-8-%E5%85%83%E7%BB%84/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h1><p>创建了 tuple 时候，它就不能改变了，也就是说它也没有 append()，insert() 这样的方法，但它也有获取某个索引值的方法，但是不能赋值。</p>
<h1 id="创建元组"><a href="#创建元组" class="headerlink" title="创建元组"></a>创建元组</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tuple1&#x3D;(&#39;两点水&#39;,&#39;twowter&#39;,&#39;liangdianshui&#39;,123,456)</span><br><span class="line">tuple2&#x3D;&#39;两点水&#39;,&#39;twowter&#39;,&#39;liangdianshui&#39;,123,456</span><br></pre></td></tr></table></figure>
<h2 id="创建空元组"><a href="#创建空元组" class="headerlink" title="创建空元组"></a>创建空元组</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tuple3&#x3D;()</span><br></pre></td></tr></table></figure>
<h2 id="元组中只有一个元素时，需要在后面加逗号"><a href="#元组中只有一个元素时，需要在后面加逗号" class="headerlink" title="元组中只有一个元素时，需要在后面加逗号"></a>元组中只有一个元素时，需要在后面加逗号</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tuple4&#x3D;(123,)</span><br></pre></td></tr></table></figure>
<p>如果不加逗号，创建出来的就不是 元组（tuple），而是指 123 这个数了。<br>这是因为括号 () 既可以表示元组（tuple），又可以表示数学公式中的小括号，这就产生了歧义。<br>所以如果只有一个元素时，你不加逗号，计算机就根本没法识别你是要进行整数或者小数运算还是表示元组。</p>
<h1 id="如何访问元组"><a href="#如何访问元组" class="headerlink" title="如何访问元组"></a>如何访问元组</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#-*-coding:utf-8-*-</span><br><span class="line"></span><br><span class="line">tuple1&#x3D;(&#39;两点水&#39;,&#39;twowter&#39;,&#39;liangdianshui&#39;,123,456)</span><br><span class="line">tuple2&#x3D;&#39;两点水&#39;,&#39;twowter&#39;,&#39;liangdianshui&#39;,123,456</span><br><span class="line"></span><br><span class="line">print(tuple1[1])</span><br><span class="line">print(tuple2[0])</span><br></pre></td></tr></table></figure>
<h1 id="修改元组"><a href="#修改元组" class="headerlink" title="修改元组"></a>修改元组</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#-*-coding:utf-8-*-</span><br><span class="line">list1&#x3D;[123,456]</span><br><span class="line">tuple1&#x3D;(&#39;两点水&#39;,&#39;twowater&#39;,&#39;liangdianshui&#39;,list1)</span><br><span class="line">print(tuple1)</span><br><span class="line">list1[0]&#x3D;789</span><br><span class="line">list1[1]&#x3D;100</span><br><span class="line">print(tuple1)</span><br></pre></td></tr></table></figure>
<p>输出结果：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(&#39;两点水&#39;, &#39;twowater&#39;, &#39;liangdianshui&#39;, [123, 456])</span><br><span class="line">(&#39;两点水&#39;, &#39;twowater&#39;, &#39;liangdianshui&#39;, [789, 100])</span><br></pre></td></tr></table></figure></p>
<h1 id="删除元组"><a href="#删除元组" class="headerlink" title="删除元组"></a>删除元组</h1><p>tuple 元组中的元素值是不允许删除的，但我们可以使用 del 语句来删除整个元组<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#-*-coding:utf-8-*-</span><br><span class="line"></span><br><span class="line">tuple1&#x3D;(&#39;两点水&#39;,&#39;twowter&#39;,&#39;liangdianshui&#39;,[123,456])</span><br><span class="line">print(tuple1)</span><br><span class="line">del tuple1</span><br></pre></td></tr></table></figure></p>
<h1 id="tuple-（元组）运算符"><a href="#tuple-（元组）运算符" class="headerlink" title="tuple （元组）运算符"></a>tuple （元组）运算符</h1><p>与字符串一样，元组之间可以使用 + 号和 * 号进行运算。这就意味着他们可以组合和复制，运算后会生成一个新的元组。    </p>
<table>
<thead>
<tr>
<th>Python 表达式</th>
<th>结果</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>len((1, 2, 3))</td>
<td>3</td>
<td>计算元素个数</td>
</tr>
<tr>
<td>(1, 2, 3) + (4, 5, 6)</td>
<td>(1, 2, 3, 4, 5, 6)</td>
<td>连接</td>
</tr>
<tr>
<td>(‘Hi!’,) * 4</td>
<td>(‘Hi!’, ‘Hi!’, ‘Hi!’, ‘Hi!’)</td>
<td>复制</td>
</tr>
<tr>
<td>3 in (1, 2, 3)</td>
<td>True</td>
<td>元素是否存在</td>
</tr>
<tr>
<td>for x in (1, 2, 3): print(x)</td>
<td>1 2 3</td>
<td>迭代</td>
</tr>
</tbody>
</table>
<h1 id="元组内置函数"><a href="#元组内置函数" class="headerlink" title="元组内置函数"></a>元组内置函数</h1><table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>len(tuple)</td>
<td>计算元组元素个数</td>
</tr>
<tr>
<td>max(tuple)</td>
<td>返回元组中元素最大值</td>
</tr>
<tr>
<td>min(tuple)</td>
<td>返回元组中元素最小值</td>
</tr>
<tr>
<td>tuple(seq)</td>
<td>将列表转换为元组</td>
</tr>
</tbody>
</table>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-course-1-9-字典dict</title>
    <url>/2022/08/03/python-notes-course-1-9-%E5%AD%97%E5%85%B8dict/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h1><p>类似java中的hashmap<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name &#x3D; &#123;&#39;一点水&#39;: &#39;131456780001&#39;, &#39;两点水&#39;: &#39;131456780002&#39;, &#39;三点水&#39;: &#39;131456780003&#39;, &#39;四点水&#39;: &#39;131456780004&#39;, &#39;五点水&#39;: &#39;131456780005&#39;&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="创建字典"><a href="#创建字典" class="headerlink" title="创建字典"></a>创建字典</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dict &#x3D; &#123;key1 : value1, key2 : value2 &#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：键必须是唯一的，但值则不必。值可以取任何数据类型，但键必须是不可变的。<br>例：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dict1&#x3D;&#123;&#39;liangdianshui&#39;:&#39;111111&#39; ,&#39;twowater&#39;:&#39;222222&#39; ,&#39;两点水&#39;:&#39;333333&#39;&#125;</span><br><span class="line">dict2&#x3D;&#123;&#39;abc&#39;:1234,1234:&#39;abc&#39;&#125;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h1 id="访问字典"><a href="#访问字典" class="headerlink" title="访问字典"></a>访问字典</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name &#x3D; &#123;&#39;一点水&#39;: &#39;131456780001&#39;, &#39;两点水&#39;: &#39;131456780002&#39;, &#39;三点水&#39;: &#39;131456780003&#39;, &#39;四点水&#39;: &#39;131456780004&#39;, &#39;五点水&#39;: &#39;131456780005&#39;&#125;</span><br><span class="line"></span><br><span class="line">print(name[&#39;两点水&#39;])</span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果字典中没有这个键，是会报错的。</p>
</blockquote>
<h1 id="修改字典"><a href="#修改字典" class="headerlink" title="修改字典"></a>修改字典</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#-*-coding:utf-8-*-</span><br><span class="line">dict1&#x3D;&#123;&#39;liangdianshui&#39;:&#39;111111&#39; ,&#39;twowater&#39;:&#39;222222&#39; ,&#39;两点水&#39;:&#39;333333&#39;&#125;</span><br><span class="line">print(dict1)</span><br><span class="line"># 新增一个键值对</span><br><span class="line">dict1[&#39;jack&#39;]&#x3D;&#39;444444&#39;</span><br><span class="line">print(dict1)</span><br><span class="line"># 修改键值对</span><br><span class="line">dict1[&#39;liangdianshui&#39;]&#x3D;&#39;555555&#39;</span><br><span class="line">print(dict1)</span><br></pre></td></tr></table></figure>
<p>输出结果：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#39;liangdianshui&#39;: &#39;111111&#39;, &#39;twowater&#39;: &#39;222222&#39;, &#39;两点水&#39;: &#39;333333&#39;&#125;</span><br><span class="line">&#123;&#39;liangdianshui&#39;: &#39;111111&#39;, &#39;twowater&#39;: &#39;222222&#39;, &#39;两点水&#39;: &#39;333333&#39;, &#39;jack&#39;: &#39;444444&#39;&#125;</span><br><span class="line">&#123;&#39;liangdianshui&#39;: &#39;555555&#39;, &#39;twowater&#39;: &#39;222222&#39;, &#39;两点水&#39;: &#39;333333&#39;, &#39;jack&#39;: &#39;444444&#39;&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="删除字典"><a href="#删除字典" class="headerlink" title="删除字典"></a>删除字典</h1><p>通过 del 可以删除 dict （字典）中的某个元素，也能删除 dict （字典）<br>通过调用 clear() 方法可以清除字典中的所有元素<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#-*-coding:utf-8-*-</span><br><span class="line">dict1&#x3D;&#123;&#39;liangdianshui&#39;:&#39;111111&#39; ,&#39;twowater&#39;:&#39;222222&#39; ,&#39;两点水&#39;:&#39;333333&#39;&#125;</span><br><span class="line">print(dict1)</span><br><span class="line"># 通过 key 值，删除对应的元素</span><br><span class="line">del dict1[&#39;twowater&#39;]</span><br><span class="line">print(dict1)</span><br><span class="line"># 删除字典中的所有元素</span><br><span class="line">dict1.clear()</span><br><span class="line">print(dict1)</span><br><span class="line"># 删除字典</span><br><span class="line">del dict1</span><br></pre></td></tr></table></figure><br>输出结果：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#39;liangdianshui&#39;: &#39;111111&#39;, &#39;twowater&#39;: &#39;222222&#39;, &#39;两点水&#39;: &#39;333333&#39;&#125;</span><br><span class="line">&#123;&#39;liangdianshui&#39;: &#39;111111&#39;, &#39;两点水&#39;: &#39;333333&#39;&#125;</span><br><span class="line">&#123;&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ol>
<li>dict （字典）是不允许一个键创建两次的，但是在创建 dict （字典）的时候如果出现了一个键值赋予了两次，会以最后一次赋予的值为准<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#-*-coding:utf-8-*-</span><br><span class="line">dict1&#x3D;&#123;&#39;liangdianshui&#39;:&#39;111111&#39; ,&#39;twowater&#39;:&#39;222222&#39; ,&#39;两点水&#39;:&#39;333333&#39;,&#39;twowater&#39;:&#39;444444&#39;&#125;</span><br><span class="line">print(dict1)</span><br><span class="line">print(dict1[&#39;twowater&#39;])</span><br></pre></td></tr></table></figure>
结果：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#39;liangdianshui&#39;: &#39;111111&#39;, &#39;twowater&#39;: &#39;444444&#39;, &#39;两点水&#39;: &#39;333333&#39;&#125;</span><br><span class="line">444444</span><br></pre></td></tr></table></figure></li>
<li>dict （字典）键必须不可变，可是键可以用数字，字符串或元组充当，但是就是不能使用列表<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#-*-coding:utf-8-*-</span><br><span class="line">dict1&#x3D;&#123;&#39;liangdianshui&#39;:&#39;111111&#39; ,123:&#39;222222&#39; ,(123,&#39;tom&#39;):&#39;333333&#39;,&#39;twowater&#39;:&#39;444444&#39;&#125;</span><br><span class="line">print(dict1)</span><br></pre></td></tr></table></figure>
结果：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#39;liangdianshui&#39;: &#39;111111&#39;, 123: &#39;222222&#39;, (123, &#39;tom&#39;): &#39;333333&#39;, &#39;twowater&#39;: &#39;444444&#39;&#125;</span><br></pre></td></tr></table></figure></li>
<li>dict 内部存放的顺序和 key 放入的顺序是没有任何关系</li>
</ol>
<h1 id="函数和方法"><a href="#函数和方法" class="headerlink" title="函数和方法"></a>函数和方法</h1><table>
<thead>
<tr>
<th>方法和函数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>len(dict)</td>
<td>计算字典元素个数</td>
</tr>
<tr>
<td>str(dict)</td>
<td>输出字典可打印的字符串表示</td>
</tr>
<tr>
<td>type(variable)</td>
<td>返回输入的变量类型，如果变量是字典就返回字典类型</td>
</tr>
<tr>
<td>dict.clear()</td>
<td>删除字典内所有元素</td>
</tr>
<tr>
<td>dict.copy()</td>
<td>返回一个字典的浅复制</td>
</tr>
<tr>
<td>dict.values()</td>
<td>以列表返回字典中的所有值</td>
</tr>
<tr>
<td>popitem()</td>
<td>随机返回并删除字典中的一对键和值</td>
</tr>
<tr>
<td>dict.items()</td>
<td>以列表返回可遍历的(键, 值) 元组数组</td>
</tr>
</tbody>
</table>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-fuc-常用功能</title>
    <url>/2022/08/03/python-notes-fuc-%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>#<br>pip3 install pywin32 or pip install pywin32</p>
<p>pip install pydocx</p>
<p>python -m pip install pypiwin32</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-fuc-com-win32</title>
    <url>/2022/08/03/python-notes-fuc-com-win32/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>调用import win32com.client出错的解决办法：<a href="https://www.cnblogs.com/bbjs/p/13221599.html" target="_blank" rel="noopener">https://www.cnblogs.com/bbjs/p/13221599.html</a></strong></li>
</ul>
<hr>
<h1 id="import-win32com-client"><a href="#import-win32com-client" class="headerlink" title="import win32com.client"></a>import win32com.client</h1><p>提示找不到模块时，在项目根目录终端下执行：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PS E:\workspace-all\workspace-py\projects-practicing&gt; python -m pip install pypiwin32</span><br><span class="line">Collecting pypiwin32</span><br><span class="line">  Using cached pypiwin32-223-py3-none-any.whl (1.7 kB)</span><br><span class="line">Collecting pywin32&gt;&#x3D;223</span><br><span class="line">  Using cached pywin32-303-cp38-cp38-win_amd64.whl (9.3 MB)</span><br><span class="line">Installing collected packages: pywin32, pypiwin32</span><br><span class="line">Successfully installed pypiwin32-223 pywin32-303</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-course-1-1-前言规范介绍</title>
    <url>/2022/08/03/python-notes-course-1-1-%E5%89%8D%E8%A8%80%E8%A7%84%E8%8C%83%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>教程来源：<a href="https://www.readwithu.com/Article/codeSpecification/codeSpecification_first.html" target="_blank" rel="noopener">https://www.readwithu.com/Article/codeSpecification/codeSpecification_first.html</a></strong></li>
</ul>
<hr>
<h1 id="引号"><a href="#引号" class="headerlink" title="引号"></a>引号</h1><p>简单说，自然语言使用双引号，机器标示使用单引号，因此 代码里 多数应该使用 单引号</p>
<ul>
<li>自然语言 使用双引号 “…”<br>例如错误信息；很多情况还是 unicode，使用u”你好世界”</li>
<li>机器标识 使用单引号 ‘…’ 例如 dict 里的 key</li>
<li>正则表达式 使用原生的双引号 r”…”</li>
<li>文档字符串 (docstring) 使用三个双引号 “””……”””</li>
</ul>
<h1 id="空行"><a href="#空行" class="headerlink" title="空行"></a>空行</h1><ul>
<li>模块级函数和类定义之间空两行；</li>
<li>类成员函数之间空一行；<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class A:</span><br><span class="line"></span><br><span class="line">    def __init__(self):</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line">    def hello(self):</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    pass</span><br></pre></td></tr></table></figure></li>
<li>可以使用多个空行分隔多组相关的函数</li>
<li>函数中可以使用空行分隔出逻辑相关的代码</li>
</ul>
<h1 id="import-语句"><a href="#import-语句" class="headerlink" title="import 语句"></a>import 语句</h1><ul>
<li>import 语句应该分行书写<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 正确的写法</span><br><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"># 不推荐的写法</span><br><span class="line">import sys,os</span><br><span class="line"></span><br><span class="line"># 正确的写法</span><br><span class="line">from subprocess import Popen, PIPE</span><br></pre></td></tr></table></figure></li>
<li>import语句应该使用 absolute import<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 正确的写法</span><br><span class="line">from foo.bar import Bar</span><br><span class="line"></span><br><span class="line"># 不推荐的写法</span><br><span class="line">from ..bar import Bar</span><br></pre></td></tr></table></figure></li>
<li>import语句应该放在文件头部，置于模块说明及docstring之后，于全局变量之前；</li>
<li>import语句应该按照顺序排列，每组之间用一个空行分隔<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">import msgpack</span><br><span class="line">import zmq</span><br><span class="line"></span><br><span class="line">import foo</span><br></pre></td></tr></table></figure></li>
<li>导入其他模块的类定义时，可以使用相对导入<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from myclass import MyClass</span><br></pre></td></tr></table></figure></li>
<li>如果发生命名冲突，则可使用命名空间<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import bar</span><br><span class="line">import foo.bar</span><br><span class="line"></span><br><span class="line">bar.Bar()</span><br><span class="line">foo.bar.Bar()</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h1><ul>
<li>在二元运算符两边各空一格[=,-,+=,==,&gt;,in,is not, and]:<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 正确的写法</span><br><span class="line">i &#x3D; i + 1</span><br><span class="line">submitted +&#x3D; 1</span><br><span class="line">x &#x3D; x * 2 - 1</span><br><span class="line">hypot2 &#x3D; x * x + y * y</span><br><span class="line">c &#x3D; (a + b) * (a - b)</span><br><span class="line"></span><br><span class="line"># 不推荐的写法</span><br><span class="line">i&#x3D;i+1</span><br><span class="line">submitted +&#x3D;1</span><br><span class="line">x &#x3D; x*2 - 1</span><br><span class="line">hypot2 &#x3D; x*x + y*y</span><br><span class="line">c &#x3D; (a+b) * (a-b)</span><br></pre></td></tr></table></figure></li>
<li>函数的参数列表中，,之后要有空格<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 正确的写法</span><br><span class="line">def complex(real, imag):</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line"># 不推荐的写法</span><br><span class="line">def complex(real,imag):</span><br><span class="line">    pass</span><br></pre></td></tr></table></figure></li>
<li>函数的参数列表中，默认值等号两边不要添加空格<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 正确的写法</span><br><span class="line">def complex(real, imag&#x3D;0.0):</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line"># 不推荐的写法</span><br><span class="line">def complex(real, imag &#x3D; 0.0):</span><br><span class="line">    pass</span><br></pre></td></tr></table></figure></li>
<li>左括号之后，右括号之前不要加多余的空格<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 正确的写法</span><br><span class="line">spam(ham[1], &#123;eggs: 2&#125;)</span><br><span class="line"></span><br><span class="line"># 不推荐的写法</span><br><span class="line">spam( ham[1], &#123; eggs : 2 &#125; )</span><br></pre></td></tr></table></figure></li>
<li>字典对象的左括号之前不要多余的空格<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 正确的写法</span><br><span class="line">dict[&#39;key&#39;] &#x3D; list[index]</span><br><span class="line"></span><br><span class="line"># 不推荐的写法</span><br><span class="line">dict [&#39;key&#39;] &#x3D; list [index]</span><br></pre></td></tr></table></figure></li>
<li>不要为对齐赋值语句而使用的额外空格<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 正确的写法</span><br><span class="line">x &#x3D; 1</span><br><span class="line">y &#x3D; 2</span><br><span class="line">long_variable &#x3D; 3</span><br><span class="line"></span><br><span class="line"># 不推荐的写法</span><br><span class="line">x             &#x3D; 1</span><br><span class="line">y             &#x3D; 2</span><br><span class="line">long_variable &#x3D; 3</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h1><ul>
<li>第二行缩进到括号的起始处<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">foo &#x3D; long_function_name(var_one, var_two,</span><br><span class="line">                         var_three, var_four)</span><br></pre></td></tr></table></figure></li>
<li>第二行缩进 4 个空格，适用于起始括号就换行的情形<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def long_function_name(</span><br><span class="line">        var_one, var_two, var_three,</span><br><span class="line">        var_four):</span><br><span class="line">    print(var_one)</span><br></pre></td></tr></table></figure>
使用反斜杠\换行，二元运算符+ .等应出现在行末；长字符串也可以用此法换行<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">session.query(MyTable).\</span><br><span class="line">        filter_by(id&#x3D;1).\</span><br><span class="line">        one()</span><br><span class="line"></span><br><span class="line">print &#39;Hello, &#39;\</span><br><span class="line">      &#39;%s %s!&#39; %\</span><br><span class="line">      (&#39;Harry&#39;, &#39;Potter&#39;)</span><br></pre></td></tr></table></figure></li>
<li>禁止复合语句，即一行中包含多个语句：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 正确的写法</span><br><span class="line">do_first()</span><br><span class="line">do_second()</span><br><span class="line">do_third()</span><br><span class="line"></span><br><span class="line"># 不推荐的写法</span><br><span class="line">do_first();do_second();do_third();</span><br></pre></td></tr></table></figure></li>
<li>if/for/while一定要换行：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 正确的写法</span><br><span class="line">if foo &#x3D;&#x3D; &#39;blah&#39;:</span><br><span class="line">    do_blah_thing()</span><br><span class="line"></span><br><span class="line"># 不推荐的写法</span><br><span class="line">if foo &#x3D;&#x3D; &#39;blah&#39;: do_blash_thing()</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="docstring"><a href="#docstring" class="headerlink" title="docstring"></a>docstring</h1><p>docstring 的规范中最其本的两点：</p>
<ol>
<li>所有的公共模块、函数、类、方法，都应该写 docstring 。私有方法不一定需要，但应该在 def 后提供一个块注释来说明。</li>
<li>docstring 的结束”””应该独占一行，除非此 docstring 只有一行。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;&quot;&quot;Return a foobar</span><br><span class="line">Optional plotz says to frobnicate the bizbaz first.</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;Oneline docstring&quot;&quot;&quot;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-course-1-10-set</title>
    <url>/2022/08/03/python-notes-course-1-10-set/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="set"><a href="#set" class="headerlink" title="set"></a>set</h1><p>创建一个 set，需要提供一个 list 作为输入集合<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set1&#x3D;set([123,456,789])</span><br><span class="line">print(set1)</span><br></pre></td></tr></table></figure><br>结果：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;456, 123, 789&#125;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>set是无序的</p>
<h2 id="重复Key会被过滤，可以理解为hashset"><a href="#重复Key会被过滤，可以理解为hashset" class="headerlink" title="重复Key会被过滤，可以理解为hashset"></a>重复Key会被过滤，可以理解为hashset</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set1&#x3D;set([123,456,789,123,123])</span><br><span class="line">print(set1)</span><br></pre></td></tr></table></figure>
<p>结果：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;456, 123, 789&#125;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h1 id="添加元素"><a href="#添加元素" class="headerlink" title="添加元素"></a>添加元素</h1><p>通过 add(key) 方法可以添加元素到 set 中，可以重复添加，但不会有效果<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set1&#x3D;set([123,456,789])</span><br><span class="line">print(set1)</span><br><span class="line">set1.add(100)</span><br><span class="line">print(set1)</span><br><span class="line">set1.add(100)</span><br><span class="line">print(set1)</span><br></pre></td></tr></table></figure></p>
<h1 id="删除元素"><a href="#删除元素" class="headerlink" title="删除元素"></a>删除元素</h1><p>通过 remove(key) 方法可以删除 set 中的元素<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set1&#x3D;set([123,456,789])</span><br><span class="line">print(set1)</span><br><span class="line">set1.remove(456)</span><br><span class="line">print(set1)</span><br></pre></td></tr></table></figure></p>
<h1 id="set-运用"><a href="#set-运用" class="headerlink" title="set 运用"></a>set 运用</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set1&#x3D;set(&#39;hello&#39;)</span><br><span class="line">set2&#x3D;set([&#39;p&#39;,&#39;y&#39;,&#39;y&#39;,&#39;h&#39;,&#39;o&#39;,&#39;n&#39;])</span><br><span class="line">print(set1)</span><br><span class="line">print(set2)</span><br></pre></td></tr></table></figure>
<h2 id="交集"><a href="#交集" class="headerlink" title="交集"></a>交集</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 交集 (求两个 set 集合中相同的元素)</span><br><span class="line">set3&#x3D;set1 &amp; set2</span><br><span class="line">print(&#39;\n交集 set3:&#39;)</span><br><span class="line">print(set3)</span><br></pre></td></tr></table></figure>
<h2 id="并集"><a href="#并集" class="headerlink" title="并集"></a>并集</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 并集 （合并两个 set 集合的元素并去除重复的值）</span><br><span class="line">set4&#x3D;set1 | set2</span><br><span class="line">print(&#39;\n并集 set4:&#39;)</span><br><span class="line">print(set4)</span><br></pre></td></tr></table></figure>
<h2 id="差集"><a href="#差集" class="headerlink" title="差集"></a>差集</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 差集</span><br><span class="line">set5&#x3D;set1 - set2</span><br><span class="line">set6&#x3D;set2 - set1</span><br><span class="line">print(&#39;\n差集 set5:&#39;)</span><br><span class="line">print(set5)</span><br><span class="line">print(&#39;\n差集 set6:&#39;)</span><br><span class="line">print( set6)</span><br></pre></td></tr></table></figure>
<h2 id="去重"><a href="#去重" class="headerlink" title="去重"></a>去重</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 去除海量列表里重复元素，用 hash 来解决也行，只不过感觉在性能上不是很高，用 set 解决还是很不错的</span><br><span class="line">list1 &#x3D; [111,222,333,444,111,222,333,444,555,666]  </span><br><span class="line">set7&#x3D;set(list1)</span><br><span class="line">print(&#39;\n去除列表里重复元素 set7:&#39;)</span><br><span class="line">print(set7)</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-course-1-11-条件语句</title>
    <url>/2022/08/03/python-notes-course-1-11-%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h1><p>Python 程序语言指定任何非 0 和非空（null）值为 True，0 或者 null 为 False。</p>
<h1 id="if-语句基本形式"><a href="#if-语句基本形式" class="headerlink" title="if 语句基本形式"></a>if 语句基本形式</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if 判断条件：</span><br><span class="line">    执行语句……</span><br><span class="line">else：</span><br><span class="line">    执行语句……</span><br></pre></td></tr></table></figure>
<h2 id="非零数值、非空字符串、非空-list-等，判断为-True，否则为-False。"><a href="#非零数值、非空字符串、非空-list-等，判断为-True，否则为-False。" class="headerlink" title="非零数值、非空字符串、非空 list 等，判断为 True，否则为 False。"></a>非零数值、非空字符串、非空 list 等，判断为 True，否则为 False。</h2><p>因此也可以这样写：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">num &#x3D; 6</span><br><span class="line">if num :</span><br><span class="line">    print(&#39;Hello Python&#39;)</span><br></pre></td></tr></table></figure></p>
<h1 id="多个条件判断形式"><a href="#多个条件判断形式" class="headerlink" title="多个条件判断形式"></a>多个条件判断形式</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if 判断条件1:</span><br><span class="line">    执行语句1……</span><br><span class="line">elif 判断条件2:</span><br><span class="line">    执行语句2……</span><br><span class="line">elif 判断条件3:</span><br><span class="line">    执行语句3……</span><br><span class="line">else:</span><br><span class="line">    执行语句4……</span><br></pre></td></tr></table></figure>
<h1 id="多个条件同时判断"><a href="#多个条件同时判断" class="headerlink" title="多个条件同时判断"></a>多个条件同时判断</h1><p>and  or<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># -*-coding:utf-8-*-</span><br><span class="line"></span><br><span class="line">java &#x3D; 86</span><br><span class="line">python &#x3D; 68</span><br><span class="line"></span><br><span class="line">if java &gt; 80 and  python &gt; 80:</span><br><span class="line">    print(&#39;优秀&#39;)</span><br><span class="line">else :</span><br><span class="line">    print(&#39;不优秀&#39;)</span><br><span class="line"></span><br><span class="line">if ( java &gt;&#x3D; 80  and java &lt; 90 )  or ( python &gt;&#x3D; 80 and python &lt; 90):</span><br><span class="line">    print(&#39;良好&#39;)</span><br></pre></td></tr></table></figure></p>
<h1 id="if嵌套"><a href="#if嵌套" class="headerlink" title="if嵌套"></a>if嵌套</h1><p>类似java</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-course-1-12-循环语句</title>
    <url>/2022/08/03/python-notes-course-1-12-%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h1><table>
<thead>
<tr>
<th>循环控制语句</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>break</td>
<td>在语句块执行过程中终止循环，并且跳出整个循环</td>
</tr>
<tr>
<td>continue</td>
<td>在语句块执行过程中终止当前循环，跳出该次循环，执行下一次循环</td>
</tr>
<tr>
<td>pass</td>
<td>pass 是空语句，是为了保持程序结构的完整性</td>
</tr>
</tbody>
</table>
<h1 id="字符串循环打印字符"><a href="#字符串循环打印字符" class="headerlink" title="字符串循环打印字符"></a>字符串循环打印字符</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for letter in &#39;Hello 两点水&#39;:</span><br><span class="line">    print(letter)</span><br></pre></td></tr></table></figure>
<p>结果：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">H</span><br><span class="line">e</span><br><span class="line">l</span><br><span class="line">l</span><br><span class="line">o</span><br><span class="line"></span><br><span class="line">两</span><br><span class="line">点</span><br><span class="line">水</span><br></pre></td></tr></table></figure></p>
<h1 id="字典循环"><a href="#字典循环" class="headerlink" title="字典循环"></a>字典循环</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dict &#x3D; &#123;&#39;abc&#39;:&#39;123&#39;,&#39;edf&#39;:&#39;345&#39;&#125;</span><br><span class="line">for i in dict:</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>只打印字典中的KEY</p>
</blockquote>
<h1 id="range-函数"><a href="#range-函数" class="headerlink" title="range() 函数"></a>range() 函数</h1><ol>
<li>使用 range(x) 函数，就可以生成一个从 0 到 x-1 的整数序列。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for i in range(3):</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure>
结果:<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0</span><br><span class="line">1</span><br><span class="line">2</span><br></pre></td></tr></table></figure>
<blockquote>
<p>range(3) 可以写成 range(0,3), 结果是一样的。</p>
</blockquote>
</li>
<li>range(a,b) 函数，你可以生成了一个左闭右开的整数序列。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for i in range(2,3):</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure>
结果：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="While-循环语句"><a href="#While-循环语句" class="headerlink" title="While 循环语句"></a>While 循环语句</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">count &#x3D; 1</span><br><span class="line">sum1 &#x3D; 0</span><br><span class="line"></span><br><span class="line">while count &lt;&#x3D; 100:</span><br><span class="line">    sum1 &#x3D; sum1 + count</span><br><span class="line">    count &#x3D; count + 1</span><br><span class="line">print(sum1)</span><br></pre></td></tr></table></figure>
<p>结果：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5050</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-course-1-13-函数</title>
    <url>/2022/08/03/python-notes-course-1-13-%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def 函数名(参数1，参数2....参数n):</span><br><span class="line">    函数体</span><br><span class="line">    return 语句</span><br></pre></td></tr></table></figure>
<ul>
<li>函数代码块以 def 关键词开头，后接函数标识符名称和圆括号()</li>
<li>任何传入参数和自变量必须放在圆括号中间。圆括号之间可以用于定义参数</li>
<li>函数的第一行语句可以选择性地使用文档字符串（用于存放函数说明）</li>
<li>函数内容以冒号起始，并且缩进</li>
<li>return [表达式] 结束函数，选择性地返回一个值给调用方。不带表达式的 return 相当于返回 None。</li>
</ul>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-course-1-14-匿名函数</title>
    <url>/2022/08/03/python-notes-course-1-14-%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line">sum &#x3D; lambda num1 , num2 : num1 + num2;</span><br><span class="line"></span><br><span class="line">print( sum( 1 , 2 ) )</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-course-1-16-list生成</title>
    <url>/2022/08/03/python-notes-course-1-16-list%E7%94%9F%E6%88%90/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="生成1-30元素的list"><a href="#生成1-30元素的list" class="headerlink" title="生成1-30元素的list"></a>生成1-30元素的list</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line">list1&#x3D;list ( range (1,31) )</span><br><span class="line">print(list1)</span><br></pre></td></tr></table></figure>
<h1 id="迭代生成"><a href="#迭代生成" class="headerlink" title="迭代生成"></a>迭代生成</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[expr for iter_var in iterable] </span><br><span class="line">[expr for iter_var in iterable if cond_expr]</span><br></pre></td></tr></table></figure>
<ol>
<li>for循环的迭代结果，再执行 expr表达式<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line">list1&#x3D;[x * x for x in range(1, 11)]</span><br><span class="line">print(list1)</span><br></pre></td></tr></table></figure>
结果：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]</span><br></pre></td></tr></table></figure></li>
<li>for循环的迭代结果，执行if判断语句，满足条件的结果，再执行 expr表达式<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line">list1&#x3D; [x * x for x in range(1, 11) if x % 2 &#x3D;&#x3D; 0]</span><br><span class="line">print(list1)</span><br></pre></td></tr></table></figure>
结果：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[4, 16, 36, 64, 100]</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="嵌套for循环生成list"><a href="#嵌套for循环生成list" class="headerlink" title="嵌套for循环生成list"></a>嵌套for循环生成list</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line">list1&#x3D; [(x+1,y+1) for x in range(3) for y in range(5)] </span><br><span class="line">print(list1)</span><br></pre></td></tr></table></figure>
<p>结果：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5)]</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-course-1-17-生成器</title>
    <url>/2022/08/03/python-notes-course-1-17-%E7%94%9F%E6%88%90%E5%99%A8/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="生成器"><a href="#生成器" class="headerlink" title="生成器"></a>生成器</h1><p>在 Python 中，这种一边循环一边计算的机制，称为生成器：generator。<br>在 Python 中，使用了 yield 的函数被称为生成器（generator）。<br>跟普通函数不同的是，生成器是一个返回迭代器的函数，只能用于迭代操作，更简单点理解生成器就是一个迭代器。</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-course-1-18-类的访问控制</title>
    <url>/2022/08/03/python-notes-course-1-18-%E7%B1%BB%E7%9A%84%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="创建类的时候就会包含的方法"><a href="#创建类的时候就会包含的方法" class="headerlink" title="创建类的时候就会包含的方法"></a>创建类的时候就会包含的方法</h1><table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>init</strong></td>
<td>构造函数，在生成对象时调用</td>
</tr>
<tr>
<td><strong>del</strong></td>
<td>析构函数，释放对象时使用</td>
</tr>
<tr>
<td><strong>repr</strong></td>
<td>打印，转换</td>
</tr>
<tr>
<td><strong>setitem</strong></td>
<td>按照索引赋值</td>
</tr>
<tr>
<td><strong>getitem</strong></td>
<td>按照索引获取值</td>
</tr>
<tr>
<td><strong>len</strong></td>
<td>获得长度</td>
</tr>
<tr>
<td><strong>cmp</strong></td>
<td>比较运算</td>
</tr>
<tr>
<td><strong>call</strong></td>
<td>函数调用</td>
</tr>
<tr>
<td><strong>add</strong></td>
<td>加运算</td>
</tr>
<tr>
<td><strong>sub</strong></td>
<td>减运算</td>
</tr>
<tr>
<td><strong>mul</strong></td>
<td>乘运算</td>
</tr>
<tr>
<td><strong>div</strong></td>
<td>除运算</td>
</tr>
<tr>
<td><strong>mod</strong></td>
<td>求余运算</td>
</tr>
<tr>
<td><strong>pow</strong></td>
<td>乘方</td>
</tr>
</tbody>
</table>
<h1 id="当然有些时候我们需要获取类的相关信息，我们可以使用如下的方法："><a href="#当然有些时候我们需要获取类的相关信息，我们可以使用如下的方法：" class="headerlink" title="当然有些时候我们需要获取类的相关信息，我们可以使用如下的方法："></a>当然有些时候我们需要获取类的相关信息，我们可以使用如下的方法：</h1><ul>
<li>type(obj)：来获取对象的相应类型；</li>
<li>isinstance(obj, type)：判断对象是否为指定的 type 类型的实例；</li>
<li>hasattr(obj, attr)：判断对象是否具有指定属性/方法；</li>
<li>getattr(obj, attr[, default]) 获取属性/方法的值, 要是没有对应的属性则返回 default 值（前提是设置了 default），否则会抛出 AttributeError 异常；</li>
<li>setattr(obj, attr, value)：设定该属性/方法的值，类似于 obj.attr=value；</li>
<li>dir(obj)：可以获取相应对象的所有属性和方法名的列表：</li>
</ul>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-course-1-19-枚举</title>
    <url>/2022/08/03/python-notes-course-1-19-%E6%9E%9A%E4%B8%BE/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python3</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line">from enum import Enum</span><br><span class="line"></span><br><span class="line">Month &#x3D; Enum(&#39;Month&#39;, (&#39;Jan&#39;, &#39;Feb&#39;, &#39;Mar&#39;, &#39;Apr&#39;, &#39;May&#39;, &#39;Jun&#39;, &#39;Jul&#39;, &#39;Aug&#39;, &#39;Sep&#39;, &#39;Oct&#39;, &#39;Nov&#39;, &#39;Dec&#39;))</span><br><span class="line"></span><br><span class="line"># 遍历枚举类型</span><br><span class="line">for name, member in Month.__members__.items():</span><br><span class="line">    print(name, &#39;---------&#39;, member, &#39;----------&#39;, member.value)</span><br><span class="line"></span><br><span class="line"># 直接引用一个常量</span><br><span class="line">print(&#39;\n&#39;, Month.Jan)</span><br></pre></td></tr></table></figure>
<p>上面的代码，我们创建了一个有关月份的枚举类型 Month ，这里要注意的是构造参数，第一个参数 Month 表示的是该枚举类的类名，第二个 tuple 参数，表示的是枚举类的值；当然，枚举类通过 <strong>members</strong> 遍历它的所有成员的方法。</p>
<p>注意的一点是 ， member.value 是自动赋给成员的 int 类型的常量，默认是从 1 开始的。</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-notes-course-1-2-注释命名规范</title>
    <url>/2022/08/03/python-notes-course-1-2-%E6%B3%A8%E9%87%8A%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="注释命名规范"><a href="#注释命名规范" class="headerlink" title="注释命名规范"></a>注释命名规范</h1><ol>
<li>模块名 首字母保持小写<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 正确的模块名</span><br><span class="line">import decoder</span><br><span class="line">import html_parser</span><br><span class="line"></span><br><span class="line"># 不推荐的模块名</span><br><span class="line">import Decoder</span><br></pre></td></tr></table></figure></li>
<li>类名 使用驼峰命名风格，首字母大写<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Farm():</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">class AnimalFarm(Farm):</span><br><span class="line">    pass</span><br></pre></td></tr></table></figure></li>
<li>私有类名 可用一个下划线开头<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class _PrivateFarm(Farm):</span><br><span class="line">    pass</span><br></pre></td></tr></table></figure></li>
<li>函数名 一律小写，如有多个单词，用下划线隔开<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def run():</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">def run_with_env():</span><br><span class="line">    pass</span><br></pre></td></tr></table></figure></li>
<li>私有函数 在函数前加一个下划线<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Person():</span><br><span class="line"></span><br><span class="line">    def _private_func():</span><br><span class="line">        pass</span><br></pre></td></tr></table></figure></li>
<li>变量名 尽量小写，如有多个单词，用下划线隔开<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    count &#x3D; 0</span><br><span class="line">    school_name &#x3D; &#39;&#39;</span><br></pre></td></tr></table></figure></li>
<li>常量采用全大写，如有多个单词，使用下划线隔开<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MAX_CLIENT &#x3D; 100</span><br><span class="line">MAX_CONNECTION &#x3D; 1000</span><br><span class="line">CONNECTION_TIMEOUT &#x3D; 600</span><br></pre></td></tr></table></figure></li>
<li>常量使用以下划线分隔的大写命名<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MAX_OVERFLOW &#x3D; 100</span><br><span class="line"></span><br><span class="line">Class FooBar:</span><br><span class="line"></span><br><span class="line">    def foo_bar(self, print_):</span><br><span class="line">        print(print_)</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>python-excep-Could-not-find-a-version-that-satisfies-the-requirement-wx</title>
    <url>/2022/08/03/python-excep-Could-not-find-a-version-that-satisfies-the-requirement-wx/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Could-not-find-a-version-that-satisfies-the-requirement-wx"><a href="#Could-not-find-a-version-that-satisfies-the-requirement-wx" class="headerlink" title="Could not find a version that satisfies the requirement wx"></a>Could not find a version that satisfies the requirement wx</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ERROR: Could not find a version that satisfies the requirement wx (from versions: none)</span><br><span class="line">ERROR: No matching distribution found for wx</span><br><span class="line">WARNING: You are using pip version 21.3.1; however, version 22.0.4 is available.</span><br><span class="line">You should consider upgrading via the &#39;E:\workspace-all\workspace-py\projects-practicing\venv\Scripts\python.exe -m pip install --upgrade pip&#39; command.</span><br></pre></td></tr></table></figure>
<h2 id="pycharm处理"><a href="#pycharm处理" class="headerlink" title="pycharm处理"></a>pycharm处理</h2><p>写入 import wxpython，再鼠标放上去点击install</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>java-maven-jar冲突分析</title>
    <url>/2022/08/03/java-maven-jar%E5%86%B2%E7%AA%81%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.cnblogs.com/ptqueen/p/7985198.html" target="_blank" rel="noopener">jar冲突 maven命令分析</a></p>
<ol>
<li><p>用mvn dependency:tree&gt;temp/tree.txt,直接输出到当前项目下,然后在idea中打开,搜索要找的jar包名字即可.</p>
</li>
<li><p>用include参数<br>mvn dependency:tree -Dincludes=jline</p>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>java-maven-mvn-dependency-使用</title>
    <url>/2022/08/03/java-maven-mvn-dependency-%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="依赖树"><a href="#依赖树" class="headerlink" title="依赖树"></a>依赖树</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;plugins&gt;</span><br><span class="line">  &lt;plugin&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.maven.plugins&lt;&#x2F;groupId&gt; </span><br><span class="line">    &lt;artifactId&gt;maven-dependency-plugin&lt;&#x2F;artifactId&gt; </span><br><span class="line">    &lt;version&gt;3.0.2&lt;&#x2F;version&gt; </span><br><span class="line">    &lt;executions&gt; </span><br><span class="line">      &lt;execution&gt; </span><br><span class="line">        &lt;id&gt;copy-dependencies&lt;&#x2F;id&gt; </span><br><span class="line">        &lt;phase&gt;package&lt;&#x2F;phase&gt; </span><br><span class="line">        &lt;goals&gt; </span><br><span class="line">          &lt;goal&gt;copy-dependencies&lt;&#x2F;goal&gt; </span><br><span class="line">        &lt;&#x2F;goals&gt; </span><br><span class="line">        &lt;configuration&gt; </span><br><span class="line">          &lt;!-- configure the plugin here --&gt; </span><br><span class="line">        &lt;&#x2F;configuration&gt; </span><br><span class="line">      &lt;&#x2F;execution&gt; </span><br><span class="line">    &lt;&#x2F;executions&gt; </span><br><span class="line">  &lt;&#x2F;plugin&gt; </span><br><span class="line">&lt;&#x2F;plugins&gt;</span><br></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mvn dependency:tree</span><br><span class="line">mvn dependency</span><br><span class="line">mvn dependency -X</span><br><span class="line">mvn dependency -e</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>java-maven-mvn-install-X-的DEBUG模式</title>
    <url>/2022/08/03/java-maven-mvn-install-X-%E7%9A%84DEBUG%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="直接在项目根目录下运行"><a href="#直接在项目根目录下运行" class="headerlink" title="直接在项目根目录下运行"></a>直接在项目根目录下运行</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mvn install -X</span><br></pre></td></tr></table></figure>
<p>将输出debug内容</p>
<h1 id="也可以在打包时DEBUG"><a href="#也可以在打包时DEBUG" class="headerlink" title="也可以在打包时DEBUG"></a>也可以在打包时DEBUG</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mvn -X -U clean package</span><br></pre></td></tr></table></figure>
<h1 id="is-invalid-transitive-dependencies-if-any-will-not-be-available"><a href="#is-invalid-transitive-dependencies-if-any-will-not-be-available" class="headerlink" title="is invalid, transitive dependencies (if any) will not be available"></a>is invalid, transitive dependencies (if any) will not be available</h1><p><a href="https://blog.csdn.net/u010739551/article/details/83242246" target="_blank" rel="noopener"></a><br><img src="mvn install -X 的DEBUG模式/依赖版本缺失.png" alt=""><br>比如如下场景，我有三个项目A, B, C，依赖关系如下：  </p>
<p>假如B invalid了，那么A通过B间接依赖的C就会失效，导致A项目编译不过。</p>
<p>问题定位<br>google了很长时间，没有在网上找到能解决我的问题的答案，那就自己动手来定位问题的原因，按照maven的提示打开debug日志，在A项目下执行如下命令：</p>
<p> mvn -X -U clean package<br>1<br>再次查看编译日志，这时候在[WARNING] The POM for com.winwill.test:0.0.1-SNAPSHOT is invalid, transitive dependencies (if any) will not be available, enable debug logging for more details日志的下一行会有类似如下提示：</p>
<p>[ERROR] ‘dependencies.dependency.version’ for xxx:yyy:jar is missing. @-</p>
<p>这是ERROR日志，感觉应该是问题的root cause，这行日志表示B项目中依赖的xxx:yyy没有指定version。</p>
<p>在B项目中为xxx:yyy加上version之后再次编译，发现一切ok~~</p>
<p>简单总结<br>项目中依赖其他jar时，如果不指定version，或者version在父pom中通过DependencyManagement指定但是父pom没有deploy时，可能会导致项目jar invalid。</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>java-maven-mvn常用命令</title>
    <url>/2022/08/03/java-maven-mvn%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="test"><a href="#test" class="headerlink" title="test"></a>test</h2><ol>
<li>mvn test -Dtest=xxx：执行指定测试用例的命令，后面的xxx就是指定的所有被标记的用例</li>
<li>mvn test -Dtest=包的路径.<em>   ，运行某个包下的所有用例（不包括子包中的用例）<br>mvn test -Dtest=com.xx.test.testCases.openApi.xxx.</em></li>
<li>指定任何一个不同包下相同子包的所用测试用例<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mvn test -Dtest&#x3D;包的路径.*.相同子包的路径.*</span><br><span class="line">比如：mvn test -Dtest&#x3D;com.xxx.test.testcase.*.openApi.*</span><br><span class="line">指定testcase下的所有的包中包含openApi子包下的所有用例</span><br></pre></td></tr></table></figure>
<h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2></li>
<li>生成idea项目结构<br>mvn  idea:idea</li>
<li>生成eclipse项目结构<br>mvn  eclipse:eclipse</li>
<li>编译源代码<br>mvn compile</li>
<li>编译测试代码<br>mvn test-compile</li>
<li>打包项目<br>mvn  package</li>
<li>组合使用goal命令，如只打包不测试<br>mvn  -Dtest  package</li>
<li>跳过测试进行打包<br>mvn clean package -DskipTests -Prelease</li>
<li>在本地Repository中安装jar<br>mvn  install</li>
<li>打成jar命令<br>mvn  jar:jar</li>
<li>打包项目到本地仓库<br>mvn clean install -DskipTests</li>
<li>打包项目跳过测试<br>mvn clean package <em>**</em>  -DskipTests -DskipRat</li>
<li>查看错误的详细信息<br>mvn  -e</li>
<li>发生jar的冲突显示冲突的原因<br>mvn  install -x</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>java-jvm-jvm优化-TLAB</title>
    <url>/2022/08/03/java-jvm-jvm%E4%BC%98%E5%8C%96-TLAB/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>java-jvm-notes-三色标记</title>
    <url>/2022/08/03/java-jvm-notes-%E4%B8%89%E8%89%B2%E6%A0%87%E8%AE%B0/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>depth-kubernetes-知识点-2-k8s-Kubernetes-中-apiserver-advertise-address-与-pod-network-cidr-区别是什么</title>
    <url>/2022/08/03/depth-kubernetes-%E7%9F%A5%E8%AF%86%E7%82%B9-2-k8s-Kubernetes-%E4%B8%AD-apiserver-advertise-address-%E4%B8%8E-pod-network-cidr-%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://q.cnblogs.com/q/122070/" target="_blank" rel="noopener">k8s(Kubernetes) 中 apiserver-advertise-address 与 pod-network-cidr 区别是什么</a></p>
<ol>
<li>对于 apiserver-advertise-address ，在博文 使用Kubeadm(1.13+)快速搭建Kubernetes集群 中找到了答案：</li>
</ol>
<p>kubeadm 使用 eth0 的默认网络接口（通常是内网IP）做为 Master 节点的 advertise address ，如果我们想使用不同的网络接口，可以使用 –apiserver-advertise-address=<ip-address> 参数来设置</p>
<ol>
<li>对于 pod-network-cidr ，在博文 使用kubeadm搭建Kubernetes(1.10.2)集群 中找到了答案：</li>
</ol>
<p>pod-network-cidr: 指定pod网络的IP地址范围，它的值取决于你在下一步选择的哪个网络网络插件，比如我在本文中使用的是Calico网络，需要指定为192.168.0.0/16。</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>depth-kubernetes-常用命令-1-常用命令-1</title>
    <url>/2022/08/03/depth-kubernetes-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4-1-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4-1/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>kubectl get nodes</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>depth-kubernetes-k8s安装-kubeadm-0-1-导出官方kubeadm-yml</title>
    <url>/2022/08/03/depth-kubernetes-k8s%E5%AE%89%E8%A3%85-kubeadm-0-1-%E5%AF%BC%E5%87%BA%E5%AE%98%E6%96%B9kubeadm-yml/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/csdn_welearn/article/details/101107426" target="_blank" rel="noopener">kubeadm.yml搭建k8s</a></p>
<h1 id="导出配置文件"><a href="#导出配置文件" class="headerlink" title="导出配置文件"></a>导出配置文件</h1><p>kubeadm config print init-defaults –kubeconfig ClusterConfiguration &gt; kubeadm.yml</p>
<p>#<br><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 进入kubeadm.yaml 所在的目录</span></span><br><span class="line">cd /usr/local/kubernetes</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看所需镜像列表</span></span><br><span class="line">kubeadm config images list --config kubeadm.yml</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 拉取镜像</span></span><br><span class="line">kubeadm config images pull --config kubeadm.yml</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>depth-kubernetes-Kubernetes的可视化UI界面-recommended-yaml</title>
    <url>/2022/08/03/depth-kubernetes-Kubernetes%E7%9A%84%E5%8F%AF%E8%A7%86%E5%8C%96UI%E7%95%8C%E9%9D%A2-recommended-yaml/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>apiVersion: v1<br>kind: ServiceAccount<br>metadata:<br>  labels:<br>    k8s-app: kubernetes-dashboard<br>  name: kubernetes-dashboard<br>  namespace: kubernetes-dashboard</p>
<hr>
<p>kind: Service<br>apiVersion: v1<br>metadata:<br>  labels:<br>    k8s-app: kubernetes-dashboard<br>  name: kubernetes-dashboard<br>  namespace: kubernetes-dashboard<br>spec:<br>  type: NodePort<br>  ports:</p>
<pre><code>- port: 443
  targetPort: 8443
  nodePort: 31001
</code></pre><p>  selector:<br>    k8s-app: kubernetes-dashboard</p>
<hr>
<p>apiVersion: v1<br>kind: Secret<br>metadata:<br>  labels:<br>    k8s-app: kubernetes-dashboard<br>  name: kubernetes-dashboard-certs<br>  namespace: kubernetes-dashboard<br>type: Opaque</p>
<hr>
<p>apiVersion: v1<br>kind: Secret<br>metadata:<br>  labels:<br>    k8s-app: kubernetes-dashboard<br>  name: kubernetes-dashboard-csrf<br>  namespace: kubernetes-dashboard<br>type: Opaque<br>data:<br>  csrf: “”</p>
<hr>
<p>apiVersion: v1<br>kind: Secret<br>metadata:<br>  labels:<br>    k8s-app: kubernetes-dashboard<br>  name: kubernetes-dashboard-key-holder<br>  namespace: kubernetes-dashboard<br>type: Opaque</p>
<hr>
<p>kind: ConfigMap<br>apiVersion: v1<br>metadata:<br>  labels:<br>    k8s-app: kubernetes-dashboard<br>  name: kubernetes-dashboard-settings<br>  namespace: kubernetes-dashboard</p>
<hr>
<p>kind: Role<br>apiVersion: rbac.authorization.k8s.io/v1<br>metadata:<br>  labels:<br>    k8s-app: kubernetes-dashboard<br>  name: kubernetes-dashboard<br>  namespace: kubernetes-dashboard<br>rules:</p>
<h1 id="Allow-Dashboard-to-get-update-and-delete-Dashboard-exclusive-secrets"><a href="#Allow-Dashboard-to-get-update-and-delete-Dashboard-exclusive-secrets" class="headerlink" title="Allow Dashboard to get, update and delete Dashboard exclusive secrets."></a>Allow Dashboard to get, update and delete Dashboard exclusive secrets.</h1><ul>
<li>apiGroups: [“”]<br>resources: [“secrets”]<br>resourceNames: [“kubernetes-dashboard-key-holder”, “kubernetes-dashboard-certs”, “kubernetes-dashboard-csrf”]<br>verbs: [“get”, “update”, “delete”]<h1 id="Allow-Dashboard-to-get-and-update-‘kubernetes-dashboard-settings’-config-map"><a href="#Allow-Dashboard-to-get-and-update-‘kubernetes-dashboard-settings’-config-map" class="headerlink" title="Allow Dashboard to get and update ‘kubernetes-dashboard-settings’ config map."></a>Allow Dashboard to get and update ‘kubernetes-dashboard-settings’ config map.</h1></li>
<li>apiGroups: [“”]<br>resources: [“configmaps”]<br>resourceNames: [“kubernetes-dashboard-settings”]<br>verbs: [“get”, “update”]<h1 id="Allow-Dashboard-to-get-metrics"><a href="#Allow-Dashboard-to-get-metrics" class="headerlink" title="Allow Dashboard to get metrics."></a>Allow Dashboard to get metrics.</h1></li>
<li>apiGroups: [“”]<br>resources: [“services”]<br>resourceNames: [“heapster”, “dashboard-metrics-scraper”]<br>verbs: [“proxy”]</li>
<li>apiGroups: [“”]<br>resources: [“services/proxy”]<br>resourceNames: [“heapster”, “http:heapster:”, “https:heapster:”, “dashboard-metrics-scraper”, “http:dashboard-metrics-scraper”]<br>verbs: [“get”]</li>
</ul>
<hr>
<p>kind: ClusterRole<br>apiVersion: rbac.authorization.k8s.io/v1<br>metadata:<br>  labels:<br>    k8s-app: kubernetes-dashboard<br>  name: kubernetes-dashboard<br>rules:</p>
<h1 id="Allow-Metrics-Scraper-to-get-metrics-from-the-Metrics-server"><a href="#Allow-Metrics-Scraper-to-get-metrics-from-the-Metrics-server" class="headerlink" title="Allow Metrics Scraper to get metrics from the Metrics server"></a>Allow Metrics Scraper to get metrics from the Metrics server</h1><ul>
<li>apiGroups: [“metrics.k8s.io”]<br>resources: [“pods”, “nodes”]<br>verbs: [“get”, “list”, “watch”]</li>
</ul>
<hr>
<p>apiVersion: rbac.authorization.k8s.io/v1<br>kind: RoleBinding<br>metadata:<br>  labels:<br>    k8s-app: kubernetes-dashboard<br>  name: kubernetes-dashboard<br>  namespace: kubernetes-dashboard<br>roleRef:<br>  apiGroup: rbac.authorization.k8s.io<br>  kind: Role<br>  name: kubernetes-dashboard<br>subjects:</p>
<ul>
<li>kind: ServiceAccount<br>name: kubernetes-dashboard<br>namespace: kubernetes-dashboard</li>
</ul>
<hr>
<p>apiVersion: rbac.authorization.k8s.io/v1<br>kind: ClusterRoleBinding<br>metadata:<br>  name: kubernetes-dashboard<br>roleRef:<br>  apiGroup: rbac.authorization.k8s.io<br>  kind: ClusterRole<br>  name: kubernetes-dashboard<br>subjects:</p>
<ul>
<li>kind: ServiceAccount<br>name: kubernetes-dashboard<br>namespace: kubernetes-dashboard</li>
</ul>
<hr>
<p>kind: Deployment<br>apiVersion: apps/v1<br>metadata:<br>  labels:<br>    k8s-app: kubernetes-dashboard<br>  name: kubernetes-dashboard<br>  namespace: kubernetes-dashboard<br>spec:<br>  replicas: 1<br>  revisionHistoryLimit: 10<br>  selector:<br>    matchLabels:<br>      k8s-app: kubernetes-dashboard<br>  template:<br>    metadata:<br>      labels:<br>        k8s-app: kubernetes-dashboard<br>    spec:<br>      containers:</p>
<pre><code>  - name: kubernetes-dashboard
    image: kubernetesui/dashboard:v2.0.0-rc5
    imagePullPolicy: Always
    ports:
      - containerPort: 8443
        protocol: TCP
    args:
      - --auto-generate-certificates
      - --namespace=kubernetes-dashboard
      # Uncomment the following line to manually specify Kubernetes API server Host
      # If not specified, Dashboard will attempt to auto discover the API server and connect
      # to it. Uncomment only if the default does not work.
      # - --apiserver-host=http://my-address:port
    volumeMounts:
      - name: kubernetes-dashboard-certs
        mountPath: /certs
        # Create on-disk volume to store exec logs
      - mountPath: /tmp
        name: tmp-volume
    livenessProbe:
      httpGet:
        scheme: HTTPS
        path: /
        port: 8443
      initialDelaySeconds: 30
      timeoutSeconds: 30
    securityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsUser: 1001
      runAsGroup: 2001
volumes:
  - name: kubernetes-dashboard-certs
    secret:
      secretName: kubernetes-dashboard-certs
  - name: tmp-volume
    emptyDir: {}
serviceAccountName: kubernetes-dashboard
nodeSelector:
  &quot;beta.kubernetes.io/os&quot;: linux
# Comment the following tolerations if Dashboard must not be deployed on master
tolerations:
  - key: node-role.kubernetes.io/master
    effect: NoSchedule
</code></pre><hr>
<p>kind: Service<br>apiVersion: v1<br>metadata:<br>  labels:<br>    k8s-app: dashboard-metrics-scraper<br>  name: dashboard-metrics-scraper<br>  namespace: kubernetes-dashboard<br>spec:<br>  ports:</p>
<pre><code>- port: 8000
  targetPort: 8000
</code></pre><p>  selector:<br>    k8s-app: dashboard-metrics-scraper</p>
<hr>
<p>kind: Deployment<br>apiVersion: apps/v1<br>metadata:<br>  labels:<br>    k8s-app: dashboard-metrics-scraper<br>  name: dashboard-metrics-scraper<br>  namespace: kubernetes-dashboard<br>spec:<br>  replicas: 1<br>  revisionHistoryLimit: 10<br>  selector:<br>    matchLabels:<br>      k8s-app: dashboard-metrics-scraper<br>  template:<br>    metadata:<br>      labels:<br>        k8s-app: dashboard-metrics-scraper<br>      annotations:<br>        seccomp.security.alpha.kubernetes.io/pod: ‘runtime/default’<br>    spec:<br>      containers:</p>
<pre><code>  - name: dashboard-metrics-scraper
    image: kubernetesui/metrics-scraper:v1.0.3
    ports:
      - containerPort: 8000
        protocol: TCP
    livenessProbe:
      httpGet:
        scheme: HTTP
        path: /
        port: 8000
      initialDelaySeconds: 30
      timeoutSeconds: 30
    volumeMounts:
    - mountPath: /tmp
      name: tmp-volume
    securityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsUser: 1001
      runAsGroup: 2001
serviceAccountName: kubernetes-dashboard
nodeSelector:
  &quot;beta.kubernetes.io/os&quot;: linux
# Comment the following tolerations if Dashboard must not be deployed on master
tolerations:
  - key: node-role.kubernetes.io/master
    effect: NoSchedule
volumes:
  - name: tmp-volume
    emptyDir: {}
</code></pre><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>depth-docker-notes-dockerfile-local-dockerfile-2</title>
    <url>/2022/08/03/depth-docker-notes-dockerfile-local-dockerfile-2/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>FROM java:8</p>
<p>VOLUME /app</p>
<p>COPY mall-task*.jar mall-task.jar</p>
<p>RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime<br>RUN echo ‘Asia/Shanghai’ &gt;/etc/timezone</p>
<p>RUN bash -c “touch /mall-task.jar”<br>EXPOSE 8090<br>ENTRYPOINT [“java”,“-Djava.security.egd=file:/dev/./uranedom”,“-jar”,“-Dspring.profiles.active=pre-prod”, “-Duser.timezone=GMT+08”, “/mall-task.jar”]</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>depth-docker-notes-dockerfile-local-dockerfile-1</title>
    <url>/2022/08/03/depth-docker-notes-dockerfile-local-dockerfile-1/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>FROM java:8<br>ADD /target/*.jar app.jar<br>EXPOSE 8082</p>
<p>#ENTRYPOINT [“java”,”-jar”,”/app.jar”]<br>ENTRYPOINT [“java”,”-jar”,”-Duser.timezone=GMT+08”,”/app.jar”]</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>depth-docker-notes-dockerfile-local-dockerfile-3</title>
    <url>/2022/08/03/depth-docker-notes-dockerfile-local-dockerfile-3/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>FROM java:8</p>
<p>#作者<br>MAINTAINER xu</p>
<p>#声明一个挂载点，容器内此路径会对应宿主机的某个文件夹<br>VOLUME /tmp</p>
<p>#复制上下文目录下的target/demo-1.0.0.jar 到容器里<br>COPY target/demo-0.0.1.jar demo-0.0.1.jar</p>
<p>#bash方式执行，使demo-0.0.1jar可访问</p>
<p>#RUN新建立一层，在其上执行这些命令，执行结束后， commit 这一层的修改，构成新的镜像。<br>RUN bash -c “touch /demo-0.0.1.jar”</p>
<p>#声明运行时容器提供服务端口，这只是一个声明，在运行时并不会因为这个声明应用就会开启这个端口的服务<br>EXPOSE 8899</p>
<p>#指定容器启动程序及参数   <ENTRYPOINT> “<CMD>“<br>ENTRYPOINT [“java”,”-jar”,”demo-0.0.1.jar”]</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>depth-architecture-2-架构设计</title>
    <url>/2022/08/03/depth-architecture-2-%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>COLA，洋葱，整洁，充血</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>depth-distributed-基于DAG的分布式系统</title>
    <url>/2022/08/03/depth-distributed-%E5%9F%BA%E4%BA%8EDAG%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>database-mysql-notes-redo和undo日志</title>
    <url>/2022/08/03/database-mysql-notes-redo%E5%92%8Cundo%E6%97%A5%E5%BF%97/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>database-mysql-notes-index-索引下推</title>
    <url>/2022/08/03/database-mysql-notes-index-%E7%B4%A2%E5%BC%95%E4%B8%8B%E6%8E%A8/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<p><a href="https://zhuanlan.zhihu.com/p/470255206" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/470255206</a></p>
<hr>
<h1 id="索引下推"><a href="#索引下推" class="headerlink" title="索引下推"></a>索引下推</h1><p>索引下推是从 MySQL5.6 开始引入一个特性，英文是 index condition pushdown，一般简称为 ICP，索引下推通过减少回表的次数，来提高数据库的查询效率。<br>索引下推是 MySQL5.6 中开始引入的新特</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE &#96;user2&#96; ( &#96;id&#96; int(11) unsigned NOT NULL AUTO_INCREMENT, &#96;username&#96; varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL, &#96;age&#96; int(11) DEFAULT NULL, &#96;address&#96; varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL, PRIMARY KEY (&#96;id&#96;), KEY &#96;username&#96; (&#96;username&#96;(191),&#96;age&#96;) ) ENGINE&#x3D;InnoDB AUTO_INCREMENT&#x3D;100001 DEFAULT CHARSET&#x3D;utf8mb4 COLLATE&#x3D;utf8mb4_unicode_ci;\</span><br></pre></td></tr></table></figure>
<p>表中有一个由 username 和 age 组成的复合索引，索引名字就叫 username</p>
<h2 id="MySQL-5-5"><a href="#MySQL-5-5" class="headerlink" title="MySQL 5.5"></a>MySQL 5.5</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from user2 where username&#x3D;&#39;1&#39; and age&#x3D;99;</span><br></pre></td></tr></table></figure>
<ol>
<li>首先 MySQL 的 server 层调用存储引擎获取 username=‘1’ 的第一条记录。</li>
<li>存储引擎找到 username=‘1’ 的第一条记录后，在 B+Tree 的叶子结点中保存着主键 id，此时通过回表操作，去主键索引中找到该条记录的完整数据，并返回给 server 层。</li>
<li>server 层拿到数据之后，判断该条记录的 age 是否为 99，如果 age=99，就把该条记录返回给客户端，如果 age!=99，那就就丢弃该记录。</li>
<li>由于 username+age 组成的复合索引只是一个普通索引，并不是唯一索引（如果是唯一索引，那么这个查询就到此结束了），所以还需要继续去搜索有没有满足条件的记录。<blockquote>
<p>username和age联合索引且同时使用时，会先使用一个条件（username）查询到结果记录，然后回表到server层，再通过age筛选，不通过的丢弃</p>
</blockquote>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from user2 where username like &#39;j%&#39; and age&#x3D;99;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>类似这样的模糊查询，有多条的时候，在上面的基础上，通过的留下，然后再查询下一条数据（又要进行回表）</p>
</blockquote>
<h2 id="MySQL-5-7"><a href="#MySQL-5-7" class="headerlink" title="MySQL 5.7"></a>MySQL 5.7</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from user2 where username like &#39;j%&#39; and age&#x3D;99;</span><br></pre></td></tr></table></figure>
<ol>
<li>MySQL 的 server 层首先调用存储引擎定位到第一个以 j 开头的 username。</li>
<li>找到记录后，存储引擎并不急着回表，而是继续判断这条记录的 age 是否等于 99，如果 age=99，再去回表，如果 age 不等于 99，就不去回表了，直接继续读取下一条记录。</li>
<li>存储引擎将读取到的数据行返回给 server 层，此时如果还有其他非索引的查询条件，server 层再去继续过滤，在我们上面的案例中，此时没有其他查询条件了。假设 server 层还有其他的过滤条件，并且这个过滤条件把刚刚查到的记录过滤掉了，那么就会通过记录的 next_record 属性读取下一条记录，然后重复第二步。<blockquote>
<p>username和age联合索引且同时使用时，先使用（username）查询到结果记录，然后接着使用age过滤，等拿到所有的结果后，再进行回表， （所有的结果都拿到后，一次回表）</p>
</blockquote>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>database-mysql-notes-lock-临键锁（Next-key-Locks）</title>
    <url>/2022/08/03/database-mysql-notes-lock-%E4%B8%B4%E9%94%AE%E9%94%81%EF%BC%88Next-key-Locks%EF%BC%89/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>database-mysql-notes-index-覆盖索引</title>
    <url>/2022/08/03/database-mysql-notes-index-%E8%A6%86%E7%9B%96%E7%B4%A2%E5%BC%95/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>database-mysql-notes-lock-bk</title>
    <url>/2022/08/03/database-mysql-notes-lock-bk/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/lgxzzz/article/details/122368203" target="_blank" rel="noopener">https://blog.csdn.net/lgxzzz/article/details/122368203</a></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>database-mysql-notes-index-前缀索引</title>
    <url>/2022/08/03/database-mysql-notes-index-%E5%89%8D%E7%BC%80%E7%B4%A2%E5%BC%95/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>database-mysql-notes-lock-GET-LOCK函数实现MySQL加锁</title>
    <url>/2022/08/03/database-mysql-notes-lock-GET-LOCK%E5%87%BD%E6%95%B0%E5%AE%9E%E7%8E%B0MySQL%E5%8A%A0%E9%94%81/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="GET-LOCK函数实现MySQL加锁"><a href="#GET-LOCK函数实现MySQL加锁" class="headerlink" title="GET_LOCK函数实现MySQL加锁"></a>GET_LOCK函数实现MySQL加锁</h1><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>database-mysql-notes-lock-自增锁</title>
    <url>/2022/08/03/database-mysql-notes-lock-%E8%87%AA%E5%A2%9E%E9%94%81/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>database-mysql-notes-lock-意向共享锁</title>
    <url>/2022/08/03/database-mysql-notes-lock-%E6%84%8F%E5%90%91%E5%85%B1%E4%BA%AB%E9%94%81/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>database-mysql-notes-lock-页级锁</title>
    <url>/2022/08/03/database-mysql-notes-lock-%E9%A1%B5%E7%BA%A7%E9%94%81/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>database-mysql-notes-lock-意向排他锁</title>
    <url>/2022/08/03/database-mysql-notes-lock-%E6%84%8F%E5%90%91%E6%8E%92%E4%BB%96%E9%94%81/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>database-mysql-notes-lock-插入意向锁</title>
    <url>/2022/08/03/database-mysql-notes-lock-%E6%8F%92%E5%85%A5%E6%84%8F%E5%90%91%E9%94%81/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>database-mysql-notes-lock-行级锁</title>
    <url>/2022/08/03/database-mysql-notes-lock-%E8%A1%8C%E7%BA%A7%E9%94%81/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>database-mysql-notes-lock-表级锁</title>
    <url>/2022/08/03/database-mysql-notes-lock-%E8%A1%A8%E7%BA%A7%E9%94%81/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>database-mysql-notes-6-mysql主从同步</title>
    <url>/2022/08/03/database-mysql-notes-6-mysql%E4%B8%BB%E4%BB%8E%E5%90%8C%E6%AD%A5/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>database-mysql-notes-7-mysql读写分离架构</title>
    <url>/2022/08/03/database-mysql-notes-7-mysql%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E6%9E%B6%E6%9E%84/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="">mysql读写分离架构</a></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>sql场景面试题2</title>
    <url>/2022/08/03/database-mysql-interview-%E7%8E%B0%E6%9C%89%E4%B8%A4%E5%BC%A0%E8%A1%A8-A-B-%E5%AD%97%E6%AE%B5-%E5%8F%AA%E6%9C%89%E4%B8%A4%E5%88%97%EF%BC%8C%E9%83%BD%E6%98%AF-%E5%A7%93%E5%90%8D-%E5%92%8C%E8%BA%AB%E4%BB%BD%E8%AF%81%E5%8F%B7%EF%BC%8C%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E7%9A%84%E6%89%BE%E5%87%BA%E7%9B%B8%E5%90%8C%E7%9A%84%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>题目：现有两张表 A,B 字段 只有两列，都是 姓名 和身份证号，如何快速的找出相同的记录<br>table a   table b<br>nameA     nameB<br>cardA     cardB  </p>
<p>select nameA,cardA from a<br>inner join<br>b on a.nameA = b.nameB and a.cardA = b.cardB;  </p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>interview</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>sql场景面试题2</title>
    <url>/2022/08/03/database-mysql-interview-SQL%E5%B8%B8%E8%A7%81%E7%9A%84%E4%B8%80%E4%BA%9B%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%A4%AA%E6%9C%89%E7%94%A8%E5%95%A6/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.cnblogs.com/diffrent/p/8854995.html" target="_blank" rel="noopener">SQL常见的一些面试题(太有用啦)</a>  </p>
<p>1.用一条SQL 语句 查询出每门课都大于80 分的学生姓名</p>
<p>name   kecheng   fenshu<br>张三    语文       81<br>张三     数学       75<br>李四     语文       76<br>李四     数学       90<br>王五     语文       81<br>王五     数学       100<br>王五     英语       90</p>
<p>A:<br>select distinct name from table where name not in (select distinct name from table where fenshu&lt;=80)</p>
<blockquote>
<p>select name from table group by name having min(fenshu)&gt;80</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>interview</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>test-20091010-Title</title>
    <url>/2022/07/10/test-20091010-Title/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>test</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>Hash命令</title>
    <url>/2022/07/10/redis-redis%E5%91%BD%E4%BB%A4-2%E3%80%81Hash%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>1、常用命令：<br>hget、hset、hgetall等<br>Hash是一个String类型的field和value的映射表，hash特别适合用于存储对象。<br>比如：我们可以Hash数据结构来存储用户信息，商品信息等。  </p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>redis</category>
        <category>redis命令</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Sorted Set命令</title>
    <url>/2022/07/10/redis-redis%E5%91%BD%E4%BB%A4-5%E3%80%81Sorted-Set%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>1、常用命令：<br>zadd、zrange、zrem、zcard等<br>与 set 相比：sorted set增加了一个权重参数score，使得集合中的元素能够按照score进行有序排列。<br>应用：在直播系统中，实时排行信息包含直播间在线用户列表，各种礼物排行榜，弹幕消息（可以理解为按消息维度的消息排行榜）等信息，适合Sorted Set存储。  </p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>redis</category>
        <category>redis命令</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Set命令</title>
    <url>/2022/07/10/redis-redis%E5%91%BD%E4%BB%A4-4%E3%80%81Set%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>1、常用命令：<br>sadd、spop、smembers、sunion等<br>set = 与list类似的列表， 但： set可以自动排重<br>应用：需要存储列表，且数据不能重复。 如：微博关注人，二度好友，共同喜好等<br>提供： 判断某个成员是否在一个set集合内的重要接口。  </p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>redis</category>
        <category>redis命令</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>List命令</title>
    <url>/2022/07/10/redis-redis%E5%91%BD%E4%BB%A4-3%E3%80%81List%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>1、常用命令：<br>lpush、rpush、lpop、rpop、lrange等<br>list = 双向链表  即：支持反向查找和遍历，但：会带来部分额外的内存开销。<br>应用： 微博的关注列表，粉丝列表，最新消息排行等  </p>
<p>2、常用命令：<br>lRem(String key, long count, String value)  匹配指定value并移除<br>lSet(String key, long index, String value)  匹配指定index并修改<br>lTrim(String key, long start, long stop)    匹配指定start-stop区间，并只保留该区间<br>lRange(String key, int start, int end)      匹配指定start-end范围内的数据，并返回<br>lLen(String key)                            匹配该key的列表长度<br>lInsert(String key, ListPosition listPosition, String resourceValue, String newValue)  在列表的元素前或者后插入元素<br>lIndex(String key, int index)               匹配指定index的列表元素，并返回  </p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>redis</category>
        <category>redis命令</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>select</title>
    <url>/2022/07/10/redis-redis%E5%91%BD%E4%BB%A4-7-select/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="查询指定redis库"><a href="#查询指定redis库" class="headerlink" title="查询指定redis库"></a>查询指定redis库</h1><p>select 0  查询db0库</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>redis</category>
        <category>redis命令</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>redis禁用危险命令</title>
    <url>/2022/07/10/redis-redis%E5%91%BD%E4%BB%A4-6-redis%E7%A6%81%E7%94%A8%E5%8D%B1%E9%99%A9%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="redis禁用危险命令"><a href="#redis禁用危险命令" class="headerlink" title="redis禁用危险命令"></a>redis禁用危险命令</h1><p>keys *<br>虽然其模糊匹配功能使用非常方便也很强大，在小数据量情况下使用没什么问题，数据量大会导致 Redis 锁住及 CPU 飙升，在生产环境建议禁用或者重命名！</p>
<p>flushdb<br>删除 Redis 中当前所在数据库中的所有记录，并且此命令从不会执行失败</p>
<p>flushall<br>删除 Redis 中所有数据库中的所有记录，不只是当前所在数据库，并且此命令从不会执行失败。<br>注：执行flushall命令，也会产生dump.rdb文件，但里面是空的，无意义</p>
<p>config<br>客户端可修改 Redis 配置。</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>redis</category>
        <category>redis命令</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>redis中set、setnx、setex区别</title>
    <url>/2022/07/10/redis-redis%E5%91%BD%E4%BB%A4-redis%E4%B8%ADset%E3%80%81setnx%E3%80%81setex%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="http://blog.sina.com.cn/s/blog_ee34aa660102yur0.html" target="_blank" rel="noopener">redis中set、setnx、setex区别</a></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>redis</category>
        <category>redis命令</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>redis db常用命令</title>
    <url>/2022/07/10/redis-redis%E5%91%BD%E4%BB%A4-8-redis-db%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="select-切换库"><a href="#select-切换库" class="headerlink" title="select 切换库"></a>select 切换库</h1><h1 id="dbsize-当前库中数据条数"><a href="#dbsize-当前库中数据条数" class="headerlink" title="dbsize 当前库中数据条数"></a>dbsize 当前库中数据条数</h1><h1 id="清空数据库"><a href="#清空数据库" class="headerlink" title="清空数据库"></a>清空数据库</h1><p>flushdb | flushall 清空数据，一个是清空当前库，一个清空当前实例</p>
<h1 id="查看服务器及redis相关信息"><a href="#查看服务器及redis相关信息" class="headerlink" title="查看服务器及redis相关信息"></a>查看服务器及redis相关信息</h1><p>info<br>info cpu<br>info server</p>
<h1 id="列出所有连接的客户端"><a href="#列出所有连接的客户端" class="headerlink" title="列出所有连接的客户端"></a>列出所有连接的客户端</h1><p>client list </p>
<h1 id="关闭指定客户端"><a href="#关闭指定客户端" class="headerlink" title="关闭指定客户端"></a>关闭指定客户端</h1><p>client kill 127.0.0.1:34012</p>
<h1 id="为客户端设置名称"><a href="#为客户端设置名称" class="headerlink" title="为客户端设置名称"></a>为客户端设置名称</h1><p>127.0.0.1:6379&gt; client setname client2<br>OK<br>127.0.0.1:6379&gt; client getname<br>“client2”<br>127.0.0.1:6379&gt; client list<br>id=4 addr=127.0.0.1:34014 fd=8 name=client2 age=314 idle=0 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=0 oll=0 omem=0 events=r cmd=client</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>redis</category>
        <category>redis命令</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>npm安装最新版本</title>
    <url>/2022/07/10/npm-npm%E5%AE%89%E8%A3%85%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>安装指定版本的jquery-1.11.2<br>npm install jquery@1.11.0</p>
<p>安装1.0中的最新版本<br>npm install jquery@1</p>
<p>安装2.0版本中的最新版本<br>npm install jquery@2</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>npm</category>
        <category>nodejs</category>
      </categories>
      <tags>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>查看npm安装的包的版本</title>
    <url>/2022/07/10/npm-%E6%9F%A5%E7%9C%8Bnpm%E5%AE%89%E8%A3%85%E7%9A%84%E5%8C%85%E7%9A%84%E7%89%88%E6%9C%AC/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.cnblogs.com/hao-1234-1234/p/14119327.html" target="_blank" rel="noopener">npm 如何查看一个包的版本信息？（转载）</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code&gt;npm ls hexo</span><br><span class="line">hexo-site@0.0.0 E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code</span><br><span class="line">+-- hexo@3.9.0</span><br><span class="line">&#96;-- hexo-generator-baidu-sitemap@0.1.2</span><br><span class="line">  &#96;-- hexo@3.9.0  deduped</span><br></pre></td></tr></table></figure>
<p>第二种方式：npm ls jquery -g    (查看全局安装的jquery)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code&gt;hexo version</span><br><span class="line">hexo: 3.9.0</span><br><span class="line">hexo-cli: 4.3.0</span><br><span class="line">os: win32 10.0.19042</span><br><span class="line">node: 12.16.0</span><br><span class="line">v8: 7.8.279.23-node.31</span><br><span class="line">uv: 1.34.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.7</span><br><span class="line">ares: 1.15.0</span><br><span class="line">modules: 72</span><br><span class="line">nghttp2: 1.40.0</span><br><span class="line">napi: 5</span><br><span class="line">llhttp: 2.0.4</span><br><span class="line">http_parser: 2.9.3</span><br><span class="line">openssl: 1.1.1d</span><br><span class="line">cldr: 35.1</span><br><span class="line">icu: 64.2</span><br><span class="line">tz: 2019c</span><br><span class="line">unicode: 12.1</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>npm</category>
        <category>nodejs</category>
      </categories>
      <tags>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>查看npm已安装包的版本和最新版本</title>
    <url>/2022/07/10/npm-%E6%9F%A5%E7%9C%8Bnpm%E5%B7%B2%E5%AE%89%E8%A3%85%E5%8C%85%E7%9A%84%E7%89%88%E6%9C%AC%E5%92%8C%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code&gt;npm outdated</span><br><span class="line">Package                       Current  Wanted  Latest  Location</span><br><span class="line">aplayer                         1.6.0  1.10.1  1.10.1  hexo-site</span><br><span class="line">hexo                            3.9.0   3.9.0   6.0.0  hexo-site</span><br><span class="line">hexo-algolia                    1.2.4   1.3.2   1.3.2  hexo-site</span><br><span class="line">hexo-deployer-git               0.3.1   0.3.1   3.0.0  hexo-site</span><br><span class="line">hexo-generator-archive          0.1.5   0.1.5   1.0.0  hexo-site</span><br><span class="line">hexo-generator-baidu-sitemap    0.1.2   0.1.9   0.1.9  hexo-site</span><br><span class="line">hexo-generator-category         0.1.3   0.1.3   1.0.0  hexo-site</span><br><span class="line">hexo-generator-feed             1.2.2   1.2.2   3.0.0  hexo-site</span><br><span class="line">hexo-generator-index            0.2.1   0.2.1   2.0.0  hexo-site</span><br><span class="line">hexo-generator-sitemap          1.2.0   1.2.0   2.2.0  hexo-site</span><br><span class="line">hexo-generator-tag              0.2.0   0.2.0   1.0.0  hexo-site</span><br><span class="line">hexo-renderer-ejs               0.3.1   0.3.1   2.0.0  hexo-site</span><br><span class="line">hexo-renderer-marked            0.3.0   0.3.2   5.0.0  hexo-site</span><br><span class="line">hexo-renderer-stylus            0.3.3   0.3.3   2.0.1  hexo-site</span><br><span class="line">hexo-server                     0.2.2   0.2.2   3.0.0  hexo-site</span><br><span class="line">hexo-tag-aplayer                2.0.7   2.0.7   3.0.4  hexo-site</span><br><span class="line">hexo-wordcount                  3.0.2   3.0.2   6.0.1  hexo-site</span><br><span class="line">uglify-js                       3.3.4  3.15.2  3.15.2  hexo-site</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>npm</category>
        <category>nodejs</category>
      </categories>
      <tags>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>redis cluster常用命令</title>
    <url>/2022/07/10/redis-redis%E5%91%BD%E4%BB%A4-10-redis-cluster%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.cnblogs.com/zhoujinyi/p/11606935.html" target="_blank" rel="noopener">Redis 5.0 redis-cli –cluster help说明</a></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>redis</category>
        <category>redis命令</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>String命令</title>
    <url>/2022/07/10/redis-redis%E5%91%BD%E4%BB%A4-1%E3%80%81String%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>1、常用命令：<br>set、get、decr、incr、mget 等。<br>value其实不仅仅可以是String，也可以是 数字<br>应用场景：<br>a、常规key-value缓存应用；b、常规计数：微博数，粉丝数等。  </p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>redis</category>
        <category>redis命令</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>database-oracle-基础教程-数据库综述</title>
    <url>/2022/07/10/database-oracle-%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%BC%E8%BF%B0/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>database-mongodb-mongodb</title>
    <url>/2022/07/10/database-mongodb-mongodb/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>database-mongodb-mongodb概介-RDBMS-vs-NoSQL</title>
    <url>/2022/07/10/database-mongodb-mongodb%E6%A6%82%E4%BB%8B-RDBMS-vs-NoSQL/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.runoob.com/mongodb/nosql.html" target="_blank" rel="noopener">NoSQL简介、CAP介绍</a></p>
<h1 id="RDBMS"><a href="#RDBMS" class="headerlink" title="RDBMS"></a>RDBMS</h1><ul>
<li>高度组织化结构化数据</li>
<li>结构化查询语言（SQL） (SQL)</li>
<li>数据和关系都存储在单独的表中。</li>
<li>数据操纵语言，数据定义语言</li>
<li>严格的一致性</li>
<li>基础事务</li>
</ul>
<h1 id="NoSQL"><a href="#NoSQL" class="headerlink" title="NoSQL"></a>NoSQL</h1><ul>
<li>代表着不仅仅是SQL</li>
<li>没有声明性查询语言</li>
<li>没有预定义的模式<br>-键 - 值对存储，列存储，文档存储，图形数据库</li>
<li>最终一致性，而非ACID属性</li>
<li>非结构化和不可预知的数据</li>
<li>CAP定理</li>
<li>高性能，高可用性和可伸缩性</li>
</ul>
<h1 id="NoSQL的优点-缺点"><a href="#NoSQL的优点-缺点" class="headerlink" title="NoSQL的优点/缺点"></a>NoSQL的优点/缺点</h1><p>  优点:</p>
<ul>
<li>高可扩展性</li>
<li>分布式计算</li>
<li>低成本</li>
<li>架构的灵活性，半结构化数据</li>
<li><p>没有复杂的关系<br>缺点:</p>
</li>
<li><p>没有标准化</p>
</li>
<li>有限的查询功能（到目前为止）</li>
<li>最终一致是不直观的程序</li>
</ul>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>database-hbase-hbase</title>
    <url>/2022/07/10/database-hbase-hbase/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>database-jdbc-1-Sharding-JDBC</title>
    <url>/2022/07/10/database-jdbc-1-Sharding-JDBC/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.cnblogs.com/yixinjishu/p/10876071.html" target="_blank" rel="noopener">Sharding-JDBC 使用入门和基本配置</a></p>
<p><a href="https://www.jianshu.com/p/60960deed354" target="_blank" rel="noopener">Sharding-JDBC简介</a></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>database-hbase-面试题-1-hbase面试题1</title>
    <url>/2022/07/10/database-hbase-%E9%9D%A2%E8%AF%95%E9%A2%98-1-hbase%E9%9D%A2%E8%AF%95%E9%A2%981/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.cnblogs.com/bigdata-stone/p/9374751.html" target="_blank" rel="noopener">Hbase面试题1</a></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>sql日志打印到指定文件或控制台</title>
    <url>/2022/06/29/log4j2-1-sql%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%B0%E5%88%B0%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6%E6%88%96%E6%8E%A7%E5%88%B6%E5%8F%B0/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<pre><code>（控制台或者日志文件二选一）mybatis设置sql语句打印在控制台或者日志文件中: https://blog.csdn.net/weixin_42585386/article/details/117328488
</code></pre><hr>
<h1 id="打印至控制台"><a href="#打印至控制台" class="headerlink" title="打印至控制台"></a>打印至控制台</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#************mybatis  Begin****************</span><br><span class="line">mybatis.mapper-locations&#x3D;classpath*:mappers&#x2F;**&#x2F;*.xml</span><br><span class="line">mybatis.type-aliases-package&#x3D;com.cic.irc.invoice.repository.dataobject</span><br><span class="line"># 打印DEBUG的sql日至至控制台</span><br><span class="line">mybatis.configuration.log-impl&#x3D;org.apache.ibatis.logging.stdout.StdOutImpl</span><br></pre></td></tr></table></figure>
<h1 id="打印到指定文件"><a href="#打印到指定文件" class="headerlink" title="打印到指定文件"></a>打印到指定文件</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!--configuration status与monitorInterval采用默认值 --&gt;</span><br><span class="line">&lt;Configuration&gt;</span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;!-- 这里的app_name改为对应子域的名称 --&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;app_name&quot;&gt;应用名&lt;&#x2F;property&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;log_root&quot;&gt;.&#x2F;logs&lt;&#x2F;property&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;log_level&quot;&gt;INFO&lt;&#x2F;property&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;db_log_level&quot;&gt;TRACE&lt;&#x2F;property&gt;</span><br><span class="line">    &lt;&#x2F;properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--定义appender --&gt;</span><br><span class="line">    &lt;Appenders&gt;</span><br><span class="line">        &lt;!--输出控制台的配置 --&gt;</span><br><span class="line">        &lt;Console name&#x3D;&quot;STDOUT-APPENDER&quot; target&#x3D;&quot;SYSTEM_OUT&quot;&gt;</span><br><span class="line">            &lt;!--控制台输出日志格式--&gt;</span><br><span class="line">            &lt;!--            &lt;PatternLayout pattern&#x3D;&quot;%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;,%t,%r,%c&#123;2&#125;,%-5p  - %m%n%throwable&quot; charset&#x3D;&quot;UTF-8&quot;&#x2F;&gt;--&gt;</span><br><span class="line">            &lt;!--            &lt;PatternLayout pattern&#x3D;&quot;%d&#123;$&#123;LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS&#125;&#125; $&#123;LOG_LEVEL_PATTERN:-%5p&#125; %processId -&amp;#45;&amp;#45; [%15.15t] %-40.40logger&#123;39&#125; : %m%n$&#123;LOG_EXCEPTION_CONVERSION_WORD:-%wEx&#125;&quot; charset&#x3D;&quot;UTF-8&quot;&#x2F;&gt;--&gt;</span><br><span class="line">            &lt;PatternLayout pattern&#x3D;&quot;%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;,%t,%r,%c&#123;2&#125;,%-5p  - %m%n%throwable&quot; charset&#x3D;&quot;UTF-8&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;Console&gt;</span><br><span class="line"></span><br><span class="line">        &lt;Console name&#x3D;&quot;STDERR-APPENDER&quot; target&#x3D;&quot;SYSTEM_ERR&quot;&gt;</span><br><span class="line">            &lt;PatternLayout pattern&#x3D;&quot;%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;,%t,%r,%c&#123;2&#125;,%-5p  - %m%n%throwable&quot; charset&#x3D;&quot;UTF-8&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;Console&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--打印节点定义：错误节点日志--&gt;</span><br><span class="line">        &lt;RollingFile name&#x3D;&quot;ERROR-APPENDER&quot; fileName&#x3D;&quot;$&#123;log_root&#125;&#x2F;$&#123;app_name&#125;&#x2F;common-error.log&quot;</span><br><span class="line">                     filePattern&#x3D;&quot;$&#123;log_root&#125;&#x2F;$&#123;app_name&#125;&#x2F;common-error-%d&#123;yyyy-MM-dd&#125;.log&quot; append&#x3D;&quot;true&quot;&gt;</span><br><span class="line">            &lt;PatternLayout</span><br><span class="line">                    pattern&#x3D;&quot;%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;,%t,%r,%-5p,[%X&#123;SOFA-TraceId&#125; %X&#123;SOFA-SpanId&#125; - %X&#123;remoteAddr&#125;&#x2F;%X&#123;clientId&#125; - %X&#123;requestURIWithQueryString&#125;] %c&#123;2&#125; - %m%n%throwable&quot;</span><br><span class="line">                    charset&#x3D;&quot;UTF-8&quot;&#x2F;&gt;</span><br><span class="line">            &lt;TimeBasedTriggeringPolicy&#x2F;&gt;</span><br><span class="line">            &lt;DefaultRolloverStrategy&#x2F;&gt;</span><br><span class="line">            &lt;ThresholdFilter level&#x3D;&quot;ERROR&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;RollingFile&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--打印节点定义：SQL日志--&gt;</span><br><span class="line">        &lt;RollingFile name&#x3D;&quot;SQL-APPENDER&quot;</span><br><span class="line">                     fileName&#x3D;&quot;$&#123;log_root&#125;&#x2F;$&#123;app_name&#125;&#x2F;$&#123;app_name&#125;-sql.log&quot;</span><br><span class="line">                     filePattern&#x3D;&quot;$&#123;log_root&#125;&#x2F;$&#123;app_name&#125;&#x2F;$&#123;app_name&#125;-sql-%d&#123;yyyy-MM-dd&#125;.log&quot;</span><br><span class="line">                     append&#x3D;&quot;true&quot;&gt;</span><br><span class="line">            &lt;PatternLayout</span><br><span class="line">                    pattern&#x3D;&quot;%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;,%t,%r,%-5p,[%X&#123;SOFA-TraceId&#125; %X&#123;SOFA-SpanId&#125; - %X&#123;remoteAddr&#125;&#x2F;%X&#123;clientId&#125; - %X&#123;requestURIWithQueryString&#125;] %c&#123;2&#125; - %m%n%throwable&quot;</span><br><span class="line">                    charset&#x3D;&quot;UTF-8&quot;&#x2F;&gt;</span><br><span class="line">            &lt;TimeBasedTriggeringPolicy&#x2F;&gt;</span><br><span class="line">            &lt;DefaultRolloverStrategy&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;RollingFile&gt;</span><br><span class="line"></span><br><span class="line">    &lt;&#x2F;Appenders&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Loggers&gt;</span><br><span class="line">        &lt;AsyncLogger name&#x3D;&quot;STDOUT&quot; additivity&#x3D;&quot;false&quot; level&#x3D;&quot;$&#123;log_level&#125;&quot;&gt;</span><br><span class="line">            &lt;AppenderRef ref&#x3D;&quot;STDOUT-APPENDER&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;AsyncLogger&gt;</span><br><span class="line">        &lt;AsyncLogger name&#x3D;&quot;STDERR&quot; additivity&#x3D;&quot;false&quot; level&#x3D;&quot;$&#123;log_level&#125;&quot;&gt;</span><br><span class="line">            &lt;AppenderRef ref&#x3D;&quot;STDERR-APPENDER&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;AsyncLogger&gt;</span><br><span class="line"></span><br><span class="line">        &lt;AsyncLogger name&#x3D;&quot;cn.cic.irc.cc.infrastructure.repository.mapper&quot; additivity&#x3D;&quot;false&quot; level&#x3D;&quot;$&#123;db_log_level&#125;&quot;&gt;</span><br><span class="line">            &lt;appender-ref ref&#x3D;&quot;SQL-APPENDER&quot;&#x2F;&gt;</span><br><span class="line">            &lt;!-- 虽然此处写了控制台日志打印，但是控制台和文件只能2选1--&gt;</span><br><span class="line">            &lt;AppenderRef ref&#x3D;&quot;STDOUT-APPENDER&quot;&#x2F;&gt;</span><br><span class="line">            &lt;AppenderRef ref&#x3D;&quot;ERROR-APPENDER&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;AsyncLogger&gt;</span><br><span class="line"></span><br><span class="line">        &lt;AsyncRoot level&#x3D;&quot;$&#123;log_level&#125;&quot;&gt;</span><br><span class="line">            &lt;AppenderRef ref&#x3D;&quot;STDOUT-APPENDER&quot;&#x2F;&gt;</span><br><span class="line">            &lt;AppenderRef ref&#x3D;&quot;ERROR-APPENDER&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;AsyncRoot&gt;</span><br><span class="line"></span><br><span class="line">    &lt;&#x2F;Loggers&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;Configuration&gt;</span><br></pre></td></tr></table></figure>
<ol>
<li>SQL-APPENDER 的异步日志即为sql日志</li>
<li>控制台和文件日志只能2选1</li>
<li>如果在springboot的application.properties中添加了 “mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl” 配置，那么日志只会打印在控制台中，删除后则会打印在指定文件</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>log</category>
        <category>log4j2</category>
      </categories>
      <tags>
        <tag>log</tag>
        <tag>log4j2</tag>
      </tags>
  </entry>
  <entry>
    <title>直接引用源参数的映射方法</title>
    <url>/2022/06/29/tool-mappingStruct-10-%E7%9B%B4%E6%8E%A5%E5%BC%95%E7%94%A8%E6%BA%90%E5%8F%82%E6%95%B0%E7%9A%84%E6%98%A0%E5%B0%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="直接引用源参数的映射方法"><a href="#直接引用源参数的映射方法" class="headerlink" title="直接引用源参数的映射方法"></a>直接引用源参数的映射方法</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Mapper</span><br><span class="line">public interface AddressMapper &#123;</span><br><span class="line"></span><br><span class="line">    @Mapping(target &#x3D; &quot;description&quot;, source &#x3D; &quot;person.description&quot;)</span><br><span class="line">    @Mapping(target &#x3D; &quot;houseNumber&quot;, source &#x3D; &quot;hn&quot;)</span><br><span class="line">    DeliveryAddressDto personAndAddressToDeliveryAddressDto(Person person, Integer hn);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>mappingStruct</category>
      </categories>
      <tags>
        <tag>mappingStruct</tag>
      </tags>
  </entry>
  <entry>
    <title>检索映射器</title>
    <url>/2022/06/29/tool-mappingStruct-11-%E6%A3%80%E7%B4%A2%E6%98%A0%E5%B0%84%E5%99%A8/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="检索映射器"><a href="#检索映射器" class="headerlink" title="检索映射器"></a>检索映射器</h1><h2 id="Mappers-工厂（无依赖注入）"><a href="#Mappers-工厂（无依赖注入）" class="headerlink" title="Mappers 工厂（无依赖注入）"></a>Mappers 工厂（无依赖注入）</h2><p>当不使用 DI 框架时，可以通过org.mapstruct.factory.Mappers类检索 Mapper 实例。只需调用该getMapper()方法，传递映射器的接口类型即可返回：</p>
<ol>
<li>使用 Mappers 工厂<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CarMapper mapper &#x3D; Mappers.getMapper( CarMapper.class );</span><br></pre></td></tr></table></figure>
按照惯例，映射器接口应定义一个名为的成员，该成员INSTANCE包含映射器类型的单个实例：</li>
<li>声明映射器的实例（接口）<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Mapper</span><br><span class="line">public interface CarMapper &#123;</span><br><span class="line"></span><br><span class="line">    CarMapper INSTANCE &#x3D; Mappers.getMapper( CarMapper.class );</span><br><span class="line"></span><br><span class="line">    CarDto carToCarDto(Car car);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>声明映射器的实例（抽象类）<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Mapper</span><br><span class="line">public abstract class CarMapper &#123;</span><br><span class="line"></span><br><span class="line">    public static final CarMapper INSTANCE &#x3D; Mappers.getMapper( CarMapper.class );</span><br><span class="line"></span><br><span class="line">    CarDto carToCarDto(Car car);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这种模式使客户端可以很容易地使用映射器对象，而无需重复实例化新实例：</p>
<h2 id="访问映射器"><a href="#访问映射器" class="headerlink" title="访问映射器"></a>访问映射器</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Car car &#x3D; ...;</span><br><span class="line">CarDto dto &#x3D; CarMapper.INSTANCE.carToCarDto( car );</span><br></pre></td></tr></table></figure>
<p>请注意，由 MapStruct 生成的映射器是无状态的和线程安全的，因此可以同时从多个线程安全地访问。</p>
</blockquote>
</li>
</ol>
<h2 id="使用依赖注入"><a href="#使用依赖注入" class="headerlink" title="使用依赖注入"></a>使用依赖注入</h2><ol>
<li>使用 CDI 组件模型的映射器<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Mapper(componentModel &#x3D; MappingConstants.ComponentModel.CDI)</span><br><span class="line">public interface CarMapper &#123;</span><br><span class="line"></span><br><span class="line">    CarDto carToCarDto(Car car);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>生成的映射器实现将用@ApplicationScoped注释标记，因此可以使用注释注入字段、构造函数参数等@Inject：</p>
</blockquote>
</li>
<li>通过依赖注入获取映射器<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Inject</span><br><span class="line">private CarMapper mapper;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="注入策略"><a href="#注入策略" class="headerlink" title="注入策略"></a>注入策略</h2><p>使用依赖注入时，您可以在字段注入和构造函数注入之间进行选择。这可以通过通过提供注入策略@Mapper或@MapperConfig注释来完成。</p>
<ol>
<li>使用构造函数注入<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Mapper(componentModel &#x3D; MappingConstants.ComponentModel.CDI, uses &#x3D; EngineMapper.class, injectionStrategy &#x3D; InjectionStrategy.CONSTRUCTOR)</span><br><span class="line">public interface CarMapper &#123;</span><br><span class="line">    CarDto carToCarDto(Car car);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果 MapStruct 检测到它需要使用它的实例进行映射，则生成的映射器将注入在uses属性中定义的类。<br>使用InjectionStrategy#CONSTRUCTOR时，构造函数将具有适当的注释，而字段则不会。<br>使用InjectionStrategy#FIELD时，注释在字段本身上。目前，默认的注入策略是字段注入，但可以使用配置选项进行配置。建议使用构造函数注入来简化测试。<br>对于抽象类或装饰器，应该使用 setter 注入。</p>
</blockquote>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>mappingStruct</category>
      </categories>
      <tags>
        <tag>mappingStruct</tag>
      </tags>
  </entry>
  <entry>
    <title>数据类型转换</title>
    <url>/2022/06/29/tool-mappingStruct-12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h1><ol>
<li>从 int 到 String 的转换<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Mapper</span><br><span class="line">public interface CarMapper &#123;</span><br><span class="line"></span><br><span class="line">    @Mapping(source &#x3D; &quot;price&quot;, numberFormat &#x3D; &quot;$#.00&quot;)</span><br><span class="line">    CarDto carToCarDto(Car car);</span><br><span class="line"></span><br><span class="line">    @IterableMapping(numberFormat &#x3D; &quot;$#.00&quot;)</span><br><span class="line">    List&lt;String&gt; prices(List&lt;Integer&gt; prices);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>从 BigDecimal 到 String 的转换<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Mapper</span><br><span class="line">public interface CarMapper &#123;</span><br><span class="line"></span><br><span class="line">    @Mapping(source &#x3D; &quot;power&quot;, numberFormat &#x3D; &quot;#.##E0&quot;)</span><br><span class="line">    CarDto carToCarDto(Car car);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>从日期到字符串的转换<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Mapper</span><br><span class="line">public interface CarMapper &#123;</span><br><span class="line"></span><br><span class="line">    @Mapping(source &#x3D; &quot;manufacturingDate&quot;, dateFormat &#x3D; &quot;dd.MM.yyyy&quot;)</span><br><span class="line">    CarDto carToCarDto(Car car);</span><br><span class="line"></span><br><span class="line">    @IterableMapping(dateFormat &#x3D; &quot;dd.MM.yyyy&quot;)</span><br><span class="line">    List&lt;String&gt; stringListToDateList(List&lt;Date&gt; dates);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>mappingStruct</category>
      </categories>
      <tags>
        <tag>mappingStruct</tag>
      </tags>
  </entry>
  <entry>
    <title>uses介绍</title>
    <url>/2022/06/29/tool-mappingStruct-4-uses%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="mapStruct-uses"><a href="#mapStruct-uses" class="headerlink" title="mapStruct uses"></a>mapStruct uses</h1><p>查看demo <a href="./4-mapStruct%20uses%20demo"></a></p>
<h2 id="mapper类如下"><a href="#mapper类如下" class="headerlink" title="mapper类如下"></a>mapper类如下</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Mapper</span>( uses = IterableNonInterableUtil<span class="class">.<span class="keyword">class</span> )</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">interface</span> <span class="title">SourceTargetMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    SourceTargetMapper MAPPER = Mappers.getMapper( SourceTargetMapper<span class="class">.<span class="keyword">class</span> )</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Mapping</span>( source = <span class="string">"myIntegers"</span>, target = <span class="string">"myInteger"</span>, qualifiedBy = FirstElement<span class="class">.<span class="keyword">class</span> )</span></span><br><span class="line"><span class="class">    @<span class="title">Mapping</span>( <span class="title">source</span> </span>= <span class="string">"myStrings"</span>, target = <span class="string">"myString"</span>, qualifiedBy = LastElement<span class="class">.<span class="keyword">class</span> )</span></span><br><span class="line"><span class="class">    <span class="title">Target</span> <span class="title">toTarget</span>( <span class="title">Source</span> <span class="title">s</span> )</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IterableNonInterableUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@FirstElement</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">first</span><span class="params">( List&lt;T&gt; in )</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ( in != <span class="keyword">null</span> &amp;&amp; !in.isEmpty() ) &#123;</span><br><span class="line">            <span class="keyword">return</span> in.get( <span class="number">0</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@LastElement</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">last</span><span class="params">( List&lt;T&gt; in )</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ( in != <span class="keyword">null</span> &amp;&amp; !in.isEmpty() ) &#123;</span><br><span class="line">            <span class="keyword">return</span> in.get( in.size() - <span class="number">1</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>我们使用了 uses 之后，表示此mapper中所有的字段转换，只要满足 IterableNonInterableUtil.class 中的first和last方法，<br>那么在其实现类生成中，都会优先使用 IterableNonInterableUtil.classs 中的方法</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>mappingStruct</category>
      </categories>
      <tags>
        <tag>mappingStruct</tag>
      </tags>
  </entry>
  <entry>
    <title>mapStruct注解参数介绍</title>
    <url>/2022/06/29/tool-mappingStruct-3-mapStruct%E6%B3%A8%E8%A7%A3%E5%8F%82%E6%95%B0%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.cnblogs.com/anakinsky008/p/15513375.html" target="_blank" rel="noopener">Java实体映射工具MapStruct使用详解</a></p>
<p>通常在后端开发中经常不直接返回实体Entity类，经过处理转换返回前端，前端提交过来的对象也需要经过转换Entity实体才做存储；通常使用的BeanUtils.copyProperties方法也比较粗暴，不仅效率低下（使用反射）而且仅映射相同名的属性，多数情况下还需要手动编写对应的转换方法实现。<br>插件MapStruct以接口方法结合注解优雅实现对象转换，MapStruct生成器生成代码以更贴近原生的Setter、Getter方法处理属性映射更为高效。<br><a href="https://github.com/mapstruct/mapstruct/" target="_blank" rel="noopener">https://github.com/mapstruct/mapstruct/</a><br><a href="https://github.com/mapstruct/mapstruct-examples" target="_blank" rel="noopener">https://github.com/mapstruct/mapstruct-examples</a></p>
<p>2.简单用例<br>实体对象User<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>转换对象UserVO<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserVO</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>转换接口<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserConvert</span> </span>&#123;</span><br><span class="line">    UserConvert INSTANCE = Mappers.getMapper(UserConvert<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="meta">@Mapping</span>(source = <span class="string">"name"</span>, target = <span class="string">"userName"</span>)</span><br><span class="line">    <span class="function">UserVO <span class="title">toVO</span><span class="params">(User entity)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>使用示例<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User(<span class="number">0</span>, <span class="string">"Tester"</span>, <span class="number">1</span>, <span class="string">"上海市徐汇区"</span>);</span><br><span class="line">    UserVO userVO = UserConvert.INSTANCE.toVO(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>3.使用详解<br>1)关于接口注解@Mapper几种属性用法详解<br>uses 使用其他手动编写的或者其他Mapper接口覆写相关的转换方法，不能循环引用<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Mapper</span>(uses=DateMapper<span class="class">.<span class="keyword">class</span>)</span></span><br></pre></td></tr></table></figure><br>imports 引用相关类，允许通过mapping.expression()、mapping.defaultExpression()直接使用这些类型<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Mapper</span>(imports = DateUtil<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">interface</span> <span class="title">UserConvert</span> </span>&#123;</span><br><span class="line">    UserConvert INSTANCE = Mappers.getMapper(UserConvert<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="meta">@Mappings</span>(&#123;</span><br><span class="line">            <span class="meta">@Mapping</span>(source = <span class="string">"name"</span>, target = <span class="string">"userName"</span>),</span><br><span class="line">            <span class="comment">// 以指定方法转换属性，这里如果不使用imports，则需要写全引用类包路径</span></span><br><span class="line">            <span class="meta">@Mapping</span>(target = <span class="string">"birthday"</span>, expression = <span class="string">"java(DateUtil.formatDate(entity.getBirthday()))"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function">UserVO <span class="title">toVO</span><span class="params">(User entity)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>unmappedSourcePolicy、unmappedTargetPolicy 针对源类型/目标类型中未映射属性的反馈策略<br>typeConversionPolicy 针对有损转换的反馈策略，例如Long转Integer<br>反馈策略主要有三种：IGNORE，默认值，忽略未映射的字段。WARN，警告。ERROR，报错<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Mapper</span>(unmappedSourcePolicy = ReportingPolicy.ERROR)</span><br></pre></td></tr></table></figure><br>componentModel 指定生成映射器实例的模式，主要有四种：</p>
<p>default，不主动生成实例，通常以Mappers.getMapper(Class)实例化。<br>cdi，以CDI标准实例化映射器，使用@Inject注入相关实例，<br>spring，Spring Bean方式实例化，<br>jsr330，jsr330标准实例化<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Mapper</span>(componentModel = <span class="string">"spring"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserConvert</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Mapping</span>(source = <span class="string">"name"</span>, target = <span class="string">"userName"</span>)</span><br><span class="line">    <span class="function">UserVO <span class="title">toVO</span><span class="params">(User entity)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> UserConvert userConvert;</span><br></pre></td></tr></table></figure><br>implementationName 指定实现类名称，映射生成器接口会自动生成实现类<CLASS_NAME>Impl，使用此属性可避免类冲突<br>implementationPackage 指定实现类包路径</p>
<p>config 指定配置类，由指定的@MapperConfig配置类，config导入相关配置<br>配置类<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@MapperConfig</span>(</span><br><span class="line">        uses = DateUtil<span class="class">.<span class="keyword">class</span>,</span></span><br><span class="line"><span class="class">        <span class="title">unmappedSourcePolicy</span> </span>= ReportingPolicy.WARN</span><br><span class="line">)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserConfig</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>导入配置类<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Mapper</span>(componentModel = <span class="string">"spring"</span>, config = UserConfig<span class="class">.<span class="keyword">class</span>)</span></span><br></pre></td></tr></table></figure><br>collectionMappingStrategy 集合映射策略，这里注意集合映射时，如果集合中的类型已有对应转换方法，集合转换时会优先使用<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Mappings</span>(&#123;</span><br><span class="line">        <span class="meta">@Mapping</span>(source = <span class="string">"name"</span>, target = <span class="string">"userName"</span>),</span><br><span class="line">        <span class="meta">@Mapping</span>(target = <span class="string">"birthday"</span>, expression = <span class="string">"java(DateUtil.formatDate(entity.getBirthday()))"</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="function">UserVO <span class="title">toVO</span><span class="params">(User entity)</span></span>;</span><br><span class="line"><span class="function">List&lt;UserVO&gt; <span class="title">collectionCvt</span><span class="params">(List&lt;User&gt; entities)</span></span>;</span><br></pre></td></tr></table></figure><br>GENERATED CODE 生成器生成代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> List&lt;UserVO&gt; <span class="title">collectionCvt</span><span class="params">(List&lt;User&gt; entities)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (entities == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        List&lt;UserVO&gt; list = <span class="keyword">new</span> ArrayList(entities.size());</span><br><span class="line">        Iterator var3 = entities.iterator();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(var3.hasNext()) &#123;</span><br><span class="line">            User user = (User)var3.next();</span><br><span class="line">            <span class="comment">// 集合转换时优先使用了已定义的toVO方法</span></span><br><span class="line">            list.add(<span class="keyword">this</span>.toVO(user));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>nullValueMappingStrategy null作为源值映射策略；RETURN_NULL默认返回null, RETURN_DEFAULT返回默认值，对于对象会通过构造器自动构造对象返回，集合会返回空集合</p>
<p>当值为RETURN_DEFAULT时，如果映射规则中包含Mapping.expression、Mapping.constant必须手动判空处理，否则NPE</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@MapperConfig</span>(nullValueMappingStrategy = NullValueMappingStrategy.RETURN_DEFAULT)</span><br></pre></td></tr></table></figure>
<p>NullValuePropertyMappingStrategy null作为源属性映射策略；SET_TO_NULL默认返回null，SET_TO_DEFAULT返回默认值，IGNORE 忽略该值，以目标对象已存在的值为准</p>
<p>MappingInheritanceStrategy 继承方法级映射配置策略：EXPLICIT 显示使用InheritConfiguration生效。AUTO_INHERIT_FROM_CONFIG 自动继承正向转换的配置。<br>AUTO_INHERIT_REVERSE_FROM_CONFIG 自动继承反向转换的配置。AUTO_INHERIT_ALL_FROM_CONFIG 都继承<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@MapperConfig</span>(</span><br><span class="line">        mappingInheritanceStrategy = MappingInheritanceStrategy.EXPLICIT</span><br><span class="line">)</span><br></pre></td></tr></table></figure><br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@InheritConfiguration</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cvtVO</span><span class="params">(User entity, @MappingTarget UserVO vo)</span></span>;</span><br></pre></td></tr></table></figure><br>nullValueCheckStrategy 空值监测策略</p>
<p>2) 其他方法级别注解<br>@InheritInverseConfiguration 反向转换时继承映射规则</p>
<p>@Mapping 配置类型属性的映射规则；<br>dateFormat 格式化日期<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Mapping</span>(target = <span class="string">"birthday"</span>, dateFormat = <span class="string">"yyyy-MM-dd HH:mm:ss"</span>)</span><br></pre></td></tr></table></figure><br>numberFormat 数字格式化<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Mapping</span>(target = <span class="string">"price"</span>, numberFormat = <span class="string">"$#.00"</span>)</span><br></pre></td></tr></table></figure><br>constant 常量<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Mapping</span>(target = <span class="string">"age"</span>, constant = <span class="string">"0"</span>)</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>mappingStruct</category>
      </categories>
      <tags>
        <tag>mappingStruct</tag>
      </tags>
  </entry>
  <entry>
    <title>向映射器添加自定义方法</title>
    <url>/2022/06/29/tool-mappingStruct-8-%E5%90%91%E6%98%A0%E5%B0%84%E5%99%A8%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="向映射器添加自定义方法"><a href="#向映射器添加自定义方法" class="headerlink" title="向映射器添加自定义方法"></a>向映射器添加自定义方法</h1><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Mapper</span><br><span class="line">public interface CarMapper &#123;</span><br><span class="line"></span><br><span class="line">    @Mapping(...)</span><br><span class="line">    ...</span><br><span class="line">    CarDto carToCarDto(Car car);</span><br><span class="line"></span><br><span class="line">    default PersonDto personToPersonDto(Person person) &#123;</span><br><span class="line">        &#x2F;&#x2F;hand-written mapping logic</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Mapper</span><br><span class="line">public abstract class CarMapper &#123;</span><br><span class="line"></span><br><span class="line">    @Mapping(...)</span><br><span class="line">    ...</span><br><span class="line">    public abstract CarDto carToCarDto(Car car);</span><br><span class="line"></span><br><span class="line">    public PersonDto personToPersonDto(Person person) &#123;</span><br><span class="line">        &#x2F;&#x2F;hand-written mapping logic</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>在转换 Car -&gt; CarDto 时，会自动将Car中的Person转换（通过寻找本类中的 personToPersonDto 实现转换）</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>mappingStruct</category>
      </categories>
      <tags>
        <tag>mappingStruct</tag>
      </tags>
  </entry>
  <entry>
    <title>映射组合（实验）</title>
    <url>/2022/06/29/tool-mappingStruct-7-%E6%98%A0%E5%B0%84%E7%BB%84%E5%90%88%EF%BC%88%E5%AE%9E%E9%AA%8C%EF%BC%89/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="映射组合（实验）"><a href="#映射组合（实验）" class="headerlink" title="映射组合（实验）"></a>映射组合（实验）</h1><h2 id="定义注解"><a href="#定义注解" class="headerlink" title="定义注解"></a>定义注解</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Retention(RetentionPolicy.CLASS)</span><br><span class="line">@Mapping(target &#x3D; &quot;id&quot;, ignore &#x3D; true)</span><br><span class="line">@Mapping(target &#x3D; &quot;creationDate&quot;, expression &#x3D; &quot;java(new java.util.Date())&quot;)</span><br><span class="line">@Mapping(target &#x3D; &quot;name&quot;, source &#x3D; &quot;groupName&quot;)</span><br><span class="line">public @interface ToEntity &#123; &#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用注解"><a href="#使用注解" class="headerlink" title="使用注解"></a>使用注解</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Mapper</span><br><span class="line">public interface StorageMapper &#123;</span><br><span class="line"></span><br><span class="line">    StorageMapper INSTANCE &#x3D; Mappers.getMapper( StorageMapper.class );</span><br><span class="line"></span><br><span class="line">    @ToEntity</span><br><span class="line">    @Mapping( target &#x3D; &quot;weightLimit&quot;, source &#x3D; &quot;maxWeight&quot;)</span><br><span class="line">    ShelveEntity map(ShelveDto source);</span><br><span class="line"></span><br><span class="line">    @ToEntity</span><br><span class="line">    @Mapping( target &#x3D; &quot;label&quot;, source &#x3D; &quot;designation&quot;)</span><br><span class="line">    BoxEntity map(BoxDto source);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>此功能仍处于试验阶段。错误信息还不成熟：显示问题发生的方法，以及@Mapping注解中的相关值。<br>但是，构图方面是不可见的。消息“好像”@Mapping会直接出现在相关方法上。<br>因此，用户应谨慎使用此功能，尤其是在不确定某个属性是否始终存在时。</p>
<blockquote>
<p>字段必须都存在才能使用</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>mappingStruct</category>
      </categories>
      <tags>
        <tag>mappingStruct</tag>
      </tags>
  </entry>
  <entry>
    <title>具有多个源参数的映射方法</title>
    <url>/2022/06/29/tool-mappingStruct-9-%E5%85%B7%E6%9C%89%E5%A4%9A%E4%B8%AA%E6%BA%90%E5%8F%82%E6%95%B0%E7%9A%84%E6%98%A0%E5%B0%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="具有多个源参数的映射方法"><a href="#具有多个源参数的映射方法" class="headerlink" title="具有多个源参数的映射方法"></a>具有多个源参数的映射方法</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Mapper</span><br><span class="line">public interface AddressMapper &#123;</span><br><span class="line"></span><br><span class="line">    @Mapping(target &#x3D; &quot;description&quot;, source &#x3D; &quot;person.description&quot;)</span><br><span class="line">    @Mapping(target &#x3D; &quot;houseNumber&quot;, source &#x3D; &quot;address.houseNo&quot;)</span><br><span class="line">    DeliveryAddressDto personAndAddressToDeliveryAddressDto(Person person, Address address);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>mappingStruct</category>
      </categories>
      <tags>
        <tag>mappingStruct</tag>
      </tags>
  </entry>
  <entry>
    <title>SDS和C字符串的区别</title>
    <url>/2022/06/29/redis-notes-4-SDS%E5%92%8CC%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="SDS和C字符串的区别-1"><a href="#SDS和C字符串的区别-1" class="headerlink" title="SDS和C字符串的区别 - 1"></a>SDS和C字符串的区别 - 1</h1><ol>
<li><p>常数复杂度获取字符串长度：因为SDS定义了len字段来记录自身长度，而C字符串的长度需要去遍历整个字符串，复杂度为O(n),这里的设计就提现出来redis在细节之处对性能的追求</p>
</li>
<li><p>杜绝缓存区溢出：C字符串不记录自身长度，如果在执行字符串拼接操作时，缓存区没有足够的内存，一旦忘记分配新的内存，就会发生缓存区溢出，可能对它相邻的数据造成覆盖，而对SDS进行修改时，SDS可以通过保存的长度和空间信息进行空间检验，如果内存不足，会进行扩容操作</p>
</li>
<li><p>减少内存重分配次数：对于C字符串的修改，无论是增长还是缩短，都需要进行一次内存的重新分配，这样就会导致大量的时间浪费在内存的分配上，而SDS通过free来记录未使用空间，解除了字符串长度和底层数组之间的长度关联，通过空间预分配和惰性空间释放的方式来减少内存重新分配的次数，优化reids对数据频繁修改场景下的性能</p>
</li>
<li><p>二进制安全：C字符串通过末尾的空字符来确认读取的结束，这就对字符串的存储带来了限制，因为C字符串的中间不能出现空字符，否则会导致空字符后面的数据不能被读取，而SDS通过len字段保存了字符串的长度，这样在读取的时候就不需要通过空字符来确认是否读取完全，直接按照len来读取指定长度的字符串，这样使得redis不仅能保存字符串，还能保存任意格式的二进制数据</p>
</li>
</ol>
<h1 id="SDS和C字符串的区别-2"><a href="#SDS和C字符串的区别-2" class="headerlink" title="SDS和C字符串的区别 - 2"></a>SDS和C字符串的区别 - 2</h1><ul>
<li>C 字符串</li>
</ul>
<ol>
<li>获取字符串长度的复杂度为 O(N) 。</li>
<li>API 是不安全的，可能会造成缓冲区溢出。</li>
<li>修改字符串长度 N 次必然需要执行 N 次内存重分配。</li>
<li>只能保存文本数据。</li>
<li>可以使用所有 <string.h> 库中的函数。 可以使用一部分 <string.h> 库中的函数。</li>
</ol>
<ul>
<li>SDS</li>
</ul>
<ol>
<li>获取字符串长度的复杂度为 O(1) 。（SDS结果中存储了len属性）</li>
<li>API 是安全的，不会造成缓冲区溢出。（自动分配内存）</li>
<li>修改字符串长度 N 次最多需要执行 N 次内存重分配。</li>
<li>可以保存文本或者二进制数据。</li>
<li>可以使用一部分 <string.h> 库中的函数。</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>redis</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>List底层数据结构实现</title>
    <url>/2022/06/29/redis-notes-5-List%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="List底层数据结构实现"><a href="#List底层数据结构实现" class="headerlink" title="List底层数据结构实现"></a>List底层数据结构实现</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Redis列表是简单的字符串列表，按照插入顺序排序。<br>你可以添加一个元素到列表的头部（左边）或者尾部（右边），<br>主要的应用场景为消息队列、定时计算排行榜、非频繁更新的最新列表等，  </p>
<h2 id="实现的数据结构"><a href="#实现的数据结构" class="headerlink" title="实现的数据结构"></a>实现的数据结构</h2><p>list（列表）实现的数据结构包括ziplist（压缩列表）和linkedlist(链表)，<br>当列表元素比较少（元素数量小于512个）且列表项是小整数值或者较短字符串（长度小于64个字节）时会用ziplist来作为的底层实现<br>否则转为使用linkedlist(链表)</p>
<h2 id="ziplist（压缩列表）"><a href="#ziplist（压缩列表）" class="headerlink" title="ziplist（压缩列表）"></a>ziplist（压缩列表）</h2><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>redis</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>redis存储对象信息是用hash还是string</title>
    <url>/2022/06/28/redis-notes-3-redis%E5%AD%98%E5%82%A8%E5%AF%B9%E8%B1%A1%E4%BF%A1%E6%81%AF%E6%98%AF%E7%94%A8hash%E8%BF%98%E6%98%AFstring/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="redis存储对象信息是用hash还是string"><a href="#redis存储对象信息是用hash还是string" class="headerlink" title="redis存储对象信息是用hash还是string"></a>redis存储对象信息是用hash还是string</h1><p>建议是大部分情况下使用 string 存储就好，毕竟在存储具有多层嵌套的对象时方便很多，占用的空间也比 Hash 小。当我们需要存储一个特别大的对象时，而且在大多数情况中只需要访问该对象少量的字段时，可以考虑使用 Hash。</p>
<h2 id="适合用-string-存储的情况："><a href="#适合用-string-存储的情况：" class="headerlink" title="适合用 string 存储的情况："></a>适合用 string 存储的情况：</h2><p>每次需要访问大量的字段<br>存储的结构具有多层嵌套的时候</p>
<h2 id="适合用-hash-存储的情况："><a href="#适合用-hash-存储的情况：" class="headerlink" title="适合用 hash 存储的情况："></a>适合用 hash 存储的情况：</h2><p>在大多数情况中只需要访问少量字段<br>自己始终知道哪些字段可用，防止使用 mget 时获取不到想要的数据</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>redis</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>为什么通过命令行查询不到redis中的KEY</title>
    <url>/2022/05/25/redis-notes-1-%E4%B8%BA%E4%BB%80%E4%B9%88%E9%80%9A%E8%BF%87%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%9F%A5%E8%AF%A2%E4%B8%8D%E5%88%B0redis%E4%B8%AD%E7%9A%84KEY/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/w8y56f/article/details/120225410" target="_blank" rel="noopener">为什么通过命令行查不到redis中的key</a></p>
<h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>RedisTemplate都没有特别配置序列化器，在执行后，使用命令行连上redis，执行keys my_key<em>，发现只有第二个key存在，第一个消失了，但是代码执行后是能够取到值的。这是为什么？<br>是因为命令行的工具有bug吗？不是的。使用 keys </em>my_key*，就可以显示两个key都存在。</p>
<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>为什么key 前面没有奇怪的符号，因为Spring 在遇到 <String, String> 泛型的时候注入的不是 RedisTemplate 类，而是 StringRedisTemplate 类，而后者的所有序列化器都是 String的序列化器(StringRedisSerializer)，所以就很正常了。</p>
<h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>建议设置一下 key 和 hash key 的序列化器为String序列化器，这样可读性才强，debug的时候才好发现，另外不需要重复 new StringRedisSerializer()，共用即可，线程安全</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Bean</span><br><span class="line">    public RedisTemplate redisTemplate(RedisConnectionFactory redisConnectionFactory) &#123;</span><br><span class="line">        RedisTemplate template &#x3D; new RedisTemplate();</span><br><span class="line">        template.setConnectionFactory(redisConnectionFactory);</span><br><span class="line">         &#x2F;&#x2F;建议设置一下 key 和 hash key 的序列化器为String序列化器，这样可读性才强，debug的时候才好发现，另外不需要重复 new StringRedisSerializer()，共用即可，线程安全</span><br><span class="line">        RedisSerializer&lt;String&gt; stringRedisSerializer &#x3D; new StringRedisSerializer();</span><br><span class="line">        template.setKeySerializer(stringRedisSerializer);</span><br><span class="line">        template.setHashKeySerializer(stringRedisSerializer);</span><br><span class="line">        template.afterPropertiesSet();</span><br><span class="line">        return template;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>redis</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>redis序列化</title>
    <url>/2022/05/25/redis-notes-1-%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/leilei1366615/article/details/122204776" target="_blank" rel="noopener">Redis 序列化 GenericJackson2JsonRedisSerializer和Jackson2JsonRedisSerializer的区别</a></p>
<h1 id="KEY序列化和Val序列化"><a href="#KEY序列化和Val序列化" class="headerlink" title="KEY序列化和Val序列化"></a>KEY序列化和Val序列化</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> &#x2F;**</span><br><span class="line">     * 实例化 RedisTemplate 对象</span><br><span class="line">     * @return</span><br><span class="line">     *&#x2F;</span><br><span class="line">    @Bean</span><br><span class="line">    public RedisTemplate&lt;String, Object&gt; functionDomainRedisTemplate(RedisConnectionFactory factory) &#123;</span><br><span class="line">        RedisTemplate&lt;String, Object&gt; redisTemplate &#x3D; new RedisTemplate&lt;&gt;();</span><br><span class="line">        StringRedisSerializer stringRedisSerializer &#x3D; new StringRedisSerializer();</span><br><span class="line">        &#x2F;&#x2F; key 都使用String 序列化方式</span><br><span class="line">        redisTemplate.setKeySerializer(stringRedisSerializer);</span><br><span class="line">        redisTemplate.setHashKeySerializer(stringRedisSerializer);</span><br><span class="line">        GenericJackson2JsonRedisSerializer genericJackson2JsonRedisSerializer &#x3D; new GenericJackson2JsonRedisSerializer();</span><br><span class="line">&#x2F;&#x2F;        Jackson2JsonRedisSerializer&lt;Object&gt; jackson2JsonRedisSerializer &#x3D; new Jackson2JsonRedisSerializer&lt;&gt;(Object.class);</span><br><span class="line">        redisTemplate.setHashValueSerializer(genericJackson2JsonRedisSerializer);</span><br><span class="line">        redisTemplate.setValueSerializer(genericJackson2JsonRedisSerializer);</span><br><span class="line">        redisTemplate.setConnectionFactory(factory);</span><br><span class="line">        return redisTemplate;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h2 id="GenericJackson2JsonRedisSerializer"><a href="#GenericJackson2JsonRedisSerializer" class="headerlink" title="GenericJackson2JsonRedisSerializer"></a>GenericJackson2JsonRedisSerializer</h2><p>GenericJackson2JsonRedisSerializer序列化时，会保存序列化的对象的完全限定名，从redis获取数据时即可直接反序列化成指定的对象</p>
<ol>
<li>结论：GenericJackson2JsonRedisSerializer 序列化方式 可直接存储VALUE为对象,且从Redis获取可进行强转</li>
<li>结论：GenericJackson2JsonRedisSerializer 序列化方式 可直接存储VALUE为JSON字符串形式,且从Redis获取后不可进行强转，需要将结果转为字符串，再将JSON字符串转为自己需要的对象或对象集合</li>
<li>结论: 使用GenericJackson2JsonRedisSerializer 序列化进行管道操作后，实体类@class属性会丢失，再次从redis获取数据将无法成功反序列化</li>
</ol>
<h2 id="Jackson2JsonRedisSerializer"><a href="#Jackson2JsonRedisSerializer" class="headerlink" title="Jackson2JsonRedisSerializer"></a>Jackson2JsonRedisSerializer</h2><ol>
<li>结论：Jackson2JsonRedisSerializer序列化方式，如VALUE直接存对象或者对象集合，获取时结果为LinkedHashMap,无法直接使用JDK强转方法转为对象或对象集合，需借助工具进行转换为实体与实体集合</li>
<li>结论:Jackson2JsonRedisSerializer序列化方式，VALUE存JSON字符串时，取值也为JSON字符串,需借助JSON工具进行转换为实体类或实体集合</li>
<li>结论：Jackson2JsonRedisSerializer 序列化方式，且使用管道操作后，获取的值也是一个linkedHashMap,需借助工具才可将值反序列化为实体对象或实体对象集合</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>redis</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>netsh命令实现端口转发的添加删除</title>
    <url>/2022/05/10/tool-windows-%E7%BD%91%E7%BB%9C-1-netsh%E5%91%BD%E4%BB%A4%E5%AE%9E%E7%8E%B0%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E7%9A%84%E6%B7%BB%E5%8A%A0%E5%88%A0%E9%99%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<pre><code>【windows10】netsh命令实现端口转发的添加删除以及查看: https://blog.csdn.net/jn10010537/article/details/122715645
</code></pre><hr>
<h1 id="netsh命令实现端口转发的添加删除"><a href="#netsh命令实现端口转发的添加删除" class="headerlink" title="netsh命令实现端口转发的添加删除"></a>netsh命令实现端口转发的添加删除</h1><p>netsh(Network Shell)是⼀个windows系统本⾝提供的功能强⼤的⽹络配置命令⾏⼯具  </p>
<ol>
<li>查看端口映射<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netsh interface portproxy show v4tov4</span><br></pre></td></tr></table></figure>
或<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netsh interface portproxy show all</span><br></pre></td></tr></table></figure></li>
<li>删除所有已经有的转发<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netsh interface portproxy reset</span><br></pre></td></tr></table></figure></li>
<li>将ip地址的对应的端口映射到宿主win10对应的端口<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># netsh interface portproxy add v4tov4 listenport&#x3D;[win10端口] listenaddress&#x3D;0.0.0.0 connectport&#x3D;[虚拟机的端口] connectaddress&#x3D;[虚拟机的ip]</span><br><span class="line">netsh interface portproxy add v4tov4 listenport&#x3D;8081 listenaddress&#x3D;0.0.0.0 connectport&#x3D;8081 connectaddress&#x3D;172.23.229.221</span><br></pre></td></tr></table></figure></li>
<li>删除转发<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netsh interface portproxy delete v4tov4 listenaddress&#x3D;0.0.0.0 listenport&#x3D;8081</span><br></pre></td></tr></table></figure></li>
<li>判断⼀个端⼝是否开启<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netstat -ano -p tcp | findstr &quot;7778&quot; &gt;nul 2&gt;nul &amp;&amp; echo 7778端⼝已开启 || echo 7778端⼝未开启</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>win</category>
        <category>net</category>
      </categories>
      <tags>
        <tag>win</tag>
      </tags>
  </entry>
  <entry>
    <title>yaml定义Pod详解</title>
    <url>/2022/05/09/depth-kubernetes-Deployment%E5%92%8CPod-0-Deployment%E5%92%8CPod%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Pod"><a href="#Pod" class="headerlink" title="Pod"></a>Pod</h1><ol>
<li>pod是最小的单元</li>
<li>Pod标示的是一个部署单元，可以理解为k8s中的应用程序的单个实例，可能由单个容器组成，也可能由少量紧密耦合并共享资源的容器组成</li>
</ol>
<h1 id="Pod相关"><a href="#Pod相关" class="headerlink" title="Pod相关"></a>Pod相关</h1><ol>
<li>多个容器在同一个Pod下，他们共用一个IP，所以端口不能重复</li>
<li>一个Pod下的多个容器可以使用localhost来访问对方的端口</li>
<li>因为Pod是最小的单元，如果在Pod中容器出现异常终止了，是不会重启；在实际中，不会直接使用Pod，而是使用Deployment部署自己的应用</li>
</ol>
<h1 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h1><ol>
<li>Deployment拥有更加灵活强大的升级、回滚功能,并且支持滚动更新</li>
<li>使用Deployment升级Pod只需要定义Pod的最终状态，k8s会为你执行必要的操作(RC要自己定义如何操作)</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>Deployment 实践-1</title>
    <url>/2022/05/09/depth-kubernetes-Deployment%E5%92%8CPod-1-Deployment-%E5%AE%9E%E8%B7%B5-1/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.psvmc.cn/article/2021-02-27-kubernetes-start-3-kind.html" target="_blank" rel="noopener">Deployment 实践</a></p>
<p>首先配置好 Deployment 的配置文件（这里用的是 nginx 镜像）</p>
<h1 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir &#x2F;home&#x2F;k8s</span><br><span class="line">cd &#x2F;home&#x2F;k8s</span><br><span class="line">vi app.yaml</span><br></pre></td></tr></table></figure>
<h2 id="app-yaml"><a href="#app-yaml" class="headerlink" title="[ app.yaml ]"></a>[ app.yaml ]</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apiVersion: apps&#x2F;v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: web</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: web</span><br><span class="line">  replicas: 1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: web</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: web</span><br><span class="line">        image: nginx</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br></pre></td></tr></table></figure>
<h1 id="通过-kubectl-命令创建服务"><a href="#通过-kubectl-命令创建服务" class="headerlink" title="通过 kubectl 命令创建服务"></a>通过 kubectl 命令创建服务</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kubectl create -f app.yaml</span><br></pre></td></tr></table></figure>
<h1 id="等待一会后，查看-Pod-调度、运行情况。"><a href="#等待一会后，查看-Pod-调度、运行情况。" class="headerlink" title="等待一会后，查看 Pod 调度、运行情况。"></a>等待一会后，查看 Pod 调度、运行情况。</h1><p>我看可以看到 Pod 的名字、运行状态、Pod 的 ip、还有所在Node的名字等信息<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root@LAPTOP-BKST47D9:&#x2F;home&#x2F;k8s# kubectl get Pods -o wide</span><br><span class="line">NAME                   READY   STATUS    RESTARTS   AGE   IP           NODE                       NOMINATED NODE   READINESS GATES</span><br><span class="line">web-76d9ff54d5-mddws   1&#x2F;1     Running   0          16m   10.244.0.5   wsl2-k8s-1-control-plane   &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>启动成功 READY 的状态会是1/1；刚开始是0/1，启动之后是1/1</p>
<h2 id="通过-kubectl-get-pod-也可以查看pod运行状态"><a href="#通过-kubectl-get-pod-也可以查看pod运行状态" class="headerlink" title="通过 kubectl get pod  也可以查看pod运行状态"></a>通过 kubectl get pod  也可以查看pod运行状态</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root@LAPTOP-BKST47D9:&#x2F;home&#x2F;k8s# kubectl get pod</span><br><span class="line">NAME                   READY   STATUS    RESTARTS   AGE</span><br><span class="line">web-76d9ff54d5-mddws   1&#x2F;1     Running   0          16m</span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id="如果不是，查看pod启动失败的原因"><a href="#如果不是，查看pod启动失败的原因" class="headerlink" title="如果不是，查看pod启动失败的原因"></a>如果不是，查看pod启动失败的原因</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kubectl describe pod web</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root@LAPTOP-BKST47D9:&#x2F;home&#x2F;k8s# kubectl describe pod web</span><br><span class="line">Name:           web-76d9ff54d5-mddws</span><br><span class="line">Namespace:      default</span><br><span class="line">Priority:       0</span><br><span class="line">Node:           wsl2-k8s-1-control-plane&#x2F;172.18.0.2</span><br><span class="line">Start Time:     Fri, 23 Jul 2021 10:05:42 +0800</span><br><span class="line">Labels:         app&#x3D;web</span><br><span class="line">                pod-template-hash&#x3D;76d9ff54d5</span><br><span class="line">Annotations:    &lt;none&gt;</span><br><span class="line">Status:         Pending</span><br><span class="line">IP:</span><br><span class="line">IPs:            &lt;none&gt;</span><br><span class="line">Controlled By:  ReplicaSet&#x2F;web-76d9ff54d5</span><br><span class="line">Containers:</span><br><span class="line">  web:</span><br><span class="line">    Container ID:</span><br><span class="line">    Image:          nginx</span><br><span class="line">    Image ID:</span><br><span class="line">    Port:           80&#x2F;TCP</span><br><span class="line">    Host Port:      0&#x2F;TCP</span><br><span class="line">    State:          Waiting</span><br><span class="line">      Reason:       ContainerCreating</span><br><span class="line">    Ready:          False</span><br><span class="line">    Restart Count:  0</span><br><span class="line">    Environment:    &lt;none&gt;</span><br><span class="line">    Mounts:</span><br><span class="line">      &#x2F;var&#x2F;run&#x2F;secrets&#x2F;kubernetes.io&#x2F;serviceaccount from kube-api-access-6z9fs (ro)</span><br><span class="line">Conditions:</span><br><span class="line">  Type              Status</span><br><span class="line">  Initialized       True</span><br><span class="line">  Ready             False</span><br><span class="line">  ContainersReady   False</span><br><span class="line">  PodScheduled      True</span><br><span class="line">Volumes:</span><br><span class="line">  kube-api-access-6z9fs:</span><br><span class="line">    Type:                    Projected (a volume that contains injected data from multiple sources)</span><br><span class="line">    TokenExpirationSeconds:  3607</span><br><span class="line">    ConfigMapName:           kube-root-ca.crt</span><br><span class="line">    ConfigMapOptional:       &lt;nil&gt;</span><br><span class="line">    DownwardAPI:             true</span><br><span class="line">QoS Class:                   BestEffort</span><br><span class="line">Node-Selectors:              &lt;none&gt;</span><br><span class="line">Tolerations:                 node.kubernetes.io&#x2F;not-ready:NoExecute op&#x3D;Exists for 300s</span><br><span class="line">                             node.kubernetes.io&#x2F;unreachable:NoExecute op&#x3D;Exists for 300s</span><br><span class="line">Events:</span><br><span class="line">  Type    Reason     Age   From               Message</span><br><span class="line">  ----    ------     ----  ----               -------</span><br><span class="line">  Normal  Scheduled  60s   default-scheduler  Successfully assigned default&#x2F;web-76d9ff54d5-mddws to wsl2-k8s-1-control-plane</span><br><span class="line">  Normal  Pulling    58s   kubelet            Pulling image &quot;nginx&quot;</span><br></pre></td></tr></table></figure>
<h1 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kubectl delete -f app.yaml</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>pod关闭</title>
    <url>/2022/05/09/depth-kubernetes-Deployment%E5%92%8CPod-2-pod%E5%85%B3%E9%97%AD/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>执行kubectl delete的时候也可以通过–grace-period参数显示指定一个优雅退出时间来覆盖Pod中的配置，如果我们配置的grace period超过时间之后，k8s就只能选择强制kill Pod</p>
<h1 id="关闭abcdocker-pod"><a href="#关闭abcdocker-pod" class="headerlink" title="关闭abcdocker pod"></a>关闭abcdocker pod</h1><p>kubectl delete pod abcdocker</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>0-1-kubectl使用简介</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-0-1-kubectl%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.cnblogs.com/51wansheng/p/10249182.html" target="_blank" rel="noopener">kubectl使用详解</a></p>
<h1 id="kubectl概述"><a href="#kubectl概述" class="headerlink" title="kubectl概述"></a>kubectl概述</h1><ul>
<li>kubectl是一个用于操作kubernetes集群的命令行接口，通过利用kubectl的各种命令可以实现各种功能。<br><img src=".0-1-kubectl使用简介/kubernetes集群图.png" alt=""></li>
</ul>
<h1 id="通过kubect命令工具创建容器"><a href="#通过kubect命令工具创建容器" class="headerlink" title="通过kubect命令工具创建容器"></a>通过kubect命令工具创建容器</h1><ul>
<li>在minion运行容器（nginx）<br>角色                    IP　　<br>master/etcd            192.168.10.5<br>node-1                192.168.10.8<br>node-2                192.168.10.9</li>
</ul>
<h1 id="kubectl命令"><a href="#kubectl命令" class="headerlink" title="kubectl命令"></a>kubectl命令</h1><h2 id="1-检查集群节点，及服务健康状态"><a href="#1-检查集群节点，及服务健康状态" class="headerlink" title="1. 检查集群节点，及服务健康状态"></a>1. 检查集群节点，及服务健康状态</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl get node</span><br><span class="line">NAME           STATUS    AGE</span><br><span class="line">192.168.10.8   Ready     22h</span><br><span class="line">192.168.10.9   Ready     21h</span><br><span class="line"></span><br><span class="line">[root@master ~]# kubectl get cs</span><br><span class="line">NAME                 STATUS    MESSAGE              ERROR</span><br><span class="line">scheduler            Healthy   ok                   </span><br><span class="line">controller-manager   Healthy   ok                   </span><br><span class="line">etcd-0               Healthy   &#123;&quot;health&quot;: &quot;true&quot;&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>在node-1和node-2节点服务器上下载docker镜像<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@node-1 ~]# docker pull docker.io&#x2F;nginx </span><br><span class="line">[root@node-1 ~]# docker pull docker.io&#x2F;tianyebj&#x2F;pod-infrastructure</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#这里需要打一个registry.access.redhat.com&#x2F;rhel7&#x2F;pod-infrastructure:latest 的tag</span><br><span class="line">[root@node-1 ~]# docker tag docker.io&#x2F;tianyebj&#x2F;pod-infrastructure registry.access.redhat.com&#x2F;rhel7&#x2F;pod-infrastructure:latest</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 这里首先会去检查本地目录镜像名称，如果没有会去拉去这个镜像，所以在本地把下载好的镜像指向这个名称[root@node-1 ~]# cat &#x2F;etc&#x2F;kubernetes&#x2F;kubelet |grep &quot;KUBELET_POD_INFRA_CONTAINER&quot;</span><br><span class="line">KUBELET_POD_INFRA_CONTAINER&#x3D;&quot;--pod-infra-container-image&#x3D;registry.access.redhat.com&#x2F;rhel7&#x2F;pod-infrastructure:latest&quot;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="使用kubectl-delete删除创建的对象"><a href="#使用kubectl-delete删除创建的对象" class="headerlink" title="使用kubectl delete删除创建的对象"></a>使用kubectl delete删除创建的对象</h2><ol>
<li>删除POD<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl get pods</span><br><span class="line">NAME                     READY     STATUS    RESTARTS   AGE</span><br><span class="line">nginx-2187705812-7btdb   1&#x2F;1       Running   0          1h</span><br><span class="line">[root@master ~]# kubectl delete pod nginx-2187705812-7btdb</span><br><span class="line">pod &quot;nginx-2187705812-7btdb&quot; deleted</span><br><span class="line">[root@master ~]# kubectl get pods</span><br><span class="line">NAME                     READY     STATUS              RESTARTS   AGE</span><br><span class="line">nginx-2187705812-qjp31   0&#x2F;1       ContainerCreating   0          3s</span><br><span class="line">[root@master ~]# kubectl describe pod nginx|grep Node</span><br><span class="line">Node:        192.168.10.9&#x2F;192.168.10.9</span><br></pre></td></tr></table></figure>
<blockquote>
<p>当我们使用delete删除pod时，可以看到kubectl又重新创建启动一个POD ，<br>而且我们通过describe指令看到pod已经运行在node-2服务器上了，这是正是replicas为1的作用，平台会一直保证有一个副本在运行</p>
</blockquote>
</li>
<li>删除deployment<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">直接删除pod触发了replicas的确保机制，所以需要我们直接删除deployment[root@master ~]# kubectl delete deployment nginx</span><br><span class="line">deployment &quot;nginx&quot; deleted</span><br><span class="line">[root@master ~]# kubectl get pods</span><br><span class="line">No resources found.</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>0-2-使用kubectl管理集群中deployment资源和service服务</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-0-2-%E4%BD%BF%E7%94%A8kubectl%E7%AE%A1%E7%90%86%E9%9B%86%E7%BE%A4%E4%B8%ADdeployment%E8%B5%84%E6%BA%90%E5%92%8Cservice%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="使用kubectl管理集群中deployment资源和service服务"><a href="#使用kubectl管理集群中deployment资源和service服务" class="headerlink" title="使用kubectl管理集群中deployment资源和service服务"></a>使用kubectl管理集群中deployment资源和service服务</h1><p>kubectl相关命令参数如下：<br>kubectl   edit 编辑服务器侧资源<br>kubectl   replace   使用文件名或者标准输入资源<br>kubectl   patch      部分更新资源相关信息<br>kubectl   apply      使用文件或者标准输入更改配置信息<br>kubectl   scale       重新设定Deployment/ReplicaSet/RC/Job的size<br>kubectl   autoscale       Deployment/ReplicaSet/RC的自动扩展设定<br>kubectl   cordon   设定node不可使用<br>kubectl   uncordon      设定node可以使用<br>kubectl   drain      设定node进入维护模式</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>0-2-使用yaml文件生成deployment</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-0-2-%E4%BD%BF%E7%94%A8yaml%E6%96%87%E4%BB%B6%E7%94%9F%E6%88%90deployment/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>kubectl 常用命令和参数说明：<br>命令              说明<br>kubectl run     运行一个pod<br>kubectl delete  删除一个POD<br>kubectl get     查看pod相关信息<br>kubectl create    创建deployment<br>kubectl logs               取得pod中容器的log信息<br>kubectl exec               在pod中执行一条命令<br>kubectl cp                  从容器拷出或向容器拷入文件<br>kubectl attach            Attach到一个运行中的容器上，实时查看容器消息</p>
<blockquote>
<p>使用kubectl run在设定很复杂的需求时，需要非常长的一条语句，也很容易出错，也没法保存。所以更多场景下会使用yaml或者json文件。</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>1-1-kubectl create</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-1-1-kubectl-create/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="通过pod-json文件创建一个pod。"><a href="#通过pod-json文件创建一个pod。" class="headerlink" title="通过pod.json文件创建一个pod。"></a>通过pod.json文件创建一个pod。</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kubectl create -f .&#x2F;pod.json</span><br></pre></td></tr></table></figure>
<h1 id="通过stdin的JSON创建一个pod。"><a href="#通过stdin的JSON创建一个pod。" class="headerlink" title="通过stdin的JSON创建一个pod。"></a>通过stdin的JSON创建一个pod。</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat pod.json | kubectl create -f -</span><br></pre></td></tr></table></figure>
<h1 id="API版本为v1的JSON格式的docker-registry-yaml文件创建资源。"><a href="#API版本为v1的JSON格式的docker-registry-yaml文件创建资源。" class="headerlink" title="API版本为v1的JSON格式的docker-registry.yaml文件创建资源。"></a>API版本为v1的JSON格式的docker-registry.yaml文件创建资源。</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kubectl create -f docker-registry.yaml --edit --output-version&#x3D;v1 -o json</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>0-3-kubectl使用命令总结</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-0-3-kubectl%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="kubectl使用命令总结"><a href="#kubectl使用命令总结" class="headerlink" title="kubectl使用命令总结"></a>kubectl使用命令总结</h1><h2 id="kubectl相关命令参数如下："><a href="#kubectl相关命令参数如下：" class="headerlink" title="kubectl相关命令参数如下："></a>kubectl相关命令参数如下：</h2><p>kubectl run 　　运行一个pod<br>kubectl delete 　　 删除一个POD<br>kubectl get　　 查看pod相关信息<br>kubectl create 　　 创建deployment<br>kubectl logs 　　 取得pod中容器的log信息<br>kubectl exec 　　 在pod中执行一条命令<br>kubectl cp 　　 从容器拷出或向容器拷入文件<br>kubectl attach 　　 Attach到一个运行中的容器上，实时查看容器消息<br>kubectl describe　　 获得resource集群相关的信息<br>kubectl edit 　　编辑服务器侧资源<br>kubectl replace　　 使用文件名或者标准输入资源<br>kubectl patch 　　 部分更新资源相关信息<br>kubectl apply 　　 使用文件或者标准输入更改配置信息<br>kubectl scale 　　 重新设定Deployment/ReplicaSet/RC/Job的size<br>kubectl autoscale 　　 Deployment/ReplicaSet/RC的自动扩展设定<br>kubectl cordon 　　 设定node不可使用<br>kubectl uncordon 　　 设定node可以使用<br>kubectl drain 　　 设定node进入维护模式<br>kucectl help 　　 查看帮助信息</p>
<h2 id="kubectl-get命令能够确认的信息类别："><a href="#kubectl-get命令能够确认的信息类别：" class="headerlink" title="kubectl get命令能够确认的信息类别："></a>kubectl get命令能够确认的信息类别：</h2><p>deployments (缩写 deploy)<br>events (缩写 ev)<br>namespaces (缩写 ns)<br>nodes (缩写 no)<br>pods (缩写 po)<br>replicasets (缩写 rs)<br>replicationcontrollers (缩写 rc)<br>services (缩写 svc)</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>1-2-kubectl create通过config配置创建集群</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-1-2-kubectl-create%E9%80%9A%E8%BF%87config%E9%85%8D%E7%BD%AE%E5%88%9B%E5%BB%BA%E9%9B%86%E7%BE%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="首先需要创建-kind-配置"><a href="#首先需要创建-kind-配置" class="headerlink" title="首先需要创建 kind 配置"></a>首先需要创建 kind 配置</h1><ul>
<li>可以对要创建的集群进行一些定制化配置<br><a href="https://kind.sigs.k8s.io/docs/user/configuration/" target="_blank" rel="noopener">kind支持的配置</a></li>
<li>参照文档，编写配置 kind 配置文件 config.yaml，然后在 kind 创建集群的时候指定配置文件：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kind create cluster --config&#x3D;&#x2F;foo&#x2F;bar&#x2F;config.yaml</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h1><p>默认 kind 创建出来的集群 apiserver 监听的地址是：127.0.0.1:[随机端口]，我要改成默认监听的地址是：0.0.0.0:6443，编写如下 config.yaml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kind: Cluster</span><br><span class="line">apiVersion: kind.x-k8s.io&#x2F;v1alpha4</span><br><span class="line">networking:</span><br><span class="line">  # WARNING: It is _strongly_ recommended that you keep this the default</span><br><span class="line">  # (127.0.0.1) for security reasons. However it is possible to change this.</span><br><span class="line">  apiServerAddress: &quot;0.0.0.0&quot;</span><br><span class="line">  # By default the API server listens on a random open port.</span><br><span class="line">  # You may choose a specific port but probably don&#39;t need to in most cases.</span><br><span class="line">  # Using a random port makes it easier to spin up multiple clusters.</span><br><span class="line">  apiServerPort: 6443</span><br></pre></td></tr></table></figure></p>
<ul>
<li>创建集群时指定上面配置文件：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kind create cluster --config&#x3D;config.yaml</span><br></pre></td></tr></table></figure>
</li>
</ul>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>10-kubctl replace</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-10-kubctl-replace/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.cnblogs.com/51wansheng/p/10249182.html" target="_blank" rel="noopener">参考</a></p>
<h1 id="kubctl-replace-用于替换，我们使用上个例子中的service的port，把它改为31003"><a href="#kubctl-replace-用于替换，我们使用上个例子中的service的port，把它改为31003" class="headerlink" title="kubctl replace 用于替换，我们使用上个例子中的service的port，把它改为31003"></a>kubctl replace 用于替换，我们使用上个例子中的service的port，把它改为31003</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl get service nginx -o yaml &gt; nginx_replace.yaml</span><br></pre></td></tr></table></figure>
<p>查看导出文件并修改：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# cat nginx_replace.yaml </span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: 2019-01-10T14:41:21Z</span><br><span class="line">  labels:</span><br><span class="line">    name: nginx</span><br><span class="line">  name: nginx</span><br><span class="line">  namespace: default</span><br><span class="line">  resourceVersion: &quot;118277&quot;</span><br><span class="line">  selfLink: &#x2F;api&#x2F;v1&#x2F;namespaces&#x2F;default&#x2F;services&#x2F;nginx</span><br><span class="line">  uid: cc4cf987-14e5-11e9-88ba-000c2953a750</span><br><span class="line">spec:</span><br><span class="line">  clusterIP: 10.254.49.161</span><br><span class="line">  ports:</span><br><span class="line">  - nodePort: 31003</span><br><span class="line">    port: 80</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 80</span><br><span class="line">  selector:</span><br><span class="line">    name: nginx</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  type: NodePort</span><br><span class="line">status:</span><br><span class="line">  loadBalancer: &#123;&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="我们把映射端口改为31003，然后保存退出；使用replace-命令"><a href="#我们把映射端口改为31003，然后保存退出；使用replace-命令" class="headerlink" title="我们把映射端口改为31003，然后保存退出；使用replace 命令"></a>我们把映射端口改为31003，然后保存退出；使用replace 命令</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl replace -f nginx_replace.yaml</span><br><span class="line">service &quot;nginx&quot; replaced</span><br><span class="line">[root@master ~]# kubectl get service</span><br><span class="line">NAME         CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">kubernetes   10.254.0.1      &lt;none&gt;        443&#x2F;TCP        1d</span><br><span class="line">nginx        10.254.49.161   &lt;nodes&gt;       80:31003&#x2F;TCP   2h</span><br></pre></td></tr></table></figure>
<h1 id="重建资源-，修改已创建-service-pod等等"><a href="#重建资源-，修改已创建-service-pod等等" class="headerlink" title="重建资源 ，修改已创建 service,pod等等"></a>重建资源 ，修改已创建 service,pod等等</h1><p>kubectl replace –force -f rocketmq-rc.yml<br>注意：这条命令，实际上它是一个组合命令，kubectl delete -f rocketmq-rc.yml和kubectl create -f rocketmq-rc.yml的组合</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>12-kubectl scale</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-12-kubectl-scale/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="kubectl-scale-用于横向扩展，是kubernetes或者swarm这类容器编辑平台的重要功能之一"><a href="#kubectl-scale-用于横向扩展，是kubernetes或者swarm这类容器编辑平台的重要功能之一" class="headerlink" title="kubectl scale   用于横向扩展，是kubernetes或者swarm这类容器编辑平台的重要功能之一"></a>kubectl scale   用于横向扩展，是kubernetes或者swarm这类容器编辑平台的重要功能之一</h1><p>实现环境： 之前已经设定nginx的replica副本为1<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl get pod -o wide</span><br><span class="line">NAME                     READY     STATUS    RESTARTS   AGE       IP            NODE</span><br><span class="line">mysql-3013141301-2000x   1&#x2F;1       Running   1          3h        10.255.18.2   192.168.10.8</span><br><span class="line">nginx-1011335894-4ngml   1&#x2F;1       Running   2          2h        10.255.94.2   192.168.10.9</span><br><span class="line">[root@master ~]# kubectl get deployment</span><br><span class="line">NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">mysql     1         1         1            1           3h</span><br><span class="line">nginx     1         1         1            1           2h</span><br></pre></td></tr></table></figure><br>执行scale命令，使用scale命令进行横向扩展，将原本为1的副本提高到3<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl scale --current-replicas&#x3D;1 --replicas&#x3D;3 deployment&#x2F;nginx</span><br><span class="line">deployment &quot;nginx&quot; scaled</span><br><span class="line">[root@master ~]# kubectl get deployment</span><br><span class="line">NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">mysql     1         1         1            1           3h</span><br><span class="line">nginx     3         3         3            3           2h</span><br></pre></td></tr></table></figure><br>我们可以看到nginx的副本分布，node-1 运行了一个nginx，node-2运行了两个nginx<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl get pod -o wide</span><br><span class="line">NAME                     READY     STATUS    RESTARTS   AGE       IP            NODE</span><br><span class="line">mysql-3013141301-2000x   1&#x2F;1       Running   1          3h        10.255.18.2   192.168.10.8</span><br><span class="line">nginx-1011335894-4ngml   1&#x2F;1       Running   2          2h        10.255.94.2   192.168.10.9</span><br><span class="line">nginx-1011335894-lhm28   1&#x2F;1       Running   0          52s       10.255.18.3   192.168.10.8</span><br><span class="line">nginx-1011335894-xtmbb   1&#x2F;1       Running   0          52s       10.255.94.3   192.168.10.9</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>13-kubectl autoscale</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-13-kubectl-autoscale/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="用于自动扩展确认，跟scale不同的是前者还是需要手动执行，而autoscale则会根据负载进行调解。而这条命令则可以对Deployment-ReplicaSet-RC进行设定，"><a href="#用于自动扩展确认，跟scale不同的是前者还是需要手动执行，而autoscale则会根据负载进行调解。而这条命令则可以对Deployment-ReplicaSet-RC进行设定，" class="headerlink" title="用于自动扩展确认，跟scale不同的是前者还是需要手动执行，而autoscale则会根据负载进行调解。而这条命令则可以对Deployment/ReplicaSet/RC进行设定，"></a>用于自动扩展确认，跟scale不同的是前者还是需要手动执行，而autoscale则会根据负载进行调解。而这条命令则可以对Deployment/ReplicaSet/RC进行设定，</h1><p>通过最小值和最大值的指定进行设定，这里只是给出执行的结果，不再进行实际的验证。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl autoscale deployment nginx --min&#x3D;2 --max&#x3D;5</span><br><span class="line">deployment &quot;nginx&quot; autoscaled</span><br></pre></td></tr></table></figure></p>
<p>当然使用还会有一些限制，比如当前3个，设定最小和最大值为2的，会报以一下错误:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl autoscale deployment nginx --min&#x3D;2 --max&#x3D;2</span><br><span class="line">Error from server (AlreadyExists): horizontalpodautoscalers.autoscaling &quot;nginx&quot; already exists</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>11-kuberctl patch</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-11-kuberctl-patch/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="kuberctl-patch-当修改一部分设定时，使用patch很方便。比如：给pod换个image镜像。"><a href="#kuberctl-patch-当修改一部分设定时，使用patch很方便。比如：给pod换个image镜像。" class="headerlink" title="kuberctl patch  当修改一部分设定时，使用patch很方便。比如：给pod换个image镜像。"></a>kuberctl patch  当修改一部分设定时，使用patch很方便。比如：给pod换个image镜像。</h1><p>给nginx容器替换一个支持php的docker镜像<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl patch pod nginx-1011335894-4ngml -p &#39;&#123;&quot;spec&quot;:&#123;&quot;containers&quot;:[&#123;&quot;name&quot;:&quot;nginx&quot;,&quot;image&quot;:&quot;docker.io&#x2F;richarvey&#x2F;nginx-php-fpm&quot;&#125;]&#125;&#125;&#39;</span><br><span class="line">&quot;nginx-1011335894-4ngml&quot; patched</span><br><span class="line"></span><br><span class="line">[root@master ~]# kubectl get service</span><br><span class="line">NAME         CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">kubernetes   10.254.0.1      &lt;none&gt;        443&#x2F;TCP        1d</span><br><span class="line">nginx        10.254.49.161   &lt;nodes&gt;       80:31003&#x2F;TCP   2h</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>14-kubectl cordon 与 kubectl  uncordon</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-14-kubectl-cordon-%E4%B8%8E-kubectl-uncordon/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="kubectl-cordon-与-kubectl-uncordon"><a href="#kubectl-cordon-与-kubectl-uncordon" class="headerlink" title="kubectl cordon 与 kubectl  uncordon"></a>kubectl cordon 与 kubectl  uncordon</h1><p>在实际维护的时候会出现某个node坏掉，或者做一些处理，暂时不能让生成的pod在此node上运行，需要通知kubernetes让其不要创建过来，<br>这条命令就是cordon，uncordon则是取消这个要求。<br>设定node2上不再运行新的pod实例，使用get node确认，其状态显示SchedulingDisabled<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl get nodes -o wide</span><br><span class="line">NAME           STATUS    AGE       EXTERNAL-IP</span><br><span class="line">192.168.10.8   Ready     1d        &lt;none&gt;</span><br><span class="line">192.168.10.9   Ready     1d        &lt;none&gt;</span><br><span class="line"></span><br><span class="line">[root@master ~]# kubectl cordon 192.168.10.9</span><br><span class="line">node &quot;192.168.10.9&quot; cordoned</span><br><span class="line"></span><br><span class="line">[root@master ~]# kubectl get nodes -o wide</span><br><span class="line">NAME           STATUS                     AGE       EXTERNAL-IP</span><br><span class="line">192.168.10.8   Ready                      1d        &lt;none&gt;</span><br><span class="line">192.168.10.9   Ready,SchedulingDisabled   1d        &lt;none&gt;</span><br></pre></td></tr></table></figure></p>
<p>执行scale命令，再次执行横向扩展命令，看是否会有pod漂到node2这台机器上，结果发现只有之前的一个pod，再没有新的pod漂过去。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl get nodes -o wide</span><br><span class="line">NAME           STATUS                     AGE       EXTERNAL-IP</span><br><span class="line">192.168.10.8   Ready                      1d        &lt;none&gt;</span><br><span class="line">192.168.10.9   Ready,SchedulingDisabled   1d        &lt;none&gt;</span><br><span class="line">[root@master ~]# kubectl scale --replicas&#x3D;6 deployment&#x2F;mysql</span><br><span class="line">deployment &quot;mysql&quot; scaledMySQL的6个副本全部运行在node-1</span><br><span class="line">[root@master ~]# kubectl get pod -o wide</span><br><span class="line">NAME                     READY     STATUS    RESTARTS   AGE       IP            NODE</span><br><span class="line">mysql-3013141301-2000x   1&#x2F;1       Running   1          4h        10.255.18.2   192.168.10.8</span><br><span class="line">mysql-3013141301-5679l   1&#x2F;1       Running   0          19s       10.255.18.8   192.168.10.8</span><br><span class="line">mysql-3013141301-9736f   1&#x2F;1       Running   0          19s       10.255.18.7   192.168.10.8</span><br><span class="line">mysql-3013141301-d0lgh   1&#x2F;1       Running   0          19s       10.255.18.4   192.168.10.8</span><br><span class="line">mysql-3013141301-kgtrz   1&#x2F;1       Running   0          19s       10.255.18.6   192.168.10.8</span><br><span class="line">mysql-3013141301-qst0p   1&#x2F;1       Running   0          19s       10.255.18.5   192.168.10.8</span><br><span class="line">nginx-1011335894-4ngml   1&#x2F;1       Running   2          3h        10.255.94.2   192.168.10.9</span><br><span class="line">nginx-1011335894-lhm28   1&#x2F;1       Running   0          28m       10.255.18.3   192.168.10.8</span><br><span class="line">nginx-1011335894-xtmbb   1&#x2F;1       Running   0          28m       10.255.94.3   192.168.10.9</span><br></pre></td></tr></table></figure></p>
<p>执行uncordon解除封锁命令<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl uncordon 192.168.10.9</span><br><span class="line">node &quot;192.168.10.9&quot; uncordoned</span><br></pre></td></tr></table></figure></p>
<p>使用uncordon命令解除对node2机器的限制，通过get node确认状态也已经正常。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl get nodes -o wide</span><br><span class="line">NAME           STATUS    AGE       EXTERNAL-IP</span><br><span class="line">192.168.10.8   Ready     1d        &lt;none&gt;</span><br><span class="line">192.168.10.9   Ready     1d        &lt;none&gt;</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>15-kubectl drain</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-15-kubectl-drain/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="kubectl-drain-用于对某个node结点进行维护"><a href="#kubectl-drain-用于对某个node结点进行维护" class="headerlink" title="kubectl drain 用于对某个node结点进行维护"></a>kubectl drain 用于对某个node结点进行维护</h1><p>　　drain两个作用：</p>
<p>　　　　1. 设定此node不可以使用（cordon)</p>
<p>　　　　2. evict驱逐pod到他正常的node节点上</p>
<h2 id="事前准备："><a href="#事前准备：" class="headerlink" title="事前准备："></a>事前准备：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl delete deployment nginx</span><br></pre></td></tr></table></figure>
<p>将nginx 的副本设定为4<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl create -f nginx-deployment.yaml </span><br><span class="line">deployment &quot;nginx&quot; created</span><br><span class="line">[root@master ~]# kubectl scale --replicas&#x3D;4 deployment  nginx</span><br><span class="line">deployment &quot;nginx&quot; scaled</span><br><span class="line">发现两边分别运行了两个[root@master ~]# kubectl get pod -o wide</span><br><span class="line">NAME                     READY     STATUS    RESTARTS   AGE       IP            NODE</span><br><span class="line">nginx-1011335894-5wlvs   1&#x2F;1       Running   0          9s        10.255.94.3   192.168.10.9</span><br><span class="line">nginx-1011335894-crl6j   1&#x2F;1       Running   0          9s        10.255.18.3   192.168.10.8</span><br><span class="line">nginx-1011335894-g7rs0   1&#x2F;1       Running   0          23s       10.255.18.2   192.168.10.8</span><br><span class="line">nginx-1011335894-wft9s   1&#x2F;1       Running   0          21s       10.255.94.2   192.168.10.9</span><br></pre></td></tr></table></figure></p>
<h2 id="执行drain命令，让node2不可用，并把node2上已经运行pod驱逐到其他node1上"><a href="#执行drain命令，让node2不可用，并把node2上已经运行pod驱逐到其他node1上" class="headerlink" title="执行drain命令，让node2不可用，并把node2上已经运行pod驱逐到其他node1上:"></a>执行drain命令，让node2不可用，并把node2上已经运行pod驱逐到其他node1上:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl drain 192.168.10.9</span><br><span class="line">node &quot;192.168.10.9&quot; cordoned</span><br><span class="line">pod &quot;nginx-1011335894-5wlvs&quot; evicted</span><br><span class="line">pod &quot;nginx-1011335894-wft9s&quot; evicted</span><br><span class="line">node &quot;192.168.10.9&quot; drained</span><br></pre></td></tr></table></figure>
<p>把node2上的pod删除后，k8s会根据replicas的机制，在清退pod和设定node时，在其他结点上生成新的pod。这时就可以对node2节点进行维护了，维护好后，重新uncordon即可。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl get node</span><br><span class="line">NAME           STATUS                     AGE</span><br><span class="line">192.168.10.8   Ready                      1d</span><br><span class="line">192.168.10.9   Ready,SchedulingDisabled   1d</span><br><span class="line">[root@master ~]# kubectl get pods -o wide</span><br><span class="line">NAME                     READY     STATUS    RESTARTS   AGE       IP            NODE</span><br><span class="line">nginx-1011335894-83vxq   1&#x2F;1       Running   0          5m        10.255.18.5   192.168.10.8</span><br><span class="line">nginx-1011335894-crl6j   1&#x2F;1       Running   0          8m        10.255.18.3   192.168.10.8</span><br><span class="line">nginx-1011335894-g7rs0   1&#x2F;1       Running   0          8m        10.255.18.2   192.168.10.8</span><br><span class="line">nginx-1011335894-swb88   1&#x2F;1       Running   0          5m        10.255.18.4   192.168.10.8</span><br></pre></td></tr></table></figure></p>
<p>等修改好后，现在恢复可用：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]#  kubectl uncordon 192.168.10.9</span><br></pre></td></tr></table></figure><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl get node -o wide</span><br><span class="line">NAME           STATUS    AGE       EXTERNAL-IP</span><br><span class="line">192.168.10.8   Ready     1d        &lt;none&gt;</span><br><span class="line">192.168.10.9   Ready     1d        &lt;none&gt;</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>16-kubectl expose</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-16-kubectl-expose/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="对外部暴露服务"><a href="#对外部暴露服务" class="headerlink" title="对外部暴露服务"></a>对外部暴露服务</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ kubectl expose deployment&#x2F;kubernetes-bootcamp --type&#x3D;&quot;NodePort&quot; --port 8080</span><br><span class="line">service &quot;kubernetes-bootcamp&quot; exposed</span><br><span class="line">$ kubectl get servicesNAME                  TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)     AGE</span><br><span class="line">kubernetes            ClusterIP   10.96.0.1       &lt;none&gt;        443&#x2F;TCP     2m</span><br><span class="line">kubernetes-bootcamp   NodePort    10.99.175.225   &lt;none&gt;        8080:32172&#x2F;TCP   5s</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>17-kubectl describe</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-17-kubectl-describe/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="查看服务详细信息"><a href="#查看服务详细信息" class="headerlink" title="查看服务详细信息"></a>查看服务详细信息</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ kubectl describe service&#x2F;kubernetes-bootcamp</span><br><span class="line">Name:                     kubernetes-bootcamp</span><br><span class="line">Namespace:                default</span><br><span class="line">Labels:                   run&#x3D;kubernetes-bootcamp</span><br><span class="line">Annotations:              &lt;none&gt;</span><br><span class="line">Selector:                 run&#x3D;kubernetes-bootcamp</span><br><span class="line">Type:                     NodePort</span><br><span class="line">IP:                       10.99.175.225</span><br><span class="line">Port:                     &lt;unset&gt;  8080&#x2F;TCP</span><br><span class="line">TargetPort:               8080&#x2F;TCP</span><br><span class="line">NodePort:                 &lt;unset&gt;  32172&#x2F;TCP</span><br><span class="line">Endpoints:                172.18.0.2:8080</span><br><span class="line">Session Affinity:         None</span><br><span class="line">External Traffic Policy:  Cluster</span><br><span class="line">Events:                   &lt;none&gt;</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>18-kubectl label</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-18-kubectl-label/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="新增标签"><a href="#新增标签" class="headerlink" title="新增标签"></a>新增标签</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ kubectl label pod $POD_NAME app&#x3D;v1</span><br><span class="line">pod &quot;kubernetes-bootcamp-5c69669756-hmc69&quot; labeled</span><br><span class="line">$ kubectl describe pods $POD_NAME</span><br><span class="line">Name:           kubernetes-bootcamp-5c69669756-hmc69</span><br><span class="line">Namespace:      default</span><br><span class="line">Node:           minikube&#x2F;172.17.0.11</span><br><span class="line">Start Time:     Tue, 17 Jul 2018 05:20:35 +0000</span><br><span class="line">Labels:         app&#x3D;v1</span><br><span class="line">                pod-template-hash&#x3D;1725225312</span><br><span class="line">                run&#x3D;kubernetes-bootcamp</span><br><span class="line">$ kubectl get pods -l app&#x3D;v1</span><br><span class="line">NAME                                   READY     STATUS    RESTARTS   AGE</span><br><span class="line">kubernetes-bootcamp-5c69669756-hmc69   1&#x2F;1       Running   0          11m</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>2-kubectl apply</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-2-kubectl-apply/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="kubectl-apply-用于使用文件或者标准输入来更改配置信息"><a href="#kubectl-apply-用于使用文件或者标准输入来更改配置信息" class="headerlink" title="kubectl apply 用于使用文件或者标准输入来更改配置信息"></a>kubectl apply 用于使用文件或者标准输入来更改配置信息</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# vim nginx-server.yaml </span><br><span class="line">把    nodePort: 31001</span><br><span class="line">改为    nodePort: 31004</span><br></pre></td></tr></table></figure>
<p>用apply命令加载修改的配置：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">可以见到端口修改的范围30000-32767[root@master ~]# kubectl apply -f nginx-server.yaml</span><br><span class="line">The Service &quot;nginx&quot; is invalid: spec.ports[0].nodePort: Invalid value: 8080: provided port is not in the valid range. The range of valid ports is 30000-32767</span><br><span class="line">[root@master ~]# vim nginx-server.yaml </span><br><span class="line">[root@master ~]# kubectl apply -f nginx-server.yaml</span><br><span class="line">service &quot;nginx&quot; configured</span><br><span class="line">[root@master ~]# kubectl get service</span><br><span class="line">NAME         CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">kubernetes   10.254.0.1      &lt;none&gt;        443&#x2F;TCP        1d</span><br><span class="line">nginx        10.254.49.161   &lt;nodes&gt;       80:31004&#x2F;TCP   2h</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>19-kubectl proxy</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-19-kubectl-proxy/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>使用kubectl proxy命令就可以使API server监听在本地的8001端口上：<br>$ kubectl proxy<br>Starting to serve on 127.0.0.1:8001</p>
<p>如果想通过其它主机访问就需要指定监听的地址：<br>$ kubectl proxy –address=0.0.0.0<br>Starting to serve on [::]:8001</p>
<p>此时通过curl访问会出现未认证的提示：<br>$ curl -X GET -L <a href="http://mini:8001/" target="_blank" rel="noopener">http://mini:8001/</a></p>
<h3>Unauthorized</h3>

<p>设置API server接收所有主机的请求：<br>$ kubectl proxy –address=’0.0.0.0’  –accept-hosts=’^*$’<br>Starting to serve on [::]:8001</p>
<p>访问正常：<br>$ curl -X GET -L <a href="http://mini:8001/" target="_blank" rel="noopener">http://mini:8001/</a><br>{<br>  “paths”: [<br>    “/api”,<br>    “/api/v1”,<br>    …<br>  ]<br>}</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>4-kubectl get</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-4-kubectl-get/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="查看指定的namespace下的pod、service等"><a href="#查看指定的namespace下的pod、service等" class="headerlink" title="查看指定的namespace下的pod、service等"></a>查看指定的namespace下的pod、service等</h1><p>kubectl get pod -n kubernetes-dashboard</p>
<h1 id="查看所有nodes"><a href="#查看所有nodes" class="headerlink" title="查看所有nodes"></a>查看所有nodes</h1><p>kubectl get nodes</p>
<h1 id="获取k8s集群所有资源示例"><a href="#获取k8s集群所有资源示例" class="headerlink" title="获取k8s集群所有资源示例"></a>获取k8s集群所有资源示例</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kubectl get pods --all-namespaces</span><br><span class="line">kubectl get pod --all-namespaces -o wide</span><br></pre></td></tr></table></figure>
<h1 id="获取pod扩展信息"><a href="#获取pod扩展信息" class="headerlink" title="获取pod扩展信息"></a>获取pod扩展信息</h1><p>kubectl get pod -o wide</p>
<p>#查看pod的yaml文件<br>kubectl get pod <pod-name> -n <ns-name> -o yaml</p>
<p>#查看pod的日志<br>kubectl logs <pod-name> -n <ns-name><br>kubectl logs -f <pod-name> -n <ns-name></p>
<h1 id="查看-endpoint-列表"><a href="#查看-endpoint-列表" class="headerlink" title="查看 endpoint 列表"></a>查看 endpoint 列表</h1><p>kubectl get endpoints</p>
<h1 id="编辑pod的yaml文件"><a href="#编辑pod的yaml文件" class="headerlink" title="编辑pod的yaml文件"></a>编辑pod的yaml文件</h1><p>kubectl get deployment -n <ns-name><br>kubectl edit depolyment <pod-name> -n <ns-name> -o yaml</p>
<h1 id="查看指定namespace-kubernetes-dashboard-的相关服务"><a href="#查看指定namespace-kubernetes-dashboard-的相关服务" class="headerlink" title="查看指定namespace(kubernetes-dashboard)的相关服务"></a>查看指定namespace(kubernetes-dashboard)的相关服务</h1><p>kubectl get service -n kubernetes-dashboard</p>
<h1 id="通过如下命令看到-Pod-的状态"><a href="#通过如下命令看到-Pod-的状态" class="headerlink" title="通过如下命令看到 Pod 的状态"></a>通过如下命令看到 Pod 的状态</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ kubectl get pod twocontainers -o&#x3D;jsonpath&#x3D;&#39;&#123;.status.phase&#125;&#39;</span><br><span class="line">Pending</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Pod 处于Pending状态，具体的值来自 Pod 对象的status.phase字段<br>注：我们这里使用了 kubectl 命令行 JSONPATH 模板能力，你可以将这条命令当作一个 tip，在日常工作中使用。</p>
</blockquote>
<h1 id="那么如果想知道-Pod-内所有的容器是否都在运行中呢？"><a href="#那么如果想知道-Pod-内所有的容器是否都在运行中呢？" class="headerlink" title="那么如果想知道 Pod 内所有的容器是否都在运行中呢？"></a>那么如果想知道 Pod 内所有的容器是否都在运行中呢？</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ kubectl get pod twocontainers</span><br><span class="line">NAME                READY         STATUS        RESTARTS       AGE</span><br><span class="line">twocontainers       2&#x2F;2           Running       0              2m</span><br></pre></td></tr></table></figure>
<blockquote>
<p>在这里，我们看到2/2。前一个 2 表示目前正在运行的容器数量，后一个 2 表示定义的容器数量。<br>当这两个数值相等的时候，就可以标识着 Pod 内所有容器均正常运行。</p>
</blockquote>
<h1 id="检查集群状态"><a href="#检查集群状态" class="headerlink" title="检查集群状态"></a>检查集群状态</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kubectl get secrets</span><br><span class="line">kubectl get pvc</span><br><span class="line">kubectl get pods</span><br><span class="line">kubectl get services wordpress</span><br></pre></td></tr></table></figure>
<h1 id="通过标签查询Pod和Service"><a href="#通过标签查询Pod和Service" class="headerlink" title="通过标签查询Pod和Service"></a>通过标签查询Pod和Service</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ kubectl get pods -l run&#x3D;kubernetes-bootcamp</span><br><span class="line">NAME                                   READY     STATUS    RESTARTS   AGE</span><br><span class="line">kubernetes-bootcamp-5c69669756-hmc69   1&#x2F;1       Running   0          8m</span><br><span class="line">$ kubectl get services -l &#x3D; run&#x3D;kubernetes-bootcamp</span><br><span class="line">error: name cannot be provided when a selector is specified</span><br><span class="line">$ kubectl get services -l run&#x3D;kubernetes-bootcamp</span><br><span class="line">NAME                  TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">kubernetes-bootcamp   NodePort   10.99.175.225   &lt;none&gt;        8080:32172&#x2F;TCP   6m</span><br></pre></td></tr></table></figure>
<h1 id="获取所有pod运行信息"><a href="#获取所有pod运行信息" class="headerlink" title="获取所有pod运行信息"></a>获取所有pod运行信息</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kubectl get po --show-all</span><br></pre></td></tr></table></figure>
<h1 id="YAML格式查看某个pod模板信息"><a href="#YAML格式查看某个pod模板信息" class="headerlink" title="YAML格式查看某个pod模板信息"></a>YAML格式查看某个pod模板信息</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kubectl get po&#x2F;hello-node-01-1679541190-176f8 -o yaml</span><br></pre></td></tr></table></figure>
<blockquote>
<p>kubectl get 可以制定特定namespace下的pod: -n namespace</p>
<h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">hostIP: 192.168.99.100</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h3 id="登录pod运行的主机"><a href="#登录pod运行的主机" class="headerlink" title="登录pod运行的主机"></a>登录pod运行的主机</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh root@192.168.99.100</span><br></pre></td></tr></table></figure>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>3-kubectl delete</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-3-kubectl-delete/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="通过pod名称abcdocker删除-pod"><a href="#通过pod名称abcdocker删除-pod" class="headerlink" title="通过pod名称abcdocker删除 pod"></a>通过pod名称abcdocker删除 pod</h1><p>kubectl delete pod abcdocker</p>
<h1 id="通过yaml删除pod"><a href="#通过yaml删除pod" class="headerlink" title="通过yaml删除pod"></a>通过yaml删除pod</h1><p>kubectl delete -f myapp-pod.yaml</p>
<h1 id="删除服务"><a href="#删除服务" class="headerlink" title="删除服务"></a>删除服务</h1><pre><code class="textmate">$ kubectl get services
NAME                  TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)     AGE
kubernetes            ClusterIP   10.96.0.1       &lt;none&gt;        443/TCP     12m
kubernetes-bootcamp   NodePort    10.99.175.225   &lt;none&gt;        8080:32172/TCP   10m
$ kubectl delete service -l run=kubernetes-bootcamp
service &quot;kubernetes-bootcamp&quot; deleted
$ kubectl get services
NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
kubernetes   ClusterIP   10.96.0.1    &lt;none&gt;        443/TCP   12m
</code></pre>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>5-kubectl exec</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-5-kubectl-exec/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="通过bash获得-pod-中某个容器的TTY，相当于登录容器"><a href="#通过bash获得-pod-中某个容器的TTY，相当于登录容器" class="headerlink" title="通过bash获得 pod 中某个容器的TTY，相当于登录容器"></a>通过bash获得 pod 中某个容器的TTY，相当于登录容器</h1><p>kubectl exec -it <pod-name> -n <ns-name> bash</p>
<h1 id="kubectl-exec-在pod中执行一条命令"><a href="#kubectl-exec-在pod中执行一条命令" class="headerlink" title="kubectl exec 在pod中执行一条命令"></a>kubectl exec 在pod中执行一条命令</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl exec -it mysql-3013141301-2000x ls &#x2F;</span><br><span class="line">bin                etc             lib64          proc    sys</span><br><span class="line">boot                healthcheck.cnf  media          root    tmp</span><br><span class="line">dev                healthcheck.sh   mnt          run    usr</span><br><span class="line">docker-entrypoint-initdb.d  home         mysql-init-complete  sbin    var</span><br><span class="line">entrypoint.sh            lib             opt          srv#进入容器环境</span><br><span class="line">[root@master ~]# kubectl exec -it mysql-3013141301-2000x &#x2F;bin&#x2F;bash</span><br><span class="line">bash-4.2# ls  </span><br><span class="line">bin   dev              entrypoint.sh  healthcheck.cnf  home    lib64  mnt            opt   root    sbin  sys  usr</span><br><span class="line">boot  docker-entrypoint-initdb.d  etc         healthcheck.sh   lib    media  mysql-init-complete  proc  run    srv   tmp  var</span><br></pre></td></tr></table></figure>
<h1 id="进入指定Pod"><a href="#进入指定Pod" class="headerlink" title="进入指定Pod"></a>进入指定Pod</h1><p>kubectl exec -it kubernetes-dashboard-8c9c48775-d6vgn – sh</p>
<h1 id="进入指定Pod中的指定容器"><a href="#进入指定Pod中的指定容器" class="headerlink" title="进入指定Pod中的指定容器"></a>进入指定Pod中的指定容器</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ kubectl exec twocontainers -c shell -i -t -- bash</span><br><span class="line">[root@twocontainers &#x2F;]# curl -s localhost:9876&#x2F;info</span><br><span class="line">&#123;&quot;host&quot;: &quot;localhost:9876&quot;, &quot;version&quot;: &quot;0.5.0&quot;, &quot;from&quot;: &quot;127.0.0.1&quot;&#125;</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>6-kubectl logs</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-6-kubectl-logs/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="kubectl-logs-查看pod中容器日志信息："><a href="#kubectl-logs-查看pod中容器日志信息：" class="headerlink" title="kubectl logs 查看pod中容器日志信息："></a>kubectl logs 查看pod中容器日志信息：</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl get pods</span><br><span class="line">NAME                     READY     STATUS    RESTARTS   AGE</span><br><span class="line">mysql-3013141301-2000x   1&#x2F;1       Running   0          19m</span><br><span class="line">[root@master ~]# kubectl logs mysql-3013141301-2000x</span><br><span class="line">[Entrypoint] MySQL Docker Image 8.0.13-1.1.8</span><br><span class="line">[Entrypoint] Initializing database</span><br><span class="line">2019-01-10T13:32:27.838555Z 0 [System] [MY-013169] [Server] &#x2F;usr&#x2F;sbin&#x2F;mysqld (mysqld 8.0.13) initializing of server in progress as process 20</span><br><span class="line">2019-01-10T13:32:32.491456Z 5 [Warning] [MY-010453] [Server] root@localhost is created with an empty password ! Please consider switching off the --initialize-insecure option.</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>8-kubectl attath</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-8-kubectl-attath/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="kubectl-attath-用于动态查看pod中容器日志信息"><a href="#kubectl-attath-用于动态查看pod中容器日志信息" class="headerlink" title="kubectl attath 用于动态查看pod中容器日志信息"></a>kubectl attath 用于动态查看pod中容器日志信息</h1><p>[root@master ~]# kubectl attach mysql-3013141301-2000x</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>9-kubectl edit</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-9-kubectl-edit/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="kubectl-edit-用于编辑服务器上的资源"><a href="#kubectl-edit-用于编辑服务器上的资源" class="headerlink" title="kubectl edit 用于编辑服务器上的资源"></a>kubectl edit 用于编辑服务器上的资源</h1><p>例1：查看service值。  -o参数指定输出的消息为yaml类型<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl get service nginx -o yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: 2019-01-10T14:41:21Z</span><br><span class="line">  labels:</span><br><span class="line">    name: nginx</span><br><span class="line">  name: nginx</span><br><span class="line">  namespace: default</span><br><span class="line">  resourceVersion: &quot;116573&quot;</span><br><span class="line">  selfLink: &#x2F;api&#x2F;v1&#x2F;namespaces&#x2F;default&#x2F;services&#x2F;nginx</span><br><span class="line">  uid: cc4cf987-14e5-11e9-88ba-000c2953a750</span><br><span class="line">spec:</span><br><span class="line">  clusterIP: 10.254.49.161</span><br><span class="line">  ports:</span><br><span class="line">  - nodePort: 31001</span><br><span class="line">    port: 80</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 80</span><br><span class="line">  selector:</span><br><span class="line">    name: nginx</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  type: NodePort</span><br><span class="line">status:</span><br><span class="line">  loadBalancer: &#123;&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">类似vim 打开服务配置文件进项修改，然后保存[root@master ~]# kubectl edit service nginx</span><br><span class="line">service &quot;nginx&quot; edited</span><br><span class="line">　　　　改：19   - nodePort: 31001</span><br><span class="line">　　　　为：19   - nodePort: 31002</span><br></pre></td></tr></table></figure>
<p>查看POD端口映射信息已经改变<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl get service</span><br><span class="line">NAME         CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">kubernetes   10.254.0.1      &lt;none&gt;        443&#x2F;TCP        1d</span><br><span class="line">nginx        10.254.49.161   &lt;nodes&gt;       80:31002&#x2F;TCP   23m</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>注：edit编辑的是运行环境的设定而不需要停止服务。</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>7-kubectl cp</title>
    <url>/2022/05/09/depth-kubernetes-k8s-kubectl%E5%91%BD%E4%BB%A4-7-kubectl-cp/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="kubectl-cp-用于从容器与物理机文件的拷贝"><a href="#kubectl-cp-用于从容器与物理机文件的拷贝" class="headerlink" title="kubectl cp   用于从容器与物理机文件的拷贝"></a>kubectl cp   用于从容器与物理机文件的拷贝</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#容器需要安装tar二进制文件方能执行kuberctl cp[root@master ~]# kubectl cp --help</span><br><span class="line">Copy files and directories to and from containers.</span><br><span class="line"></span><br><span class="line">Examples:  # !!!Important Note!!!</span><br><span class="line">  # Requires that the &#39;tar&#39; binary is present in your container</span><br><span class="line">  # image.  If &#39;tar&#39; is not present, &#39;kubectl cp&#39; will fail.</span><br><span class="line">  语法：</span><br><span class="line">  # Copy &#x2F;tmp&#x2F;foo_dir local directory to &#x2F;tmp&#x2F;bar_dir in a remote pod in the default namespace</span><br><span class="line">  kubectl cp &#x2F;tmp&#x2F;foo_dir &lt;some-pod&gt;:&#x2F;tmp&#x2F;bar_dir</span><br><span class="line">  </span><br><span class="line">  # Copy &#x2F;tmp&#x2F;foo local file to &#x2F;tmp&#x2F;bar in a remote pod in a specific container</span><br><span class="line">  kubectl cp &#x2F;tmp&#x2F;foo &lt;some-pod&gt;:&#x2F;tmp&#x2F;bar -c &lt;specific-container&gt;</span><br></pre></td></tr></table></figure>
<h1 id="在容器里安装tar命令："><a href="#在容器里安装tar命令：" class="headerlink" title="在容器里安装tar命令："></a>在容器里安装tar命令：</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl exec -it mysql-3013141301-2000x &#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">bash-4.2# yum -y install tar</span><br></pre></td></tr></table></figure>
<h1 id="从容器拷贝文件到物理机"><a href="#从容器拷贝文件到物理机" class="headerlink" title="从容器拷贝文件到物理机"></a>从容器拷贝文件到物理机</h1><p>[root@master ~]#  kubectl cp mysql-3013141301-2000x:/etc/hosts ./hosts</p>
<h1 id="从物理机拷贝文件到容器"><a href="#从物理机拷贝文件到容器" class="headerlink" title="从物理机拷贝文件到容器"></a>从物理机拷贝文件到容器</h1><p>[root@master ~]#  kubectl cp hosts mysql-3013141301-2000x:/tmp/hosts</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>order</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>pod配置详解-1</title>
    <url>/2022/05/09/depth-kubernetes-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3-pod%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3-1/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="pod配置-1"><a href="#pod配置-1" class="headerlink" title="pod配置-1"></a>pod配置-1</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apiVersion : vl # 必选：版本号，例如v1</span><br><span class="line">kind: Pod # 必选：pod</span><br><span class="line">metadata : # 必选：元数据</span><br><span class="line">  name : string # # 资源的名字，在同一个namespace中必须唯一</span><br><span class="line">  namespace: string  # 必选：pod的名称，命名规范需要符合RFC 1035规范</span><br><span class="line">  labels:  # 非必选：自定义标签列表</span><br><span class="line">    - name: string </span><br><span class="line"> annotations:  # 非必选：自定义注解列表</span><br><span class="line">   - name: string</span><br><span class="line">spec:  # 必选：pod中容器的详细定义</span><br><span class="line">  containers :  # 必选：Pod中的容器列表</span><br><span class="line">    - name : string # 必选：容器的名称，需符合RFC 1035规范</span><br><span class="line">      image : string # 必选：容器的镜像名称</span><br><span class="line">      imagePullPolicy:[Always I Never I IfNotPresent]  # 非必选：获取镜像的策略，可选值包括： Always（Always 表示每次都尝试重新下载镜像），Never（Never 表示仅使用本地镜像），IfNotPresent（IfNotPresent 表示如果本地有该镜像，则使用本地安卓的镜像，本地不存在时下载镜像） ，默认值为 Always</span><br><span class="line">      command : [string]  # 非必选：容器的启动命令，如果不指定，则使用镜像打包时使用的启动命令</span><br><span class="line">      args: [string]  # 非必选：容器的启动命令参数列表</span><br><span class="line">      workingDir: string # 非必选：容器的工作目录</span><br><span class="line">      volumeMounts:  # 非必选：挂载到容梅内部的存储卷配置</span><br><span class="line">       - name: string  # 非必选：引用 Pod 定义的共享存储卷的名称，需使用volumes[]部分定义的共享存储卷名称</span><br><span class="line">         mountPath: string  # 非必选：存储卷在容器内 Mount 绝对路径，应少于 12个字符</span><br><span class="line">         readOnly: boolean # 非必选：是否为只读模式，默认值为读写模式</span><br><span class="line">      ports: # 非必选：容器需要暴露的端口号列表</span><br><span class="line">      - name: string # 非必选：端口名称</span><br><span class="line">         containerPort: int # 非必选：容器挥自要监听的端口号</span><br><span class="line">         hostPort : int # 非必选：容器所在主机需要监听的端口号，默认与containerPort 相同。设置 hostPort 时，同台宿主机将无法启动该容器的第2份副本</span><br><span class="line">         hostIP: &quot;192.168.1.101&quot;  # 未校验是否存在 hostIP， 要将外部端口绑定到的主机IP（一般省略）</span><br><span class="line">         protocol : string # 非必选：端口协议，支持 TCP&#x2F;UDP ，默认值为 TCP</span><br><span class="line">      env: # 非必选：容器运行前需设置的环境变量列表</span><br><span class="line">       - name: string # 非必选：环境变盘的名称</span><br><span class="line">         value : string # 非必选：环填变量的值</span><br><span class="line">      resources : # 非必选：资源限制和资源请求的设置</span><br><span class="line">       limits: # 非必选：资源限制的设置</span><br><span class="line">        cpu : string # 非必选：CPU 限制，单位为 core 数，将用 docker run --cpu- shares 参数</span><br><span class="line">        memory : string # 非必选：内存限制，单位可以为 MiB&#x2F;GiB 等，将用于 docker run --memory 参数</span><br><span class="line">       requests : # 非必选：资源限制的设置</span><br><span class="line">        cpu: string # 非必选：CPU 请求，单位为 core 数， 容器启动的初始可用数量</span><br><span class="line">        memory : string # 非必选：内存请求，单位可以为 MiB&#x2F;GiB 等，容器启动的初始可用数量</span><br><span class="line">  restartPolicy: [Always I Never I OnFailure] # 非必选：Pod 的重启策略，可选值为 Always（Always: Pod 一旦终止运行，则无论容器是如何终止的， kubelet 都将将启它．），OnFailure（OnFailure ：只有 Pod 以非零退出码终止时， kubelet才会重启该容器．如果容器正常结束（退出码为0），Never（Never: Pod 终止后， kubelet将退出码报告给Master，不会再重启该Pod），则 kubelet 将不会重启它。）,默认值为Always.</span><br><span class="line">  nodeSelector: object # 非必选：设置 NodeSelector 表示将该 Pod 调度到包含这些label的Node 上，以 key:value 格式指定</span><br><span class="line">  imagePullSecrets : </span><br><span class="line">   - name: string # 非必选：Pull 镜像时使用的 secret 名称，以 name :sec retkkey格式指定 </span><br><span class="line">  hostNetwork : false # Boolean：非必选：是否使用主机网络模式，默认值为false ，如果设置为true ，则表示容器使用宿主机网络，不再使用Docker 网桥，该 Pod 将无法在同一台宿主机上启动第2个副本</span><br><span class="line">livenessProbe: </span><br><span class="line">  exec: </span><br><span class="line">    command: [string] </span><br><span class="line">  httpGet: </span><br><span class="line">    path: string </span><br><span class="line">    port umber</span><br><span class="line">    host: string </span><br><span class="line">    scheme: string </span><br><span class="line">  httpHeaders: </span><br><span class="line">  - name: string </span><br><span class="line">    value: string </span><br><span class="line">  tcpSocket: </span><br><span class="line">    port : number </span><br><span class="line">  initialDelaySeconds : 0 </span><br><span class="line">  timeoutSeconds: 0 </span><br><span class="line">  periodSeconds: 0 </span><br><span class="line">  successThreshold: 0</span><br><span class="line">  failureThreshold : 0 </span><br><span class="line">securityContext : </span><br><span class="line">  privileged: false </span><br><span class="line">volumes: </span><br><span class="line">  - name : string </span><br><span class="line">    emptyDir : &#123;&#125; </span><br><span class="line">    hostPath : </span><br><span class="line">      path : string </span><br><span class="line">  secret : </span><br><span class="line">    secretName : string </span><br><span class="line">    items: </span><br><span class="line">    - key : string </span><br><span class="line">      path: string </span><br><span class="line">  configMap: </span><br><span class="line">    name: string </span><br><span class="line">    items : </span><br><span class="line">    - key : string </span><br><span class="line">      path: string</span><br></pre></td></tr></table></figure>
<h1 id="pod其他配置解释"><a href="#pod其他配置解释" class="headerlink" title="pod其他配置解释"></a>pod其他配置解释</h1><h2 id="volumes"><a href="#volumes" class="headerlink" title="volumes"></a>volumes</h2><ul>
<li>spec.volumes[]：List：非必选：在该 Pod 上定义的共享存储卷列表</li>
<li>spec.volumes[].name：String：非必选：共享存储卷的名称，在 Pod 中每个存储卷定义一个名称，应符合RFC 1035 规范。容器定义部分的 containers[].volumeMounts[].name 将引用该共享存储卷的名称。Volume 类型包括 emptyDir、 hostPathgce、PersistentDisk、awsElasticBlockStore、gitRepo、secret 、nfs 、iscsi 、glusterfs 、persistentVolumeClaim、rbd、flexVolume、cinder、cephfs、flecker 、downwardAPI、fc、azureFile、configMap、vsphereVolume，可以 定义多个 volume ，每个volume name 保持唯一 。</li>
<li>spec.volumes[].emptyDir：Object：非必选：类型为 emptyDir 的存储卷， 表示与 Pod 生命周期一个临时目录，其值为 个空对象： emptyDir: {}</li>
<li>spec. volumes[] .hostPath：Object：非必选：类型为 hostPath 的存储卷，表示挂载 Pod 所在宿主机的目录，通过 volumes[]. hostPath.path 指定</li>
<li>spec.volumes[].hostPath.path：String：非必选：Pod 在主机的目录，将被用于容器中 mount的目录</li>
<li>spec.volumes[].secret：Object：非必选：类型为 secret 的存储，表示挂载集群预定义的secret 对象到容器内部</li>
<li>spec.volumes[].configMap：Object：非必选：类型为 configMap 的存储卷， 表示挂载集群预定义的 configMap 对象到容器内部</li>
<li>spec.volumes[].livenessProbe：Object：非必选：对Pod 内各容器健康检查的设置，当探测无响应几次之后，系统将自动启动该容器。可以设置的方法包括： exec httpGet tcpSocket。对一个容器仅需设置一种健康检查方法</li>
<li>spec.volumes[].livenessProbe.exec：Object：非必选：对Pod 内各容器健康检查的设置， exec 方式</li>
<li>spec .volumes[].livenessProbe.exec.command[]：String：非必选：exec 方式需要指定的命令或者脚本</li>
<li>spec.volumes[].livenessProbe.httpGet：Object：非必选：对Pod 内各容器健康检查的设置， HTTPGet 方式．需指定 path、 port</li>
<li>spec.volumes[].livenessProbe.tcpSocket：Object：非必选：对Pod 各容器健康检查的设置， tcpSocket 方式</li>
<li>spec.volumes[].livenssProbe.initialDelaySeconds：Numeber：非必选：容器启动完成后进行首次探测的时间，单位为s</li>
<li>spec.volumes[].livenessProbe.timeoutSeconds：Numeber：非必选：对容器健康检查的探测等待响应的超时时间设置，单位为 s，默认值为1 s. 超过该超时时间设置，将认为该容器不健康，将重启该容器</li>
<li>spec.volumes[].livenessProbe.periodSeconds：Numeber：非必选：对容器健康检查的定期探测时间设置，单位为 s,默认为10s探测一次</li>
</ul>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>pod配置详解-2</title>
    <url>/2022/05/09/depth-kubernetes-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3-pod%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3-2/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="pod配置-2"><a href="#pod配置-2" class="headerlink" title="pod配置-2"></a>pod配置-2</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apiVersion: v1  # 版本号</span><br><span class="line">kind: Pod  # 资源类型</span><br><span class="line">metadata: </span><br><span class="line">  name: pod-name</span><br><span class="line">  namespace: dev</span><br><span class="line">spec: </span><br><span class="line">  containers: </span><br><span class="line">    - image: nginx:1.17.1</span><br><span class="line">      name: nginx-container</span><br><span class="line">      imagePullPolicy: Always</span><br><span class="line">      command: [&quot;&#x2F;bin&#x2F;sh&quot;,&quot;-c&quot;,&quot;while true;do echo hello;sleep 1;done&quot;]</span><br><span class="line">      args: [&quot;&quot;,&quot;&quot;]</span><br><span class="line">      ports: </span><br><span class="line">      - name: &quot;port-name&quot;</span><br><span class="line">        containerPort: 8080</span><br><span class="line">        hostPort: 80</span><br><span class="line">        hostIP: &quot;192.168.1.101&quot;</span><br><span class="line">        protocol: TCP</span><br><span class="line">      env: </span><br><span class="line">      - name: &quot;key-1&quot;</span><br><span class="line">        value: &quot;value-1&quot;</span><br><span class="line">      - name: &quot;key-2&quot;</span><br><span class="line">        value: &quot;value-2&quot;</span><br><span class="line">      ports: </span><br><span class="line">      - name: nginx-port</span><br><span class="line">        containerPort: 80</span><br><span class="line">        protocol: TCP</span><br><span class="line">      resources: </span><br><span class="line">        limits: </span><br><span class="line">          cpu: &quot;2&quot;</span><br><span class="line">          memory: &quot;10Gi&quot;</span><br><span class="line">        requests: </span><br><span class="line">          cpu: &quot;1&quot;</span><br><span class="line">          memory: &quot;10Mi&quot;</span><br><span class="line">  initContainers:</span><br><span class="line">  - name: init-mysql</span><br><span class="line">    image: busybox:1.3.0</span><br><span class="line">    command: [&quot;&#x2F;bin&#x2F;sh&quot;,&quot;-c&quot;,&quot;while true;do echo hello;sleep 1;done&quot;]</span><br></pre></td></tr></table></figure>
<h1 id="解释描述"><a href="#解释描述" class="headerlink" title="解释描述"></a>解释描述</h1><h2 id="kind"><a href="#kind" class="headerlink" title="kind"></a>kind</h2><p>资源类型，一种有以下几种类型</p>
<ul>
<li>pod</li>
<li>namespace ：命名空间</li>
<li>deployment：pod控制器</li>
<li>service ：网络访问</li>
</ul>
<h2 id="spec"><a href="#spec" class="headerlink" title="spec"></a>spec</h2><h3 id="spec-containers-image"><a href="#spec-containers-image" class="headerlink" title="spec.containers.image"></a>spec.containers.image</h3><p>指定容器镜像，包含镜像名称:版本号</p>
<h3 id="spec-containers-command-和-spec-containers-args"><a href="#spec-containers-command-和-spec-containers-args" class="headerlink" title="spec.containers.command 和 spec.containers.args"></a>spec.containers.command 和 spec.containers.args</h3><p>启动命令，在启动容器时会执行command的命令，也可以配合args一起使用<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">command: [&quot;&#x2F;bin&#x2F;sh&quot;,&quot;-c&quot;,&quot;while true;do echo hello;sleep 1;done&quot;]     </span><br><span class="line">                                                                      </span><br><span class="line"># 也可以这样                                                               </span><br><span class="line">command: [&quot;&#x2F;bin&#x2F;sh&quot;]                                                  </span><br><span class="line">args: [&quot;-c&quot;,&quot;while true;do echo hello;sleep 1;done&quot;]</span><br></pre></td></tr></table></figure></p>
<h4 id="特别说明"><a href="#特别说明" class="headerlink" title="特别说明"></a>特别说明</h4><p>要知道，linux的指令是分为命令 和参数的，比如ls -l，ls 是命令，-l是参数，command是命令，args是参数，k8s的command和args其实是为了覆盖Fockerfile的ENTERPOINT功能</p>
<ul>
<li>如果command和args都没写，使用Dockerfile配置</li>
<li>如果command写了， 那么Dockerfile的默认ENTRYPOINT配置会被忽略，执行command</li>
<li>如果command没写，args写了， 那么Dockerfile的默认ENTRYPOINT配置会执行，使用k8s的args参数</li>
<li>如果command和args都写了， 那么Dockerfile的默认ENTRYPOINT配置会被忽略，执行command并追加上args参数</li>
</ul>
<h3 id="spec-containers-imagePullPolicy"><a href="#spec-containers-imagePullPolicy" class="headerlink" title="spec.containers.imagePullPolicy"></a>spec.containers.imagePullPolicy</h3><p>镜像拉取策略</p>
<ul>
<li>Always：总是去远程仓库拉取镜像</li>
<li>Never ：不去远程 仓库拉取镜像， 只用本地镜像，本地镜像不存在则报错</li>
<li>IfNotPresent：（默认值）如果本地存在则使用本地镜像，不存在则去远程仓库拉取，<h4 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h4></li>
<li>如果镜像的tag为具体的版本号，就像这样nginx:1.17.1，则使用IfNotPresent作为默认策略</li>
<li>如果镜像tag为latest（最新版本），就像这样nginx:latest，则使用Always作为默认策略</li>
</ul>
<h3 id="spec-containers-env"><a href="#spec-containers-env" class="headerlink" title="spec.containers.env"></a>spec.containers.env</h3><p>配置容器的环境变量列表，每一个环境变量其实就是一对键值对，name是key，值为value</p>
<h3 id="spec-containers-ports"><a href="#spec-containers-ports" class="headerlink" title="spec.containers.ports"></a>spec.containers.ports</h3><p>端口配置，支持多个端口，访问时的IP和端口是：podIp:containerPort，每个端口以下几个属性</p>
<ul>
<li>name: 端口名称，必须保证唯一</li>
<li>containerPort: 容器内要监听的端口</li>
<li>hostPort: 容器要在宿主机上公开的端口，如果设置，主机上只能运行容器的一个副本（一般省略）</li>
<li>hostIP: 要将外部端口绑定到的主机IP（一般省略）</li>
<li>protocol: 端口协议，有以下几个种类<ul>
<li>TCP（默认）</li>
<li>UDP</li>
<li>SCTP</li>
</ul>
</li>
</ul>
<h3 id="spec-containers-resources"><a href="#spec-containers-resources" class="headerlink" title="spec.containers.resources"></a>spec.containers.resources</h3><p>resources是资源配额配置，容器中的程序要运行，肯定是要占用资源的，比如cpu和内存，如果不做资源限制，就可能会吃掉大量资源，导致其他 容器无法运行；资源配额有2个子选项“</p>
<ul>
<li>limits: 用于限制运行时容器的最大占用资源，当容器占用资源超过limits时会被终止，并且进行重启；</li>
<li>requests：用于设置容器需要的最小资源，如果环境资源不够，容器将无法启动；<br>每个子选项也有2个属性，，他们分别是</li>
<li>cpu: cpu核心数，单位（core）</li>
<li>memory: 内存限制</li>
</ul>
<h3 id="spec-initContainers"><a href="#spec-initContainers" class="headerlink" title="spec.initContainers"></a>spec.initContainers</h3><p>initContainers是初始化容器，因为一个pod中可以有多个容器运行，只不过初始化容器和主容器不同，初始化容器必须先启动成功之后才能运行主容器；spec.initContainers下的属性和spec.containers一致；</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>pod配置详解-4</title>
    <url>/2022/05/09/depth-kubernetes-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3-service%E9%85%8D%E7%BD%AE%E7%AE%80%E5%8D%95%E6%A1%88%E4%BE%8B-1/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="service配置简单案例"><a href="#service配置简单案例" class="headerlink" title="service配置简单案例"></a>service配置简单案例</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apiVersion: v1 # 指定api版本，此值必须在kubectl api-versions中</span><br><span class="line">kind: Service # 指定创建资源的⾓⾊&#x2F;类型</span><br><span class="line">metadata: # 资源的元数据&#x2F;属性</span><br><span class="line">  name: demo # 资源的名字，在同⼀个namespace中必须唯⼀</span><br><span class="line">  namespace:default # 部署在哪个namespace中</span><br><span class="line">  labels: # 设定资源的标签</span><br><span class="line">    app: demo</span><br><span class="line">spec: # 资源规范字段</span><br><span class="line">  type: ClusterIP # ClusterIP 类型</span><br><span class="line">  ports:</span><br><span class="line">- port:8080 # service 端⼝</span><br><span class="line">      targetPort: http # 容器暴露的端⼝</span><br><span class="line">      protocol:TCP # 协议</span><br><span class="line">      name: http # 端⼝名称</span><br><span class="line">  selector: # 选择器</span><br><span class="line">    app: demo</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>pod配置详解-3</title>
    <url>/2022/05/09/depth-kubernetes-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3-pod%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3-3/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="pod详解-3"><a href="#pod详解-3" class="headerlink" title="pod详解-3"></a>pod详解-3</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apiVersion:v1       					#必选，版本号，例如v1</span><br><span class="line">kind:Pod       					#必选，Pod</span><br><span class="line">metadata:       					#必选，元数据</span><br><span class="line">  name:string       					#必选，Pod名称</span><br><span class="line">  namespace:string    					#创建资源所属于的命名空间，不写的话默认创建在default空间</span><br><span class="line">  labels:      						#自定义标签</span><br><span class="line">    - name:string     		                        #自定义标签名字</span><br><span class="line">  annotations:       					#自定义注释列表</span><br><span class="line">    - name:string</span><br><span class="line">spec:       						#必选，Pod中容器的详细定义</span><br><span class="line">  containers:      					#必选，Pod中容器列表</span><br><span class="line">  - name:string     			                #必选，容器名称</span><br><span class="line">    image:string    			                #必选，容器的镜像名称</span><br><span class="line">    imagePullPolicy:[Always| Never | IfNotPresent]    #获取镜像的策略 Alawys表示下载镜像 IfnotPresent表示优先使用本地镜像，否则下载镜像，Nerver表示仅使用本地镜像</span><br><span class="line">    command: [string]    				#容器的启动命令列表，如不指定，使用打包时使用的启动命令</span><br><span class="line">    args: [string]     					#容器的启动命令参数列表</span><br><span class="line">    workingDir: string    				#容器的工作目录</span><br><span class="line">    volumeMounts:    					#挂载到容器内部的存储卷配置</span><br><span class="line">    - name: string     		                        #引用pod定义的共享存储卷的名称，需用volumes[]部分定义的的卷名</span><br><span class="line">      mountPath: string   				#存储卷在容器内mount的绝对路径，应少于512字符</span><br><span class="line">      readOnly: boolean   				#是否为只读模式</span><br><span class="line">    ports:       					#需要暴露的端口库号列表</span><br><span class="line">    - name: string     		                        #端口号名称</span><br><span class="line">      containerPort: int  				#容器需要监听的端口号</span><br><span class="line">      hostPort: int    					#容器所在主机需要监听的端口号，默认与Container相同</span><br><span class="line">      protocol: string    				#端口协议，支持TCP和UDP，默认TCP</span><br><span class="line">    env:       						#容器运行前需设置的环境变量列表</span><br><span class="line">    - name: string     		                        #环境变量名称</span><br><span class="line">      value: string    					#环境变量的值</span><br><span class="line">    resources:       					#资源限制和请求的设置</span><br><span class="line">      limits:      					#资源限制的设置</span><br><span class="line">        cpu: string    					#Cpu的限制，单位为core数，将用于docker run --cpu-shares参数</span><br><span class="line">        memory: string    				#内存限制，单位可以为Mib&#x2F;Gib，将用于docker run --memory参数</span><br><span class="line">      requests:      					#资源请求的设置</span><br><span class="line">        cpu: string    					#Cpu请求，容器启动的初始可用数量</span><br><span class="line">        memory: string    				#内存清楚，容器启动的初始可用数量</span><br><span class="line">    livenessProbe:     					#对Pod内个容器健康检查的设置，当探测无响应几次后将自动重启该容器，检查方法有exec、httpGet和tcpSocket，对一个容器只需设置其中一种方法即可</span><br><span class="line">      exec:      					#对Pod容器内检查方式设置为exec方式</span><br><span class="line">        command: [string] 				#exec方式需要制定的命令或脚本</span><br><span class="line">      httpGet:       					#对Pod内个容器健康检查方法设置为HttpGet，需要制定Path、port</span><br><span class="line">        path: string</span><br><span class="line">        port: number</span><br><span class="line">        host: string</span><br><span class="line">        scheme: string</span><br><span class="line">        HttpHeaders:</span><br><span class="line">        - name: string</span><br><span class="line">          value: string</span><br><span class="line">      tcpSocket:     					#对Pod内个容器健康检查方式设置为tcpSocket方式</span><br><span class="line">         port: number</span><br><span class="line">       initialDelaySeconds: 0  				#容器启动完成后首次探测的时间，单位为秒</span><br><span class="line">       timeoutSeconds: 0  				#对容器健康检查探测等待响应的超时时间，单位秒，默认1秒</span><br><span class="line">       periodSeconds: 0   				#对容器监控检查的定期探测时间设置，单位秒，默认10秒一次</span><br><span class="line">       successThreshold: 0</span><br><span class="line">       failureThreshold: 0</span><br><span class="line">       securityContext:</span><br><span class="line">         privileged:false</span><br><span class="line">    restartPolicy: [Always | Never | OnFailure]		#Pod的重启策略，Always表示一旦不管以何种方式终止运行，kubelet都将重启，OnFailure表示只有Pod以非0退出码退出才重启，Nerver表示不再重启该Pod</span><br><span class="line">    nodeSelector: obeject 				#设置NodeSelector表示将该Pod调度到包含这个label的node上，以key：value的格式指定</span><br><span class="line">    imagePullSecrets:    				#Pull镜像时使用的secret名称，以key：secretkey格式指定</span><br><span class="line">    - name: string</span><br><span class="line">    hostNetwork:false     				#是否使用主机网络模式，默认为false，如果设置为true，表示使用宿主机网络</span><br><span class="line">    volumes:       					#在该pod上定义共享存储卷列表</span><br><span class="line">    - name: string     		                        #共享存储卷名称 （volumes类型有很多种）</span><br><span class="line">      emptyDir: &#123;&#125;     					#类型为emtyDir的存储卷，与Pod同生命周期的一个临时目录。为空值</span><br><span class="line">      hostPath: string   				#类型为hostPath的存储卷，表示挂载Pod所在宿主机的目录</span><br><span class="line">        path: string     				#Pod所在宿主机的目录，将被用于同期中mount的目录</span><br><span class="line">      secret:      					#类型为secret的存储卷，挂载集群与定义的secre对象到容器内部</span><br><span class="line">        scretname: string  </span><br><span class="line">        items:     </span><br><span class="line">        - key: string</span><br><span class="line">          path: string</span><br><span class="line">      configMap:     					#类型为configMap的存储卷，挂载预定义的configMap对象到容器内部</span><br><span class="line">        name: string</span><br><span class="line">        items:</span><br><span class="line">        - key: string</span><br><span class="line">          path: string</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>yaml定义Pod详解</title>
    <url>/2022/05/09/depth-kubernetes-Deployment%E5%92%8CPod-yaml-1-yaml%E5%AE%9A%E4%B9%89Pod%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apiVersion: v1 #指定当前描述文件遵循v1版本的Kubernetes API</span><br><span class="line">kind: Pod #我们在描述一个pod</span><br><span class="line">metadata:</span><br><span class="line">  name: twocontainers #指定pod的名称</span><br><span class="line">  namespace: default #指定当前描述的pod所在的命名空间</span><br><span class="line">  labels: #指定pod标签</span><br><span class="line">    app: twocontainers</span><br><span class="line">  annotations: #指定pod注释</span><br><span class="line">    version: v0.5.0</span><br><span class="line">    releasedBy: david</span><br><span class="line">    purpose: demo</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: sise #容器的名称</span><br><span class="line">    image: quay.io&#x2F;openshiftlabs&#x2F;simpleservice:0.5.0 #创建容器所使用的镜像</span><br><span class="line">    ports:</span><br><span class="line">    - containerPort: 9876 #应用监听的端口</span><br><span class="line">  - name: shell #容器的名称</span><br><span class="line">    image: centos:7 #创建容器所使用的镜像</span><br><span class="line">    command: #容器启动命令</span><br><span class="line">      - &quot;bin&#x2F;bash&quot;</span><br><span class="line">      - &quot;-c&quot;</span><br><span class="line">      - &quot;sleep 10000&quot;</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>deployment.yaml详解</title>
    <url>/2022/05/09/depth-kubernetes-Deployment%E5%92%8CPod-yaml-deployment-yaml%E8%AF%A6%E8%A7%A3-0-deployment-yaml%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="案例1"><a href="#案例1" class="headerlink" title="案例1"></a>案例1</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; vim nginx-deployment.yaml</span><br><span class="line"></span><br><span class="line">apiVersion: extensions&#x2F;v1beta1                  # K8S对应的API版本</span><br><span class="line">kind: Deployment                                # 对应的类型</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-deployment</span><br><span class="line">  labels:</span><br><span class="line">    name: nginx-deployment</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1                                   # 镜像副本数量</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:                                   # 容器的标签 可和service关联</span><br><span class="line">        app: nginx</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: nginx                          # 容器名和镜像</span><br><span class="line">          image: nginx</span><br><span class="line">          imagePullPolicy: Always</span><br><span class="line"></span><br><span class="line">&gt; kubectl create -f nginx-deployment.yaml</span><br><span class="line">&gt; kubectl get pod</span><br><span class="line">NAME                                READY     STATUS    RESTARTS   AGE</span><br><span class="line">nginx-deployment-68fcbc9696-tr5fm   1&#x2F;1       Running   0          6s</span><br><span class="line">nginx-mysql-pod                     2&#x2F;2       Running   0          15m</span><br><span class="line">&gt; kubectl get deployment</span><br><span class="line">NAME               DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">nginx-deployment   1         1         1            1           2m</span><br></pre></td></tr></table></figure>
<blockquote>
<p>因为使用deployment会部署很多个Pod所以Pod的名字后面会带一串随机数避免重复</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>Deployment扩容</title>
    <url>/2022/05/09/depth-kubernetes-Deployment%E5%92%8CPod-yaml-deployment-yaml%E8%AF%A6%E8%A7%A3-1-Deployment%E6%89%A9%E5%AE%B9/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="扩容"><a href="#扩容" class="headerlink" title="扩容"></a>扩容</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; kubectl scale deployment nginx-deployment --replicas&#x3D;3</span><br><span class="line">&gt; kubectl get pod</span><br><span class="line">NAME                                READY     STATUS    RESTARTS   AGE</span><br><span class="line">nginx-deployment-68fcbc9696-9r4p8   1&#x2F;1       Running   0          22s</span><br><span class="line">nginx-deployment-68fcbc9696-lkff2   1&#x2F;1       Running   0          22s</span><br><span class="line">nginx-deployment-68fcbc9696-tr5fm   1&#x2F;1       Running   0          5m</span><br><span class="line">nginx-mysql-pod                     2&#x2F;2       Running   0          21m</span><br></pre></td></tr></table></figure>
<h1 id="最关键的功能就是可以弹性扩容根据CPU的占用率-需要结合资源限制一同使用-后面会进行实际演示"><a href="#最关键的功能就是可以弹性扩容根据CPU的占用率-需要结合资源限制一同使用-后面会进行实际演示" class="headerlink" title="最关键的功能就是可以弹性扩容根据CPU的占用率(需要结合资源限制一同使用),后面会进行实际演示"></a>最关键的功能就是可以弹性扩容根据CPU的占用率(需要结合资源限制一同使用),后面会进行实际演示</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; kubectl autoscale deployment nginx-deployment --min&#x3D;2 --max&#x3D;10 --cpu-percent&#x3D;80</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>Deployment缩容</title>
    <url>/2022/05/09/depth-kubernetes-Deployment%E5%92%8CPod-yaml-deployment-yaml%E8%AF%A6%E8%A7%A3-2-Deployment%E7%BC%A9%E5%AE%B9/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="缩容到指定个数"><a href="#缩容到指定个数" class="headerlink" title="缩容到指定个数"></a>缩容到指定个数</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; kubectl scale deployment nginx-deployment --replicas&#x3D;1</span><br><span class="line">&gt; kubectl get pod</span><br><span class="line">NAME                                READY     STATUS    RESTARTS   AGE</span><br><span class="line">nginx-deployment-68fcbc9696-tr5fm   1&#x2F;1       Running   0          6m</span><br><span class="line">nginx-mysql-pod                     2&#x2F;2       Running   0          21m</span><br></pre></td></tr></table></figure>
<h1 id="Deployment回保障你的容器的运行状态-如果删除Pod-Deployment会立即重启一个"><a href="#Deployment回保障你的容器的运行状态-如果删除Pod-Deployment会立即重启一个" class="headerlink" title="Deployment回保障你的容器的运行状态,如果删除Pod,Deployment会立即重启一个"></a>Deployment回保障你的容器的运行状态,如果删除Pod,Deployment会立即重启一个</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; kubectl delete pod nginx-deployment-68fcbc9696-tr5fm</span><br><span class="line">  pod &quot;nginx-deployment-68fcbc9696-tr5fm&quot; deleted</span><br><span class="line">  </span><br><span class="line">  &gt; kubectl get pod</span><br><span class="line">  NAME                                READY     STATUS    RESTARTS   AGE</span><br><span class="line">  nginx-deployment-68fcbc9696-ndfzj   1&#x2F;1       Running   0          12s</span><br><span class="line">  nginx-mysql-pod                     2&#x2F;2       Running   0          32m</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Deployment会配合RC调度启动新的Pod从而保障定量的Pod数量</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>Deployment根据cpu占用率弹性扩容</title>
    <url>/2022/05/09/depth-kubernetes-Deployment%E5%92%8CPod-yaml-deployment-yaml%E8%AF%A6%E8%A7%A3-3-Deployment%E6%A0%B9%E6%8D%AEcpu%E5%8D%A0%E7%94%A8%E7%8E%87%E5%BC%B9%E6%80%A7%E6%89%A9%E5%AE%B9/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>0-pod.yaml详解</title>
    <url>/2022/05/09/depth-kubernetes-Deployment%E5%92%8CPod-yaml-pod-yaml%E8%AF%A6%E8%A7%A3-0-pod-yaml%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="web-app-nginx-yaml"><a href="#web-app-nginx-yaml" class="headerlink" title="web.app.nginx.yaml"></a>web.app.nginx.yaml</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apiVersion: apps&#x2F;v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: web</span><br><span class="line">spec:</span><br><span class="line">  # pod终止最多可容忍的时间，terminationGracePeriodSeconds 值默认是30秒</span><br><span class="line">  # 当我们执行kubectl delete的时候也可以通过--grace-period参数显示指定一个优雅退出时间来覆盖Pod中的配置，如果我们配置的grace period超过时间之后，k8s就只能选择强制kill Pod</span><br><span class="line">  terminationGracePeriodSeconds: 30</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: web</span><br><span class="line">  replicas: 1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: web</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: web</span><br><span class="line">        image: nginx</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br></pre></td></tr></table></figure>
<p>这里就不进行演示了，因为日志会看不到这个请求</p>
<h1 id="pod-2"><a href="#pod-2" class="headerlink" title="pod-2"></a>pod-2</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; vim nginx-mysql-pod.yaml</span><br><span class="line">apiVersion: v1                          # api版本</span><br><span class="line">kind: Pod                               # 组件类型</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-mysql-pod</span><br><span class="line">  labels:                               # 标签</span><br><span class="line">    app: nginx-mysql</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx                         # 名称</span><br><span class="line">    image: nginx                        # image地址</span><br><span class="line">  - name: mysql                         </span><br><span class="line">    image: mysql                        </span><br><span class="line">    env:                                # 环境变量</span><br><span class="line">    - name: MYSQL_ROOT_PASSWORD</span><br><span class="line">      value: mysql</span><br><span class="line"></span><br><span class="line">&gt; kubectl create -f nginx-mysql-pod.yaml</span><br><span class="line">&gt; kubectl get pod</span><br><span class="line">NAME              READY     STATUS    RESTARTS   AGE</span><br><span class="line">nginx-mysql-pod   2&#x2F;2       Running   0          1m</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>postStart</title>
    <url>/2022/05/09/depth-kubernetes-Deployment%E5%92%8CPod-yaml-pod-yaml%E8%AF%A6%E8%A7%A3-1-postStart/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/qq_33591903/article/details/103854648" target="_blank" rel="noopener">基于PostStart的环境演示</a></p>
<h1 id="Kubernetes为我们提供了两种钩子函数"><a href="#Kubernetes为我们提供了两种钩子函数" class="headerlink" title="Kubernetes为我们提供了两种钩子函数:"></a>Kubernetes为我们提供了两种钩子函数:</h1><ul>
<li>PostStart :这个钩子在容器创建后立即执行。但是，并不能保证钩子将在容器ENTRYPOINT之前运行，因为没有参数传递给处理程序。 主要用于资源部署、环境准备等。不过需要注意的是如果钩子花费时间过长以及于不能运行或者挂起，容器将不能达到Running状态。另外，PostStart的执行相对于容器的代码执行是异步的。</li>
<li>PreStop :钩子在容器终止前立即被调用。它是阻塞的，意味着它是同步的，所以它必须在删除容器的调用触发之前完成。主要用于优雅关闭应用程序、通知其他系统等。如果钩子在执行期间挂起，Pod阶段将停留在Running状态并且不会达到failed状态。另外，PreStop的执行现对于SIGTERM信息，也是异步的，k8s也不会等待PreStop执行完成。</li>
</ul>
<h1 id="Pod终止的过程"><a href="#Pod终止的过程" class="headerlink" title="Pod终止的过程"></a>Pod终止的过程</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用户发送命令删除Pod，Pod进入Terminating状态</span><br><span class="line">service摘除Pod节点</span><br><span class="line">当kubelet看到Pod已被标记终止，开始执行preStop钩子，假如preStop hook的运行时间超过了grace period，kubelet会发送SIGTERM并等2秒</span><br></pre></td></tr></table></figure>
<h1 id="在Pod-Hook钩子函数中有Exec和HTTP两种方式"><a href="#在Pod-Hook钩子函数中有Exec和HTTP两种方式" class="headerlink" title="在Pod Hook钩子函数中有Exec和HTTP两种方式"></a>在Pod Hook钩子函数中有Exec和HTTP两种方式</h1><ul>
<li>Exec – 用于执行一段特定的命令，不过要注意的是该命令消耗的资源会被计入容器</li>
<li>HTTP – 对容器上的特定端点执行HTTP请求</li>
</ul>
<h1 id="基于PostStart命令演示"><a href="#基于PostStart命令演示" class="headerlink" title="基于PostStart命令演示"></a>基于PostStart命令演示</h1><p>首先我们先进行演示PostStart的两种方式</p>
<h2 id="第一种Exec"><a href="#第一种Exec" class="headerlink" title="第一种Exec"></a>第一种Exec</h2><p>我们echo一段话追加到 /tmp/message，在Pod启动前进行操作<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: abcdocker</span><br><span class="line">  labels:</span><br><span class="line">    name: abcdocker</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: abcdocker</span><br><span class="line">    image: nginx</span><br><span class="line">    ports:</span><br><span class="line">      - containerPort: 80</span><br><span class="line">    lifecycle:</span><br><span class="line">      postStart:</span><br><span class="line">        exec:</span><br><span class="line">          command:</span><br><span class="line">          - bash</span><br><span class="line">          - -c</span><br><span class="line">          - &#39;echo &quot;https:&#x2F;&#x2F;i4t.com&quot; &gt; &#x2F;tmp&#x2F;message&#39;</span><br></pre></td></tr></table></figure></p>
<h3 id="使用kubectl-apply-f-exec-test-yaml进行创建"><a href="#使用kubectl-apply-f-exec-test-yaml进行创建" class="headerlink" title="使用kubectl apply -f exec_test.yaml进行创建"></a>使用kubectl apply -f exec_test.yaml进行创建</h3><p>可以通过下面查看结果，pod的目录已经有我们在yaml文件写的测试文件<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@abcdocker yaml]# kubectl get pod</span><br><span class="line">NAME        READY   STATUS    RESTARTS   AGE</span><br><span class="line">abcdocker   1&#x2F;1     Running   0          37s</span><br><span class="line"> </span><br><span class="line">[root@abcdocker yaml]# kubectl exec -it -n default abcdocker &#x2F;bin&#x2F;bash</span><br><span class="line">root@abcdocker:&#x2F;# cat &#x2F;tmp&#x2F;message</span><br><span class="line">https:&#x2F;&#x2F;i4t.com</span><br><span class="line">root@abcdocker:&#x2F;#</span><br><span class="line">root@abcdocker:&#x2F;# exit</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>创建容器后，Kubernetes立即发送postStart事件。但是，不能保证在调用Container的入口点之前先调用postStart处理程序。<br>postStart处理程序相对于Container的代码异步运行，但是Kubernetes对容器的管理会阻塞，直到postStart处理程序完成。<br>在postStart处理程序完成之前，容器的状态不会设置为RUNNING。</p>
</blockquote>
<h2 id="第二种HTTP方式"><a href="#第二种HTTP方式" class="headerlink" title="第二种HTTP方式"></a>第二种HTTP方式</h2><p>使用HttpGet配置Host、Path、Port<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: abcdocker</span><br><span class="line">  labels:</span><br><span class="line">    name: abcdocker</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: abcdocker</span><br><span class="line">    image: nginx</span><br><span class="line">    ports:</span><br><span class="line">      - containerPort: 80</span><br><span class="line">    lifecycle:</span><br><span class="line">      postStart:</span><br><span class="line">        httpGet:</span><br><span class="line">          host: i4t.com</span><br><span class="line">          path: index.html</span><br><span class="line">          port: 80</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql启动的yaml文件</title>
    <url>/2022/05/09/depth-kubernetes-Deployment%E5%92%8CPod-yaml-yaml%E6%96%87%E4%BB%B6%E9%9B%86%E5%90%88-1-mysql%E5%90%AF%E5%8A%A8%E7%9A%84yaml%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="yaml文件"><a href="#yaml文件" class="headerlink" title="yaml文件"></a>yaml文件</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kind: Deployment   #使用deployment创建一个pod资源</span><br><span class="line">apiVersion: extensions&#x2F;v1beta1    #api版本</span><br><span class="line">metadata:  </span><br><span class="line">  name: mysql     #deployment的名称，全局唯一</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1     # Pod副本期待数量，1表示只运行一个pod，里面一个容器</span><br><span class="line">  template:       #根据此模板创建Pod的副本（实例）</span><br><span class="line">    metadata:</span><br><span class="line">      labels:     #符合目标的Pod拥有此标签。默认和name的值一样</span><br><span class="line">        name: mysql</span><br><span class="line">    spec:</span><br><span class="line">      containers:    # Pod中容器的定义部分</span><br><span class="line">      - name: mysql  #容器的名称</span><br><span class="line">        image: docker.io&#x2F;mysql&#x2F;mysql-server  #获取的docker镜像</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">               #支持三种ImagePullPolicy：</span><br><span class="line"></span><br><span class="line">                #  Always：不管镜像是否存在都会进行一次拉取。</span><br><span class="line">                #  Never：不管镜像是否存在都不会进行拉取</span><br><span class="line">                #  IfNotPresent：只有镜像不存在时，才会进行镜像拉取。</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 3306   #容器暴露的端口号</span><br><span class="line">          protocol: TCP</span><br><span class="line">        env:                 #注入到容器的环境变量</span><br><span class="line">          - name: MYSQL_ROOT_PASSWORD</span><br><span class="line">            value: &quot;123456&quot;</span><br></pre></td></tr></table></figure>
<h1 id="kubectl-create-创建"><a href="#kubectl-create-创建" class="headerlink" title="kubectl  create 创建"></a>kubectl  create 创建</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl create -f mysql-deployment.yaml</span><br><span class="line">deployment &quot;mysql&quot; created#使用get参数查看pod详细信息</span><br><span class="line">[root@master ~]# kubectl get pods</span><br><span class="line">NAME                     READY     STATUS    RESTARTS   AGE</span><br><span class="line">mysql-3013141301-2000x   1&#x2F;1       Running   0          12s</span><br><span class="line"></span><br><span class="line">[root@master ~]# kubectl get deployment</span><br><span class="line">NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">mysql     1         1         1            1           1m</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：当一个目录下，有多个yaml文件的时候，使用kubectl create -f 目录 的方式一下全部创建</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>编写部署nginx.yaml文件</title>
    <url>/2022/05/09/depth-kubernetes-Deployment%E5%92%8CPod-yaml-yaml%E6%96%87%E4%BB%B6%E9%9B%86%E5%90%88-2-%E7%BC%96%E5%86%99%E9%83%A8%E7%BD%B2nginx-yaml%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="编写部署nginx-yaml文件"><a href="#编写部署nginx-yaml文件" class="headerlink" title="编写部署nginx.yaml文件"></a>编写部署nginx.yaml文件</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#部署nginx服务[root@master ~]# cat nginx-deployment.yaml </span><br><span class="line">kind: Deployment</span><br><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        name: nginx</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: nginx</span><br><span class="line">        image:  docker.io&#x2F;nginx:latest</span><br><span class="line">        imagePullPolicy: IfNotPresent  </span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">          protocol: TCP</span><br><span class="line">#服务端口映射</span><br><span class="line">[root@master ~]# cat nginx-server.yaml </span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx</span><br><span class="line">  labels:</span><br><span class="line">    name: nginx</span><br><span class="line">spec:</span><br><span class="line">  type: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - protocol: TCP</span><br><span class="line">    nodePort: 31001</span><br><span class="line">    targetPort: 80</span><br><span class="line">    port: 80</span><br><span class="line">  selector:</span><br><span class="line">    name: nginx</span><br></pre></td></tr></table></figure>
<h1 id="创建pod"><a href="#创建pod" class="headerlink" title="创建pod"></a>创建pod</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl create -f nginx-deployment.yaml</span><br><span class="line"></span><br><span class="line">[root@master ~]# kubectl create -f nginx-server.yaml</span><br></pre></td></tr></table></figure>
<h1 id="查看创建的server、pod"><a href="#查看创建的server、pod" class="headerlink" title="查看创建的server、pod"></a>查看创建的server、pod</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl get deploy</span><br><span class="line">NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">mysql     1         1         1            1           1h</span><br><span class="line">nginx     1         1         1            1           10m</span><br><span class="line">[root@master ~]# kubectl get pods</span><br><span class="line">NAME                     READY     STATUS    RESTARTS   AGE</span><br><span class="line">mysql-3013141301-2000x   1&#x2F;1       Running   0          1h</span><br><span class="line">nginx-1011335894-4ngml   1&#x2F;1       Running   0          10m</span><br><span class="line"></span><br><span class="line">[root@master ~]# kubectl get service</span><br><span class="line">NAME         CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">kubernetes   10.254.0.1      &lt;none&gt;        443&#x2F;TCP        1d</span><br><span class="line">nginx        10.254.49.161   &lt;nodes&gt;       80:31001&#x2F;TCP   8m</span><br><span class="line">[root@master ~]# kubectl get pod -o wide</span><br><span class="line">NAME                     READY     STATUS    RESTARTS   AGE       IP            NODE</span><br><span class="line">mysql-3013141301-2000x   1&#x2F;1       Running   0          1h        10.255.18.3   192.168.10.8</span><br><span class="line">nginx-1011335894-4ngml   1&#x2F;1       Running   0          11m       10.255.94.2   192.168.10.9</span><br></pre></td></tr></table></figure>
<blockquote>
<p>通过查看以上信息，我们可以看到nginx服务在node-2上运行并把80端口映射到主机31001端口<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@node-2 kubernetes]# netstat -tunlp|grep 31001</span><br><span class="line">tcp6       0      0 :::31001                :::*                    LISTEN      21843&#x2F;kube-proxy</span><br></pre></td></tr></table></figure><br>访问服务：<br>192.168.10.9:31001  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# kubectl get pod -o wide</span><br><span class="line">NAME                     READY     STATUS    RESTARTS   AGE       IP            NODE</span><br><span class="line">mysql-3013141301-2000x   1&#x2F;1       Running   0          1h        10.255.18.3   192.168.10.8</span><br><span class="line">nginx-1011335894-4ngml   1&#x2F;1       Running   0          11m       10.255.94.2   192.168.10.9</span><br><span class="line"></span><br><span class="line">修改默认主页</span><br><span class="line">[root@master ~]# kubectl exec -it nginx-1011335894-4ngml bash</span><br><span class="line"></span><br><span class="line">root@nginx-1011335894-4ngml:&#x2F;#  echo &quot;kubernetes test 2018&quot; &gt; &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;index.html</span><br><span class="line">root@nginx-1011335894-4ngml:&#x2F;#</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>编写部署nginx.yaml文件</title>
    <url>/2022/05/09/depth-kubernetes-Deployment%E5%92%8CPod-yaml-yaml%E9%80%9A%E7%94%A8%E8%AF%A6%E8%A7%A3-1-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>kubernetes终止pod的步骤</title>
    <url>/2022/05/09/depth-kubernetes-Deployment%E5%92%8CPod-yaml-pod-yaml%E8%AF%A6%E8%A7%A3-2-2-kubernetes%E7%BB%88%E6%AD%A2pod%E7%9A%84%E6%AD%A5%E9%AA%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="简单的说Kubernetes终止Pod生命周期的每一步"><a href="#简单的说Kubernetes终止Pod生命周期的每一步" class="headerlink" title="简单的说Kubernetes终止Pod生命周期的每一步"></a>简单的说Kubernetes终止Pod生命周期的每一步</h1><ol>
<li>Pod 设置为Terminating状态，并从所有服务的Endpoints列表中删除</li>
<li>此时，Pod停止，但是Pod中运行的容器不受影响</li>
<li>PreStop Hook被执行</li>
<li>preStop Hook发送容器特殊命令或者Http请求到Pod中</li>
<li>此时，Kubernetes将向Pod中的容器发送SIGTERM信号，这个信号即通知容器他们很快将进行关闭。</li>
<li>Kubernetes等待优雅的终止</li>
<li>此时，Kubernetes等待指定的时间称为优雅终止宽限期。默认情况下，这是30秒(可以修改)，值得注意的是，PreStop Hook和SIGTREM信息是属于并行执行，Kubernetes不会等待PreStop Hook完成。<blockquote>
<p>如果Pod在terminationGracePeriod完成之前推出，Kubernetes将进入释放阶段，<br>如果容器在优雅终止宽限期(terminationGracePeriod限定时间)，则会发送SIGKILL信号并强制删除。与此同时，所有的Kubernetes对象也会被清除。</p>
</blockquote>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>PreStop</title>
    <url>/2022/05/09/depth-kubernetes-Deployment%E5%92%8CPod-yaml-pod-yaml%E8%AF%A6%E8%A7%A3-2-1-PreStop/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/qq_33591903/article/details/103854648" target="_blank" rel="noopener">基于PreStop的环境演示</a></p>
<h1 id="起因"><a href="#起因" class="headerlink" title="起因:"></a>起因:</h1><p>在生产环境中使用spring框架，由于服务更新过程中，容器服务会被直接停止，部分请求仍被分发到终止的容器，导致服务出现500错误，这部分错误请求数据占用比较少，<br>因为Pod滚动更新都是一对一。因为部分用户会产生服务器错误的情况，考虑使用优雅的终止方式，将错误请求降到最低，直至滚动更新不影响用户</p>
<p>Eureka是一个基于REST的服务，作为Spring Cloud服务注册中心，用于定位服务来进行中间层服务器的负载均衡和故障转移。<br>各服务启动时，会向Eureka Server注册自己的信息(IP、端口、服务信息等)，Eureka Server会存储这些信息，<br>微服务启动后，会周期性(默认30秒)的向Eureka Server发送心跳以续约自己的租期，并且可以从eureka中获取其他微服务的地址信息，执行相关逻辑</p>
<p>由于Eureka默认的心跳检测为30秒，当K8S下线Pod时Eureka会有30秒的异常问题，所以我们需要在Pod 停止前发送一条请求，通知Eureka进行下线操作，<br>这样进行优雅的停止对用户的影响做到最小</p>
<h1 id="具体yaml如下"><a href="#具体yaml如下" class="headerlink" title="具体yaml如下"></a>具体yaml如下</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: abcdocker</span><br><span class="line">  labels:</span><br><span class="line">    name: abcdocker</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: abcdocker</span><br><span class="line">    image: nginx</span><br><span class="line">    ports:</span><br><span class="line">      - containerPort: 80</span><br><span class="line">    lifecycle:</span><br><span class="line">      preStop:</span><br><span class="line">        exec:</span><br><span class="line">          command:</span><br><span class="line">            - bash</span><br><span class="line">            - -c</span><br><span class="line">            - &#39;curl -X POST --data DOWN http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;service-registry&#x2F;instance-status  -H</span><br><span class="line">              &quot;Content-Type: application&#x2F;vnd.spring-boot.actuator.v2+json;charset&#x3D;UTF-8&quot;;sleep 30&#39;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">####### 参数解释</span><br><span class="line">127.0.0.1:8080 #代表eureka地址</span><br><span class="line">service-registry    #代表注册中心</span><br><span class="line">DOWN        #执行down请求</span><br><span class="line">sleep       #等待30秒</span><br></pre></td></tr></table></figure>
<h2 id="当我们删除Pod的时候就会执行上面的命令操作，并且等待30秒"><a href="#当我们删除Pod的时候就会执行上面的命令操作，并且等待30秒" class="headerlink" title="当我们删除Pod的时候就会执行上面的命令操作，并且等待30秒"></a>当我们删除Pod的时候就会执行上面的命令操作，并且等待30秒</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@yzsjhl82-135 yaml]# kubectl get pod</span><br><span class="line">NAME        READY   STATUS    RESTARTS   AGE</span><br><span class="line">abcdocker   1&#x2F;1     Running   0          2m16s</span><br><span class="line">[root@yzsjhl82-135 yaml]# kubectl delete pod abcdocker</span><br><span class="line">pod &quot;abcdocker&quot; deleted</span><br></pre></td></tr></table></figure>
<h2 id="此刻Pod不会马上删除，而是执行Exec中的命令，并等待30秒"><a href="#此刻Pod不会马上删除，而是执行Exec中的命令，并等待30秒" class="headerlink" title="此刻Pod不会马上删除，而是执行Exec中的命令，并等待30秒"></a>此刻Pod不会马上删除，而是执行Exec中的命令，并等待30秒</h2><p>配置中添加了一个sleep时间，主要是作为服务停止的缓冲时间</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>k8s</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>md添加图片</title>
    <url>/2022/05/05/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-md%E6%B7%BB%E5%8A%A0%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><p>next6</p>
<h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><ol>
<li><p>安装插件（next6可以不用安装插件）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;d 你的hexo根目录</span><br><span class="line">npm install https:&#x2F;&#x2F;github.com&#x2F;7ym0n&#x2F;hexo-asset-image --save</span><br></pre></td></tr></table></figure>
<p>或</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>
<p>或</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install https:&#x2F;&#x2F;github.com&#x2F;CodeFalling&#x2F;hexo-asset-image --save</span><br></pre></td></tr></table></figure>
</li>
<li><p>启用资源文件夹（用来存放相对路径图片或文件）（一定得开启）<br>post_asset_folder: true</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Writing</span><br><span class="line">new_post_name: :year-:month-:day-:title.md # title.md 默认的新博文名称</span><br><span class="line">default_layout: post # 默认布局</span><br><span class="line">titlecase: false # 将标题转换为标题大写</span><br><span class="line">external_link: true # 在新标签页中打开外部链接</span><br><span class="line">filename_case: 0 #把博客名称改成小写&#x2F;大写（1,2）</span><br><span class="line">render_drafts: false # 是否显示草稿</span><br><span class="line">post_asset_folder: true #是否启用资源文件夹（用来存放相对路径图片或文件）</span><br><span class="line">relative_link: false # 把链接改为与根目录的相对位址</span><br><span class="line">future: true</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>3，文件和图片放置位置如下：<br><strong><em>一定要在引入的md文件同目录下创建 同名的 文件夹（用来存储图片），否则找不到图片</em></strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+ test_image</span><br><span class="line">    - test.md</span><br><span class="line">    + test</span><br><span class="line">        - image.png</span><br></pre></td></tr></table></figure><br>此时在test.md中引用 image.png 图片的方式如下:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![标题](image.png) 或 ![](image.png) 或 ![](test&#x2F;image.png)</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p><img src="test/image.png" alt="">  此种方式图片暂时无法加载<br><img src="image.png" alt=""> 可以正常加载图片</p>
</blockquote>
<h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><ol>
<li>如果没有安装插件<br>图片的引入不能有除了文件夹名称的路径前缀，例如以上的案例中，不能使用：<br><img src="test1/image.png" alt="">  非 test  文件夹名称之外的名称</li>
<li>如果有安装插件<br>路径文件夹名称可以有，也可以没有，也可以任意写入</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>操作数栈的特点（Operand Stack）</title>
    <url>/2022/05/02/java-jvm-atguigu-52-%E6%93%8D%E4%BD%9C%E6%95%B0%E6%A0%88%E7%9A%84%E7%89%B9%E7%82%B9/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="含义"><a href="#含义" class="headerlink" title="含义"></a>含义</h1><ol>
<li>每一个独立的栈帧中除了包含局部变量表以外，还包含一个后进先出（Last-In-First-Out）的操作数栈，也可以称之为 表达式栈（Expression Stack）。  </li>
<li>操作数栈，在方法执行的过程中，根据字节码指令，往栈中写入数据或提取数据，即入栈（push）/出栈（pop）。<ul>
<li>某些字节码指令将值压入操作数栈，其余的字节码指令将操作数取出栈。使用它们后再把结果压入栈。</li>
<li>比如：执行复制、交换、求和等操作。</li>
</ul>
</li>
<li>例： <pre><code class="java"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>{
 <span class="keyword">byte</span> i = <span class="number">15</span>;
 <span class="keyword">int</span> j = <span class="number">8</span>;
 <span class="keyword">int</span> k = i + j;
}
</code></pre>
<ul>
<li>首先将方法test会翻译成字节码</li>
<li>对应的 byte i = 15 字节码指令，会将 15 入栈到 操作数栈</li>
<li>对应的 int j = 8 字节码指令，也会将 8 入栈到 操作数栈</li>
<li>然后再出栈，在执行引擎中进行add求和运算，再讲结果压入操作数栈<blockquote>
<p>对于局部变量，也会将 K 放入局部变量表中</p>
</blockquote>
</li>
</ul>
</li>
</ol>
<h1 id="理论1"><a href="#理论1" class="headerlink" title="理论1"></a>理论1</h1><ol>
<li>操作数栈，主要用于保存计算过程的中间结果，同时作为计算过程中变量临时的存储空间。</li>
<li>操作数栈就是JVM执行殷勤的一个工作区，当一个方法刚开始执行的时候，一个新的栈帧也会随之被创建出来，<b>这个方法的操作数栈是空的。</b></li>
<li>每一个操作数栈都会拥有一个明确的栈深度 用于存储数值，其所需的最大深度在编译器就定义好了，保存在方法的Code属性中，为max_stack的值。</li>
<li>栈中的任何一个元素都是可以任意的Java数据类型<ul>
<li>32bit的类型占用一个栈单位深度</li>
<li>64bit的类型占用两个栈单位深度</li>
</ul>
</li>
<li>操作数栈 并非采用访问索引的方式来进行数据访问的，而是只能通过标准的入栈（push）和出栈（pop）操作来完成一次数据访问。<blockquote>
<p>局部变量表的深度和操作数栈的深度 无关联</p>
</blockquote>
</li>
</ol>
<h1 id="理论2"><a href="#理论2" class="headerlink" title="理论2"></a>理论2</h1><ol>
<li>如果被调用的方法带有返回值的话，其返回值将会被压入当前栈帧的操作数栈中，并更新PC寄存器中下一条需要执行的字节码指令</li>
<li>操作数栈中元素的数据类型必须与字节码指令的序列严格匹配，这由编译器在编译器期间进行验证，同时在类加载过程中的类检验阶段的数据流分析阶段要再次验证。</li>
<li>另外，我们说Java虚拟机的解析引擎是基于栈的执行引擎，其中的栈指的就是操作数栈。</li>
</ol>
<h1 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h1><ol>
<li>栈的一种，先进后出  </li>
<li>使用数组来实现的</li>
</ol>
<h2 id="栈："><a href="#栈：" class="headerlink" title="栈："></a>栈：</h2><p>可以使用数组或链表来实现</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>java</category>
        <category>jvm</category>
        <category>atguigu</category>
      </categories>
      <tags>
        <tag>jvm</tag>
      </tags>
  </entry>
  <entry>
    <title>动态链接的理解与常量池的作用</title>
    <url>/2022/05/02/java-jvm-atguigu-22/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>java</category>
        <category>jvm</category>
        <category>atguigu</category>
      </categories>
      <tags>
        <tag>jvm</tag>
      </tags>
  </entry>
  <entry>
    <title>操作数栈的字节码分析</title>
    <url>/2022/05/02/java-jvm-atguigu-53-%E6%93%8D%E4%BD%9C%E6%95%B0%E6%A0%88%E7%9A%84%E5%AD%97%E8%8A%82%E7%A0%81%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="例-操作过程"><a href="#例-操作过程" class="headerlink" title="例-操作过程"></a>例-操作过程</h1><p><img src="操作数栈的字节码分析-1.png" alt=""><br><img src="操作数栈的字节码分析-2.png" alt=""><br><img src="操作数栈的字节码分析-3.png" alt=""><br><img src="操作数栈的字节码分析-4.png" alt=""><br><img src="操作数栈的字节码分析-5.png" alt=""></p>
<h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public void getSum() &#123;</span><br><span class="line">    int m &#x3D; 10;</span><br><span class="line">    int n &#x3D; 20;</span><br><span class="line">    int k &#x3D; m + n;</span><br><span class="line">    return k;</span><br><span class="line">&#125;</span><br><span class="line">publicvoid testGetSum() &#123;</span><br><span class="line">    &#x2F;&#x2F; 获取上一个栈帧返回的结果，并保存在操作数栈中</span><br><span class="line">    int i &#x3D; getSum();</span><br><span class="line">    int j &#x3D; 10;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>以上案例中，getSum()返回的K属于int类型，在getSum()字节码栈帧执行完后，在下一个方法testGetSum中会直接将k的值加载并压入 操作数栈<br>此时，如果我们返回的是一个对象，而不是基础数据类型int，压入栈的则是一个具体对象？</li>
<li>常见的 i++ 和 ++i 的区别<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public void add() &#123;</span><br><span class="line">    &#x2F;&#x2F; 第1类</span><br><span class="line">    int i1 &#x3D; 10;</span><br><span class="line">    i1++;</span><br><span class="line">    </span><br><span class="line">    int i2 &#x3D; 10;</span><br><span class="line">    ++i2;</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F; 第2类</span><br><span class="line">    int i3 &#x3D; 10;</span><br><span class="line">    int i4 &#x3D; i3++;</span><br><span class="line">    </span><br><span class="line">    int i5 &#x3D; 10;</span><br><span class="line">    int i6 &#x3D; ++i5;</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F; 第3类</span><br><span class="line">    int i7 &#x3D; 10;</span><br><span class="line">    i7 &#x3D; i7++;</span><br><span class="line">    </span><br><span class="line">    int i8 &#x3D; 10;</span><br><span class="line">    i8 &#x3D; ++i8;</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F; 第4类</span><br><span class="line">    int i9 &#x3D; 10;</span><br><span class="line">    int i10 &#x3D; i9++ + ++i9;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>java</category>
        <category>jvm</category>
        <category>atguigu</category>
      </categories>
      <tags>
        <tag>jvm</tag>
      </tags>
  </entry>
  <entry>
    <title>栈顶缓存技术</title>
    <url>/2022/05/02/java-jvm-atguigu-54-%E6%A0%88%E9%A1%B6%E7%BC%93%E5%AD%98%E6%8A%80%E6%9C%AF/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h1><p>基于栈式架构的虚拟机所使用的零地址指令更加紧凑，但完成一项操作的时候必然需要使用更多的入栈和出栈指令，这同时也就意味着将需要更多的指令分派（instruction dispatch）次数和内存读/写次数。<br>寄存器架构： 指令更少，执行速度更快</p>
<h1 id="栈顶缓存来源"><a href="#栈顶缓存来源" class="headerlink" title="栈顶缓存来源"></a>栈顶缓存来源</h1><p>由于操作数是存储在内存中的，因此频繁地执行内存读/写操作必然会影响执行速度。<br>为了解决这个问题，HotSpot JVM的设计者们提出了 栈顶缓存（ToS， Top-of-Stack Cashing）技术，<br><b>将栈顶元素全部缓存在物理CPU的寄存器中，以此降低对内存的读/写次数，提升执行引擎的执行效率。</b></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>java</category>
        <category>jvm</category>
        <category>atguigu</category>
      </categories>
      <tags>
        <tag>jvm</tag>
      </tags>
  </entry>
  <entry>
    <title>方法的调用</title>
    <url>/2022/05/02/java-jvm-atguigu-56-%E6%96%B9%E6%B3%95%E7%9A%84%E8%B0%83%E7%94%A8/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="方法的绑定机制：静态绑定与动态绑定"><a href="#方法的绑定机制：静态绑定与动态绑定" class="headerlink" title="方法的绑定机制：静态绑定与动态绑定"></a>方法的绑定机制：静态绑定与动态绑定</h1><ol>
<li>在JVM中，将符号引用转换为调用方法的直接引用与方法的绑定机制相关</li>
</ol>
<h2 id="静态链接（编译期可知的，早期绑定）"><a href="#静态链接（编译期可知的，早期绑定）" class="headerlink" title="静态链接（编译期可知的，早期绑定）"></a>静态链接（编译期可知的，早期绑定）</h2><p>当一个字节码文件被装载进JVM内部时，如果被调用的目标方法在编译期可知，且运行期保持不变时。<br>这种情况下将调用方法的符号引用转换为直接引用的过程称之为 静态链接。</p>
<h2 id="动态链接（只能运行期确定的，晚期绑定）"><a href="#动态链接（只能运行期确定的，晚期绑定）" class="headerlink" title="动态链接（只能运行期确定的，晚期绑定）"></a>动态链接（只能运行期确定的，晚期绑定）</h2><p>如果被调用的方法在编译期无法被确定下来，也就是说，只能够在程序运行期将调用方法的符号引用转换为直接引用，<br>由于这种引用转换过程具备动态性，因此也就被称之为 动态链接。</p>
<h1 id="早期绑定和晚期绑定（绑定即确定，不会被修改）"><a href="#早期绑定和晚期绑定（绑定即确定，不会被修改）" class="headerlink" title="早期绑定和晚期绑定（绑定即确定，不会被修改）"></a>早期绑定和晚期绑定（绑定即确定，不会被修改）</h1><p>对应的方法的绑定机制为： 早期绑定（Early Binding）和晚期绑定（Late Binding）。<br>绑定是一个字段、方法或者类在符号引用被替换为直接引用的过程，这仅仅发生一次。</p>
<h2 id="早期绑定（如果子类或实现类的构造器中使用了-super或this后，是能在编译期确定）"><a href="#早期绑定（如果子类或实现类的构造器中使用了-super或this后，是能在编译期确定）" class="headerlink" title="早期绑定（如果子类或实现类的构造器中使用了 super或this后，是能在编译期确定）"></a>早期绑定（如果子类或实现类的构造器中使用了 super或this后，是能在编译期确定）</h2><p>早期绑定就是指被：<br>被调用的目标方法如果在编译期可知，且运行期保持不变时，<br>即可将这个方法与所属的类进行绑定，这样一来，由于明确了被调用的目标方法究竟是哪一个，因此也就可以使用静态链接的方式将符号引用转换为直接引用。</p>
<h2 id="晚期绑定（体现多态特性：父类或接口的调用是晚期绑定，只有在运行时才知道具体的哪个子类或实现类调用）"><a href="#晚期绑定（体现多态特性：父类或接口的调用是晚期绑定，只有在运行时才知道具体的哪个子类或实现类调用）" class="headerlink" title="晚期绑定（体现多态特性：父类或接口的调用是晚期绑定，只有在运行时才知道具体的哪个子类或实现类调用）"></a>晚期绑定（体现多态特性：父类或接口的调用是晚期绑定，只有在运行时才知道具体的哪个子类或实现类调用）</h2><p>如果被调用的方法在编译器无法被确定下来，只能够在程序运行期根据实际的类型绑定相关的方法，这种绑定方式也就被称之为晚期绑定。</p>
<h2 id="关注点"><a href="#关注点" class="headerlink" title="关注点"></a>关注点</h2><p>支持封装、继承和多态等面向对象特性的语言都有一个共性，既然这一类的编程语言具备多态特性，那么自然也就具备早期绑定和晚期绑定两种绑定方式</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>java</category>
        <category>jvm</category>
        <category>atguigu</category>
      </categories>
      <tags>
        <tag>jvm</tag>
      </tags>
  </entry>
  <entry>
    <title>静态变量与局部变量的对比</title>
    <url>/2022/05/02/java-jvm-atguigu-51-%E9%9D%99%E6%80%81%E5%8F%98%E9%87%8F%E4%B8%8E%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E7%9A%84%E5%AF%B9%E6%AF%94/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="变量的分类"><a href="#变量的分类" class="headerlink" title="变量的分类"></a>变量的分类</h1><p>按照数据类型分：</p>
<ol>
<li>基本数据类型</li>
<li>引用数据类型<br>按照在类中申明的位置：</li>
<li>成员变量<br>在使用前，都经历过默认初始化值<br> a. 类变量（static）<pre><code>linking的prepare阶段：给类变量默认赋值 --&gt; initial阶段：给类变量显示赋值及静态代码块赋值
</code></pre> b. 实例变量（非static）<pre><code>随着对象的创建，会在堆空间中分配实例变量空间，并进行默认赋值
</code></pre></li>
<li>局部变量<br>在使用前必须要进行显示赋值，否则编译不通过<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pubulic void test() &#123;</span><br><span class="line">    int num;</span><br><span class="line">    System.out.println(num); &#x2F;&#x2F; 错误信息：变量num未进行初始化</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>局部变量表中的数据必须显示赋值，否则无法使用</p>
</blockquote>
</li>
</ol>
<h1 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h1><ol>
<li>在栈帧中，与性能调优关系最为密切的部分就是前面提到的局部变量表。<br>在方法执行时，虚拟机使用局部变量表完成方法的传递。</li>
<li>局部变量表中的变量也是重要的垃圾回收 根节点，只要被局部变量表中直接或间接引用的对象都不会被回收。</li>
<li>局部变量表越大，栈帧越大</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>java</category>
        <category>jvm</category>
        <category>atguigu</category>
      </categories>
      <tags>
        <tag>jvm</tag>
      </tags>
  </entry>
  <entry>
    <title>动态链接的理解与常量池的作用</title>
    <url>/2022/05/02/java-jvm-atguigu-55-%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5%E7%9A%84%E7%90%86%E8%A7%A3%E4%B8%8E%E5%B8%B8%E9%87%8F%E6%B1%A0%E7%9A%84%E4%BD%9C%E7%94%A8/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="栈帧的内部结构"><a href="#栈帧的内部结构" class="headerlink" title="栈帧的内部结构"></a>栈帧的内部结构</h1><p><img src="./55-动态连接的理解与常量池的作用/栈帧的内部结构.png" alt=""><br>附加信息： 帧数据区<br>动态链接： 也叫做 指向运行时常量池的方法引用  </p>
<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><ol>
<li>每一个栈帧内部都包含一个指向运行时常量池中该栈帧所属方法的引用。<br>包含这个引用的目的就是为了支持当前方法的代码能够实现 动态链接（Dynamic Linking）。比如：invokedynamic指令<blockquote>
<p>帧数据区中保存着访问常量池的指针</p>
</blockquote>
</li>
<li>在Java源文件被编译到字节码文件中时，所有的变量和方法引用都作为符号引用（Symbolic Reference）保存在class文件的常量池里。<br>比如：描述一个方法调用了另外的其他方法时，就是通过常量池中指向方法的符号引用来标识的，  <h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2>那么 动态链接的作用 就是为了将这些符号引用转换为调用方法的直接引用。  </li>
</ol>
<h1 id="方法区与栈的关联结构"><a href="#方法区与栈的关联结构" class="headerlink" title="方法区与栈的关联结构"></a>方法区与栈的关联结构</h1><p><img src="方法区与栈的关联结构.png" alt=""></p>
<h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class DynamicLinkingTest&#123;</span><br><span class="line">    </span><br><span class="line">    private static int num &#x3D; 1;</span><br><span class="line"></span><br><span class="line">    public void methodA() &#123;</span><br><span class="line">        打印(&quot;方法A...&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">    public void methodB() &#123;</span><br><span class="line">        打印(&quot;方法B...&quot;)</span><br><span class="line"></span><br><span class="line">        methodA();</span><br><span class="line"></span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>javap -v DynamicLinkingTest.class 分析</p>
</blockquote>
<h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><ol>
<li>为什么需要 常量池？<br>有常量池的话 每个对象/属性 只需要一份，其他地方使用该对象/属性的引用，而不是每个地方写一份<br>常量池的作用，就是为了提供一些符号和常量，便于指令的识别。</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>java</category>
        <category>jvm</category>
        <category>atguigu</category>
      </categories>
      <tags>
        <tag>jvm</tag>
      </tags>
  </entry>
  <entry>
    <title>虚方法和非虚方法</title>
    <url>/2022/05/02/java-jvm-atguigu-57-%E8%99%9A%E6%96%B9%E6%B3%95%E4%B8%8E%E9%9D%9E%E8%99%9A%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="虚方法和非虚方法"><a href="#虚方法和非虚方法" class="headerlink" title="虚方法和非虚方法"></a>虚方法和非虚方法</h1><h2 id="虚函数"><a href="#虚函数" class="headerlink" title="虚函数"></a>虚函数</h2><p>Java中任何一个普通的方法其实都具备虚函数的特征，如果在Java程序中不希望某个方法拥有虚函数的特征时，则可以使用关键字<b>final</b>来标记这个方法。</p>
<h2 id="非虚方法"><a href="#非虚方法" class="headerlink" title="非虚方法"></a>非虚方法</h2><ul>
<li>如果方法在编译期就确定了具体的调用版本，这个版本在运行时是不可变的，这样的方法称为 非虚方法。</li>
<li>静态方法、私有方法、final方法、实例构造器、父类方法都是 非虚方法。</li>
<li>其他方法称之为 虚方法。<h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3>在类加载的解析阶段就可以进行解析，如下是非虚方法举例：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Father &#123;</span><br><span class="line">    public static void print(String str) &#123;</span><br><span class="line">        System.out.println(&quot;father &quot; + str);</span><br><span class="line">    &#125;</span><br><span class="line">    public void show(String str) &#123;</span><br><span class="line">        System.out.println(&quot;father &quot; + str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Son extends Father &#123;</span><br><span class="line">&#125;</span><br><span class="line">public class VirtualMethodTest &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Son.print(&quot;coder&quot;);</span><br><span class="line">        &#x2F;&#x2F;Father fa &#x3D; new Father();</span><br><span class="line">        &#x2F;&#x2F;fa.show(&quot;xxx.com&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
虚拟机中提供了以下几条方法调用指令：</li>
<li>普通调用指令：<ol>
<li>invokestatic: 调用静态方法，解析阶段确定唯一方法版本</li>
<li>invokespecial: 调用<init>方法、私有及父类方法，解析阶段确定唯一方法版本</li>
<li>invokevirtual: 调用所有虚方法</li>
<li>invokeinterface: 调用接口方法</li>
</ol>
</li>
<li>动态调用指令：<ol>
<li>invokedynamic: 动态解析出需要调用的方法，然后执行</li>
</ol>
</li>
</ul>
<p>前面四条指令固化在虚拟机内部，方法的调用执行不可人为干预，而invokedynamic指令则支持由用户确定方法版本。<br>其中 invokestatic 指令和 invokespecial 指令调用的方法称为 非虚方法，其余的（final修饰的除外）称为 虚方法。</p>
<h1 id="关于invokedynamic指令"><a href="#关于invokedynamic指令" class="headerlink" title="关于invokedynamic指令"></a>关于invokedynamic指令</h1><ul>
<li>JVM字节码指令集一直比较稳定，一直到Java7中才增加了一个 invokedynamic 指令，这是 Java为了实现【动态类型语言】 支持而做的一种改进。</li>
<li>但是在Java7中并没有提供直接生成invokedynamic指令的方法，需要借助ASM这种底层字节码工具来产生invokedynamic指令。<br>直到Java8的Lambda表达式的出现，invokedynamic指令的生成，在Java中才有了直接的生成方式。</li>
<li>Java7中增加的动态语言类型支持的本质是对Java虚拟机规范的修改，而不是对Java语言规则的修改，这一块相对来讲比较复杂，增加了虚拟机中的方法调用，最直接的受益者就是运行在Java平台的动态语言的编译器。<h2 id="动态类型语言和静态类型语言"><a href="#动态类型语言和静态类型语言" class="headerlink" title="动态类型语言和静态类型语言"></a>动态类型语言和静态类型语言</h2></li>
<li>动态类型语言和静态类型语言两者的区别就在与对类型的检查是在编译期还是在运行期，满足前者就是静态类型语言，反之是动态类型语言。</li>
<li>静态类型语言是判断变量自身的类型信息；动态类型语言是判断变量值的类型信息，变量没有类型信息，变量值才有类型信息，这是动态语言的一个重要特征。</li>
</ul>
<h1 id="方法重写的本质"><a href="#方法重写的本质" class="headerlink" title="方法重写的本质"></a>方法重写的本质</h1><p>Java语言中方法重写的本质：</p>
<ol>
<li>找到操作数栈顶的</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>java</category>
        <category>jvm</category>
        <category>atguigu</category>
      </categories>
      <tags>
        <tag>jvm</tag>
      </tags>
  </entry>
  <entry>
    <title>ideal工具中方法横线分割</title>
    <url>/2022/05/02/tool-ideal-notes-ideal%E5%B7%A5%E5%85%B7%E4%B8%AD%E6%96%B9%E6%B3%95%E6%A8%AA%E7%BA%BF%E5%88%86%E5%89%B2/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="ideal工具中方法横线分割"><a href="#ideal工具中方法横线分割" class="headerlink" title="ideal工具中方法横线分割"></a>ideal工具中方法横线分割</h1><p>setting -&gt; Editor -&gt; General -&gt; Appearance -&gt; Show method separators (勾选)</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>ideal</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>ideal</tag>
      </tags>
  </entry>
  <entry>
    <title>mybatis新增数据时返回数据主键ID</title>
    <url>/2022/04/27/database-mybatis-notes-mybatis%E6%96%B0%E5%A2%9E%E6%95%B0%E6%8D%AE%E6%97%B6%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE%E4%B8%BB%E9%94%AEID/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="xml"><a href="#xml" class="headerlink" title="xml"></a>xml</h1><p>useGeneratedKeys=”true” keyProperty=”id”<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;insert id&#x3D;&quot;insert&quot; useGeneratedKeys&#x3D;&quot;true&quot; keyProperty&#x3D;&quot;id&quot;  keyColumn&#x3D;&quot;id&quot; parameterType&#x3D;&quot;com.dao.dataObject.XXDO&quot;&gt;</span><br><span class="line">    insert into t_xx ... 正常普通的插入语句</span><br><span class="line">  &lt;&#x2F;insert&gt;</span><br></pre></td></tr></table></figure></p>
<h1 id="code"><a href="#code" class="headerlink" title="code"></a>code</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">XXDoMapper.insert(XXDO);</span><br><span class="line">return xxDO.getId();</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mybatis</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title>binlog日志删除</title>
    <url>/2022/04/22/database-mysql-notes-binlog-binlog%E6%97%A5%E5%BF%97%E5%88%A0%E9%99%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>binlog本身是一类二进制文件。二进制文件更省空间，写入速度更快，是无法直接打开来查看的</p>
<h1 id="查看二进制日志文件"><a href="#查看二进制日志文件" class="headerlink" title="查看二进制日志文件"></a>查看二进制日志文件</h1><p>show binary logs;<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Log_name            File_size</span><br><span class="line">mysql-bin.000001	107</span><br></pre></td></tr></table></figure></p>
<h1 id="常见的删除binlog方式"><a href="#常见的删除binlog方式" class="headerlink" title="常见的删除binlog方式"></a>常见的删除binlog方式</h1><ol>
<li>使用reset master,该命令将会删除所有日志，并让日志文件重新从000001开始</li>
<li>PURGE { BINARY | MASTER } LOGS { TO ‘log_name’ | BEFORE datetime_expr }<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">purge master logs to &quot;binlog_name.00000X&quot;</span><br></pre></td></tr></table></figure>
将会清空00000X之前的所有日志文件.</li>
<li>使用–expire_logs_days=N选项指定过了多少天日志自动过期清空</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>binlog日志查看</title>
    <url>/2022/04/21/database-mysql-notes-binlog-binlog%E6%97%A5%E5%BF%97%E6%9F%A5%E7%9C%8B/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>binlog本身是一类二进制文件。二进制文件更省空间，写入速度更快，是无法直接打开来查看的</p>
<h1 id="查看二进制日志文件"><a href="#查看二进制日志文件" class="headerlink" title="查看二进制日志文件"></a>查看二进制日志文件</h1><p>show binary logs;<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Log_name            File_size</span><br><span class="line">mysql-bin.000001	107</span><br></pre></td></tr></table></figure></p>
<h1 id="查看具体的文件内容"><a href="#查看具体的文件内容" class="headerlink" title="查看具体的文件内容"></a>查看具体的文件内容</h1><ol>
<li>statement格式的二进制文件<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysqlbinlog mysql-bin.000001</span><br></pre></td></tr></table></figure></li>
<li>row格式，加上-v或者-vv参数<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysqlbinlog -vv mysql-bin.000001</span><br></pre></td></tr></table></figure></li>
<li>案例<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Windows\System32&gt;mysqlbinlog -vv mysql-bin.000001</span><br><span class="line">&#x2F;*!50530 SET @@SESSION.PSEUDO_SLAVE_MODE&#x3D;1*&#x2F;;</span><br><span class="line">&#x2F;*!40019 SET @@session.max_insert_delayed_threads&#x3D;0*&#x2F;;</span><br><span class="line">&#x2F;*!50003 SET @OLD_COMPLETION_TYPE&#x3D;@@COMPLETION_TYPE,COMPLETION_TYPE&#x3D;0*&#x2F;;</span><br><span class="line">DELIMITER &#x2F;*!*&#x2F;;</span><br><span class="line">mysqlbinlog: File &#39;mysql-bin.000001&#39; not found (Errcode: 2)</span><br><span class="line">DELIMITER ;</span><br><span class="line"># End of log file</span><br><span class="line">ROLLBACK &#x2F;* added by mysqlbinlog *&#x2F;;</span><br><span class="line">&#x2F;*!50003 SET COMPLETION_TYPE&#x3D;@OLD_COMPLETION_TYPE*&#x2F;;</span><br><span class="line">&#x2F;*!50530 SET @@SESSION.PSEUDO_SLAVE_MODE&#x3D;0*&#x2F;;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>binlog日志三种模式</title>
    <url>/2022/04/20/database-mybatis-notes-mybatis%E6%97%A5%E5%BF%97%E6%8B%A6%E6%88%AA/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.cathay.writeoff.component.config;</span><br><span class="line"></span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * mybatis拦截器配置</span><br><span class="line"> * @author zhangdaiyin</span><br><span class="line"> * @date 2020-04-07</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Configuration</span><br><span class="line">public class MybatisConfig &#123;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;    @Bean</span><br><span class="line">&#x2F;&#x2F;    public LogInterceptor logInterceptor() &#123;</span><br><span class="line">&#x2F;&#x2F;        LogInterceptor interceptor &#x3D; new LogInterceptor();</span><br><span class="line">&#x2F;&#x2F;        Properties properties &#x3D; new Properties();</span><br><span class="line">&#x2F;&#x2F;        &#x2F;&#x2F; 设置是否显示数据库执行语句的执行时间</span><br><span class="line">&#x2F;&#x2F;        properties.setProperty(LogInterceptor.PROPERTIES_KEY_ENABLE_EXECUTOR_TIME, LogInterceptor.ENABLE_EXECUTOR_TIME);</span><br><span class="line">&#x2F;&#x2F;        interceptor.setProperties(properties);</span><br><span class="line">&#x2F;&#x2F;        return interceptor;</span><br><span class="line">&#x2F;&#x2F;    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.cathay.writeoff.component.interceptor;</span><br><span class="line"></span><br><span class="line">import lombok.extern.slf4j.Slf4j;</span><br><span class="line">import org.apache.ibatis.executor.Executor;</span><br><span class="line">import org.apache.ibatis.mapping.BoundSql;</span><br><span class="line">import org.apache.ibatis.mapping.MappedStatement;</span><br><span class="line">import org.apache.ibatis.mapping.ParameterMapping;</span><br><span class="line">import org.apache.ibatis.plugin.*;</span><br><span class="line">import org.apache.ibatis.reflection.MetaObject;</span><br><span class="line">import org.apache.ibatis.session.Configuration;</span><br><span class="line">import org.apache.ibatis.session.ResultHandler;</span><br><span class="line">import org.apache.ibatis.session.RowBounds;</span><br><span class="line">import org.apache.ibatis.type.TypeHandlerRegistry;</span><br><span class="line"></span><br><span class="line">import java.text.DateFormat;</span><br><span class="line">import java.util.Date;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Locale;</span><br><span class="line">import java.util.Properties;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 1. 打印mysql完整的执行语句</span><br><span class="line"> * 2. 打印mysql语句执行时间</span><br><span class="line"> * 这里我们拦截Executor里面的query和update方法</span><br><span class="line"> * @author zhangdaiyin</span><br><span class="line"> * @date 2020-04-07</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Slf4j</span><br><span class="line">@Intercepts(&#123;</span><br><span class="line">        @Signature(</span><br><span class="line">                method &#x3D; &quot;query&quot;,</span><br><span class="line">                type &#x3D; Executor.class,</span><br><span class="line">                args &#x3D; &#123;MappedStatement.class, Object.class, RowBounds.class, ResultHandler.class&#125;</span><br><span class="line">        ),</span><br><span class="line">        @Signature(</span><br><span class="line">                type &#x3D; Executor.class,</span><br><span class="line">                method &#x3D; &quot;update&quot;,</span><br><span class="line">                args &#x3D; &#123;MappedStatement.class, Object.class&#125;</span><br><span class="line">        )</span><br><span class="line">&#125;)</span><br><span class="line">public class LogInterceptor implements Interceptor &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 是否显示语句的执行时间</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static final String PROPERTIES_KEY_ENABLE_EXECUTOR_TIME &#x3D; &quot;enableExecutorTIme&quot;;</span><br><span class="line">    public static final String ENABLE_EXECUTOR_TIME &#x3D; &quot;0&quot;; &#x2F;&#x2F; 显示</span><br><span class="line"></span><br><span class="line">    private boolean enableExecutorTime &#x3D; false;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Object intercept(Invocation invocation) throws Throwable &#123;</span><br><span class="line">        &#x2F;&#x2F; 获取执行方法的MappedStatement参数,不管是Executor的query方法还是update方法，第一个参数都是MappedStatement</span><br><span class="line">        MappedStatement mappedStatement &#x3D; (MappedStatement) invocation.getArgs()[0];</span><br><span class="line">        Object parameter &#x3D; null;</span><br><span class="line">        if (invocation.getArgs().length &gt; 1) &#123;</span><br><span class="line">            parameter &#x3D; invocation.getArgs()[1];</span><br><span class="line">        &#125;</span><br><span class="line">        String sqlId &#x3D; mappedStatement.getId();</span><br><span class="line">        BoundSql boundSql &#x3D; mappedStatement.getBoundSql(parameter);</span><br><span class="line">        Configuration configuration &#x3D; mappedStatement.getConfiguration();</span><br><span class="line">        long sqlStartTime &#x3D; System.currentTimeMillis();</span><br><span class="line">        Object re &#x3D; invocation.proceed();</span><br><span class="line">        long sqlEndTime &#x3D; System.currentTimeMillis();</span><br><span class="line">        &#x2F;&#x2F; 打印mysql执行语句</span><br><span class="line">        String sql &#x3D; getSql(configuration, boundSql, sqlId);</span><br><span class="line">        log.warn(sql);</span><br><span class="line">        &#x2F;&#x2F; 打印mysql执行时间</span><br><span class="line">        if (enableExecutorTime) &#123;</span><br><span class="line">            String sqlTimeLog &#x3D; sqlId + &quot; 方法对应sql执行时间:&quot; + (sqlEndTime - sqlStartTime) + &quot; ms&quot;;</span><br><span class="line">            log.warn(sqlTimeLog);</span><br><span class="line">        &#125;</span><br><span class="line">        return re;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 通过该方法决定要返回的对象是目标对象还是对应的代理</span><br><span class="line">     * 不要想的太复杂，一般就两种情况：</span><br><span class="line">     * &lt;p&gt;</span><br><span class="line">     * 1. return target;  直接返回目标对象，相当于当前Interceptor没起作用，不会调用上面的intercept()方法</span><br><span class="line">     * 2. return Plugin.wrap(target, this);  返回代理对象，会调用上面的intercept()方法</span><br><span class="line">     *</span><br><span class="line">     * @param target 目标对象</span><br><span class="line">     * @return 目标对象或者代理对象</span><br><span class="line">     *&#x2F;</span><br><span class="line">    @Override</span><br><span class="line">    public Object plugin(Object target) &#123;</span><br><span class="line">        return Plugin.wrap(target, this);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 用于获取在Configuration初始化当前的Interceptor时时候设置的一些参数</span><br><span class="line">     *</span><br><span class="line">     * @param properties Properties参数</span><br><span class="line">     *&#x2F;</span><br><span class="line">    @Override</span><br><span class="line">    public void setProperties(Properties properties) &#123;</span><br><span class="line">        if (properties !&#x3D; null) &#123;</span><br><span class="line">            String executorTImeValue &#x3D; properties.getProperty(PROPERTIES_KEY_ENABLE_EXECUTOR_TIME);</span><br><span class="line">            if (executorTImeValue !&#x3D; null) &#123;</span><br><span class="line">                enableExecutorTime &#x3D; executorTImeValue.equals(ENABLE_EXECUTOR_TIME);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static String getSql(Configuration configuration, BoundSql boundSql, String sqlId) &#123;</span><br><span class="line">        return sqlId + &quot; 方法对应sql执行语句:&quot; + assembleSql(configuration, boundSql);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 转义正则特殊字符 （$()*+.[]?\^&#123;&#125;</span><br><span class="line">     * \\需要第一个替换，否则replace方法替换时会有逻辑bug</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private static String makeQueryStringAllRegExp(String str) &#123;</span><br><span class="line">        if (str !&#x3D; null &amp;&amp; !str.equals(&quot;&quot;)) &#123;</span><br><span class="line">            return str.replace(&quot;\\&quot;, &quot;\\\\&quot;).replace(&quot;*&quot;, &quot;\\*&quot;)</span><br><span class="line">                    .replace(&quot;+&quot;, &quot;\\+&quot;).replace(&quot;|&quot;, &quot;\\|&quot;)</span><br><span class="line">                    .replace(&quot;&#123;&quot;, &quot;\\&#123;&quot;).replace(&quot;&#125;&quot;, &quot;\\&#125;&quot;)</span><br><span class="line">                    .replace(&quot;(&quot;, &quot;\\(&quot;).replace(&quot;)&quot;, &quot;\\)&quot;)</span><br><span class="line">                    .replace(&quot;^&quot;, &quot;\\^&quot;).replace(&quot;$&quot;, &quot;\\$&quot;)</span><br><span class="line">                    .replace(&quot;[&quot;, &quot;\\[&quot;).replace(&quot;]&quot;, &quot;\\]&quot;)</span><br><span class="line">                    .replace(&quot;?&quot;, &quot;\\?&quot;).replace(&quot;,&quot;, &quot;\\,&quot;)</span><br><span class="line">                    .replace(&quot;.&quot;, &quot;\\.&quot;).replace(&quot;&amp;&quot;, &quot;\\&amp;&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        return str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 获取参数对应的string值</span><br><span class="line">     *</span><br><span class="line">     * @param obj 参数对应的值</span><br><span class="line">     * @return string</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private static String getParameterValue(Object obj) &#123;</span><br><span class="line">        String value;</span><br><span class="line">        if (obj instanceof String) &#123;</span><br><span class="line">            value &#x3D; &quot;&#39;&quot; + obj.toString() + &quot;&#39;&quot;;</span><br><span class="line">        &#125; else if (obj instanceof Date) &#123;</span><br><span class="line">            DateFormat formatter &#x3D; DateFormat.getDateTimeInstance(DateFormat.DEFAULT, DateFormat.DEFAULT, Locale.CHINA);</span><br><span class="line">            value &#x3D; &quot;&#39;&quot; + formatter.format(new Date()) + &quot;&#39;&quot;;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            if (obj !&#x3D; null) &#123;</span><br><span class="line">                value &#x3D; obj.toString();</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                value &#x3D; &quot;&quot;;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 对特殊字符进行转义，方便之后处理替换</span><br><span class="line">        return value !&#x3D; null ? makeQueryStringAllRegExp(value) : value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 组装完整的sql语句 -- 把对应的参数都代入到sql语句里面</span><br><span class="line">     *</span><br><span class="line">     * @param configuration Configuration</span><br><span class="line">     * @param boundSql      BoundSql</span><br><span class="line">     * @return sql完整语句</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private static String assembleSql(Configuration configuration, BoundSql boundSql) &#123;</span><br><span class="line">        &#x2F;&#x2F; 获取mapper里面方法上的参数</span><br><span class="line">        Object sqlParameter &#x3D; boundSql.getParameterObject();</span><br><span class="line">        &#x2F;&#x2F; sql语句里面需要的参数 -- 真实需要用到的参数 因为sqlParameter里面的每个参数不一定都会用到</span><br><span class="line">        List&lt;ParameterMapping&gt; parameterMappings &#x3D; boundSql.getParameterMappings();</span><br><span class="line">        &#x2F;&#x2F; sql原始语句(?还没有替换成我们具体的参数)</span><br><span class="line">        String sql &#x3D; boundSql.getSql().replaceAll(&quot;[\\s]+&quot;, &quot; &quot;);</span><br><span class="line">        if (parameterMappings.size() &gt; 0 &amp;&amp; sqlParameter !&#x3D; null) &#123;</span><br><span class="line">            &#x2F;&#x2F; sql语句里面的?替换成真实的参数</span><br><span class="line">            TypeHandlerRegistry typeHandlerRegistry &#x3D; configuration.getTypeHandlerRegistry();</span><br><span class="line">            if (typeHandlerRegistry.hasTypeHandler(sqlParameter.getClass())) &#123;</span><br><span class="line">                sql &#x3D; sql.replaceFirst(&quot;\\?&quot;, getParameterValue(sqlParameter));</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                MetaObject metaObject &#x3D; configuration.newMetaObject(sqlParameter);</span><br><span class="line">                for (ParameterMapping parameterMapping : parameterMappings) &#123;</span><br><span class="line">                    &#x2F;&#x2F; 一个一个把对应的值替换进去 按顺序把?替换成对应的值</span><br><span class="line">                    String propertyName &#x3D; parameterMapping.getProperty();</span><br><span class="line">                    if (metaObject.hasGetter(propertyName)) &#123;</span><br><span class="line">                        Object obj &#x3D; metaObject.getValue(propertyName);</span><br><span class="line">                        sql &#x3D; sql.replaceFirst(&quot;\\?&quot;, getParameterValue(obj));</span><br><span class="line">                    &#125; else if (boundSql.hasAdditionalParameter(propertyName)) &#123;</span><br><span class="line">                        Object obj &#x3D; boundSql.getAdditionalParameter(propertyName);</span><br><span class="line">                        sql &#x3D; sql.replaceFirst(&quot;\\?&quot;, getParameterValue(obj));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return sql;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>binlog开启</title>
    <url>/2022/04/20/database-mysql-notes-binlog-binlog%E5%BC%80%E5%90%AF/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="查找my-ini或my-cnf"><a href="#查找my-ini或my-cnf" class="headerlink" title="查找my.ini或my.cnf"></a>查找my.ini或my.cnf</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql --help | grep &#39;Default options&#39; -A 1</span><br></pre></td></tr></table></figure>
<ol>
<li>linux<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Default options are read from the following files in the given order:</span><br><span class="line">&#x2F;etc&#x2F;my.cnf &#x2F;etc&#x2F;mysql&#x2F;my.cnf &#x2F;usr&#x2F;etc&#x2F;my.cnf ~&#x2F;.my.cnf</span><br></pre></td></tr></table></figure></li>
<li>windows<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Windows\System32&gt;mysql --help | grep &#39;Default options&#39; -A 1</span><br><span class="line">Default options are read from the following files in the given order:</span><br><span class="line">C:\WINDOWS\my.ini C:\WINDOWS\my.cnf C:\my.ini C:\my.cnf C:\Program Files\MySQL\MySQL Server 5.5\my.ini C:\Program Files\MySQL\MySQL Server 5.5\my.cnf</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="开启binlog"><a href="#开启binlog" class="headerlink" title="开启binlog"></a>开启binlog</h1><p>一般来说开启binlog日志大概会有1%的性能损耗。<br>启用binlog，通过配置 /etc/my.cnf 或 /etc/mysql/mysql.conf.d/mysqld.cnf 或mysql\bin\my.ini 配置文件的 log-bin 选项：<br>在配置文件中加入 log-bin 配置，表示启用binlog，如果没有给定值，写成 log-bin=，则默认名称为主机名。（注：名称若带有小数点，则只取第一个小数点前的部分作为名称）</p>
<blockquote>
<p>也可以通过 SET SQL_LOG_BIN=1 命令来启用 binlog，通过 SET SQL_LOG_BIN=0 命令停用 binlog。启用 binlog 之后须重启MySQL才能生效。</p>
</blockquote>
<ol>
<li>windows<br>my.ini<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line"># Binary Logging</span><br><span class="line"># 开启Binlog 一般只需要修改这一行即可</span><br><span class="line">log-bin&#x3D;mysql-bin</span><br><span class="line"># 设置格式 此行可以不加 命令设置即可 详见下方拓展</span><br><span class="line">binlog-format&#x3D;ROW</span><br><span class="line"># 配置serverID  这一行本来就存在</span><br><span class="line">server_id&#x3D;1</span><br></pre></td></tr></table></figure>
<blockquote>
<p>写在 [mysqld]  下</p>
</blockquote>
</li>
</ol>
<p>然后再重启mysql服务，使用命令验证是否开启成功<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># OFF：关闭   ON：开启</span><br><span class="line">SHOW VARIABLES LIKE &#39;log_bin&#39;;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>二进制日志文件在mysql根目录的Data目录下，如果根目录下没有Data文件夹和配置文件，查一下C盘的ProgramData文件夹</p>
</blockquote>
<ol>
<li>linux<br>/etc/my.cnf中mysqld节添加开启binlog的配置<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#第一种方式:</span><br><span class="line">#开启binlog日志</span><br><span class="line">log_bin&#x3D;ON</span><br><span class="line">#binlog日志的基本文件名</span><br><span class="line">log_bin_basename&#x3D;&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql-bin</span><br><span class="line">#binlog文件的索引文件，管理所有binlog文件</span><br><span class="line">log_bin_index&#x3D;&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql-bin.index</span><br><span class="line">#配置serverid</span><br><span class="line">server-id&#x3D;1</span><br><span class="line"> </span><br><span class="line">#第二种方式:</span><br><span class="line">#此一行等同于上面log_bin三行</span><br><span class="line">log-bin&#x3D;&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql-bin</span><br><span class="line">#配置serverid</span><br><span class="line">server-id&#x3D;1</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="binlog其他配置"><a href="#binlog其他配置" class="headerlink" title="binlog其他配置"></a>binlog其他配置</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">#设置日志三种格式：STATEMENT、ROW、MIXED 。</span><br><span class="line">binlog_format &#x3D; ROW</span><br><span class="line">#设置日志路径，注意路经需要mysql用户有权限写</span><br><span class="line">log-bin &#x3D; &#x2F;data&#x2F;mysql&#x2F;logs&#x2F;mysql-bin.log</span><br><span class="line">#设置binlog清理时间</span><br><span class="line">expire_logs_days &#x3D; 7</span><br><span class="line">#binlog每个日志文件大小</span><br><span class="line">max_binlog_size &#x3D; 100m</span><br><span class="line">#binlog缓存大小</span><br><span class="line">binlog_cache_size &#x3D; 4m</span><br><span class="line">#最大binlog缓存大小</span><br><span class="line">max_binlog_cache_size &#x3D; 512m</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>binlog</title>
    <url>/2022/04/20/database-mysql-notes-binlog-binlog/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>1、一般来说开启binlog日志大概会有1%的性能损耗。</p>
<p>启用binlog，通过配置 /etc/my.cnf 或 /etc/mysql/mysql.conf.d/mysqld.cnf 配置文件的 log-bin 选项：</p>
<p>2、在配置文件中加入 log-bin 配置，表示启用binlog，如果没有给定值，写成 log-bin=，则默认名称为主机名。（注：名称若带有小数点，则只取第一个小数点前的部分作为名称）</p>
<p>[mysqld]</p>
<p>log-bin=my-binlog-name</p>
<p>3、也可以通过 SET SQL_LOG_BIN=1命令来启用 binlog，通过 SET SQL_LOG_BIN=0 命令停用 binlog。启用 binlog 之后须重启MySQL才能生效。</p>
<p>以上就是mysql Binlog日志的启用，希望对大家有所帮助。更多mysql学习指路：MySQL</p>
<p>推荐操作系统：windows7系统、mysql5.8、DELL G3电脑</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>binlog开启</title>
    <url>/2022/04/20/database-mysql-notes-binlog-binlog%E6%97%A5%E5%BF%97%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h1><p>MySQL主从复制：MySQL Replication在Master端开启binlog，Master把它的二进制日志传递给slaves来达到master-slave数据一致的目的<br>数据恢复：通过使用 mysqlbinlog工具来使恢复数据</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>binlog日志三种模式</title>
    <url>/2022/04/20/database-mysql-notes-binlog-binlog%E6%97%A5%E5%BF%97%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<pre><code>mysql查看binlog日志: https://blog.csdn.net/m0_46426259/article/details/122215958
</code></pre><hr>
<h1 id="三种记录格式"><a href="#三种记录格式" class="headerlink" title="三种记录格式"></a>三种记录格式</h1><p>STATEMENT：基于SQL语句的复制（statement-based replication, SBR）<br>ROW：基于行的复制（row-based replication, RBR）<br>MIXED：混合模式复制（mixed-based replication, MBR）</p>
<blockquote>
<p> 在 MySQL 5.7.7 之前，默认的格式是 STATEMENT，<br> 在 MySQL 5.7.7 及更高版本中，默认值是 ROW。日志格式通过 binlog-format 指定，如 binlog-format=STATEMENT、binlog-format=ROW、binlog-format=MIXED。</p>
</blockquote>
<p>Statement<br>每一条会修改数据的sql都会记录在binlog中</p>
<p>优点：不需要记录每一行的变化，减少了binlog日志量，节约了IO, 提高了性能。</p>
<p>缺点：由于记录的只是执行语句，为了这些语句能在slave上正确运行，因此还必须记录每条语句在执行的时候的一些相关信息，以保证所有语句能在slave得到和在master端执行的时候相同的结果。另外mysql的复制，像一些特定函数的功能，slave与master要保持一致会有很多相关问题。</p>
<p>Row<br>5.1.5版本的MySQL才开始支持 row level 的复制,它不记录sql语句上下文相关信息，仅保存哪条记录被修改。</p>
<p>优点： binlog中可以不记录执行的sql语句的上下文相关的信息，仅需要记录那一条记录被修改成什么了。所以row的日志内容会非常清楚的记录下每一行数据修改的细节。而且不会出现某些特定情况下的存储过程，或function，以及trigger的调用和触发无法被正确复制的问题.</p>
<p>缺点:所有的执行的语句当记录到日志中的时候，都将以每行记录的修改来记录，这样可能会产生大量的日志内容。</p>
<p>注：将二进制日志格式设置为ROW时，有些更改仍然使用基于语句的格式，包括所有DDL语句，例如CREATE TABLE， ALTER TABLE，或 DROP TABLE。</p>
<p>Mixed<br>从5.1.8版本开始，MySQL提供了Mixed格式，实际上就是Statement与Row的结合。<br>在Mixed模式下，一般的语句修改使用statment格式保存binlog，如一些函数，statement无法完成主从复制的操作，则采用row格式保存binlog，MySQL会根据执行的每一条具体的sql语句来区分对待记录的日志形式，也就是在Statement和Row之间选择一种。</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>binlog常用命令</title>
    <url>/2022/04/20/database-mysql-notes-binlog-binlog%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 查看binlog是否开启( ON 表示开启）</span><br><span class="line">show variables like &#39;log_%&#39;;</span><br><span class="line">#只查看第一个binlog文件的内容</span><br><span class="line">show binlog events;  </span><br><span class="line">#查看指定binlog文件的内容</span><br><span class="line">show binlog events &#96;&#96;in &#39;mysql-bin.000002&#39;&#96;&#96;; </span><br><span class="line">#获取binlog文件列表</span><br><span class="line">show binary logs;  </span><br><span class="line">#查看当前正在写入的binlog文件</span><br><span class="line">show master status;</span><br></pre></td></tr></table></figure>
<h1 id="常用命令2"><a href="#常用命令2" class="headerlink" title="常用命令2"></a>常用命令2</h1><h2 id="查看-my-cnf-位置"><a href="#查看-my-cnf-位置" class="headerlink" title="查看 my.cnf 位置"></a>查看 my.cnf 位置</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Windows\System32&gt;mysql --help | grep &#39;Default options&#39; -A 1</span><br><span class="line">Default options are read from the following files in the given order:</span><br><span class="line">C:\WINDOWS\my.ini C:\WINDOWS\my.cnf C:\my.ini C:\my.cnf C:\Program Files\MySQL\MySQL Server 5.5\my.ini C:\Program Files\MySQL\MySQL Server 5.5\my.cnf</span><br></pre></td></tr></table></figure>
<h1 id="常用命令3"><a href="#常用命令3" class="headerlink" title="常用命令3"></a>常用命令3</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># OFF：关闭   ON：开启</span><br><span class="line">SHOW VARIABLES LIKE &#39;log_bin&#39;;</span><br><span class="line"># 查看日志模式</span><br><span class="line">show variables like &quot;%binlog_format%&quot;;</span><br><span class="line"># 设置日志模式</span><br><span class="line">set global binlog_format&#x3D;&#39;MIXED&#39;;</span><br><span class="line"># 查看二进制日志文件</span><br><span class="line">show binary logs;</span><br></pre></td></tr></table></figure>
<h1 id="常用命令4"><a href="#常用命令4" class="headerlink" title="常用命令4"></a>常用命令4</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 是否启用binlog日志</span><br><span class="line">show variables like &#39;log_bin&#39;;</span><br><span class="line"></span><br><span class="line"># 查看详细的日志配置信息</span><br><span class="line">show global variables like &#39;%log%&#39;;</span><br><span class="line"></span><br><span class="line"># mysql数据存储目录</span><br><span class="line">show variables like &#39;%dir%&#39;;</span><br><span class="line"></span><br><span class="line"># 查看binlog的目录</span><br><span class="line">show global variables like &quot;%log_bin%&quot;;</span><br><span class="line"></span><br><span class="line"># 查看当前服务器使用的biglog文件及大小</span><br><span class="line">show binary logs;</span><br><span class="line"></span><br><span class="line"># 查看主服务器使用的biglog文件及大小</span><br><span class="line"></span><br><span class="line"># 查看最新一个binlog日志文件名称和Position</span><br><span class="line">show master status;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 事件查询命令</span><br><span class="line"># IN &#39;log_name&#39; ：指定要查询的binlog文件名(不指定就是第一个binlog文件)</span><br><span class="line"># FROM pos ：指定从哪个pos起始点开始查起(不指定就是从整个文件首个pos点开始算)</span><br><span class="line"># LIMIT [offset,] ：偏移量(不指定就是0)</span><br><span class="line"># row_count ：查询总条数(不指定就是所有行)</span><br><span class="line">show binlog events [IN &#39;log_name&#39;] [FROM pos] [LIMIT [offset,] row_count];</span><br><span class="line"></span><br><span class="line"># 查看 binlog 内容</span><br><span class="line">show binlog events;</span><br><span class="line"></span><br><span class="line"># 查看具体一个binlog文件的内容 （in 后面为binlog的文件名）</span><br><span class="line">show binlog events in &#39;master.000003&#39;;</span><br><span class="line"></span><br><span class="line"># 设置binlog文件保存事件，过期删除，单位天</span><br><span class="line">set global expire_log_days&#x3D;3; </span><br><span class="line"></span><br><span class="line"># 删除当前的binlog文件</span><br><span class="line">reset master; </span><br><span class="line"></span><br><span class="line"># 删除slave的中继日志</span><br><span class="line">reset slave;</span><br><span class="line"></span><br><span class="line"># 删除指定日期前的日志索引中binlog日志文件</span><br><span class="line">purge master logs before &#39;2019-03-09 14:00:00&#39;;</span><br><span class="line"></span><br><span class="line"># 删除指定日志文件</span><br><span class="line">purge master logs to &#39;master.000003&#39;;</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>binlog开启</title>
    <url>/2022/04/20/database-mysql-notes-binlog-binlog%E6%97%A5%E5%BF%97%E7%AD%96%E7%95%A5/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="策略"><a href="#策略" class="headerlink" title="策略"></a>策略</h1><p>写 Binlog 的时机<br>对支持事务的引擎如InnoDB而言，必须要提交了事务才会记录binlog。binlog 什么时候刷新到磁盘跟参数 sync_binlog 相关。</p>
<p>如果设置为0，则表示MySQL不控制binlog的刷新，由文件系统去控制它缓存的刷新；</p>
<p>如果设置为不为0的值，则表示每 sync_binlog 次事务，MySQL调用文件系统的刷新操作刷新binlog到磁盘中。</p>
<p>设为1是最安全的，在系统故障时最多丢失一个事务的更新，但是会对性能有所影响。</p>
<p>如果 sync_binlog=0 或 sync_binlog大于1，当发生电源故障或操作系统崩溃时，可能有一部分已提交但其binlog未被同步到磁盘的事务会被丢失，恢复程序将无法恢复这部分事务。</p>
<p>在MySQL 5.7.7之前，默认值 sync_binlog 是0，MySQL 5.7.7和更高版本使用默认值1，这是最安全的选择。一般情况下会设置为100或者0，牺牲一定的一致性来获取更好的性能。</p>
<h2 id="文件及扩展"><a href="#文件及扩展" class="headerlink" title="文件及扩展"></a>文件及扩展</h2><p>binlog日志包括两类文件:</p>
<p>二进制日志索引文件（文件名后缀为.index）用于记录所有有效的的二进制文件</p>
<p>二进制日志文件（文件名后缀为.00000*）记录数据库所有的DDL和DML语句事件</p>
<p>binlog是一个二进制文件集合，每个binlog文件以一个4字节的魔数开头，接着是一组Events:</p>
<p>魔数：0xfe62696e对应的是0xfebin；</p>
<p>Event：每个Event包含header和data两个部分；header提供了Event的创建时间，哪个服务器等信息，data部分提供的是针对该Event的具体信息，如具体数据的修改；</p>
<p>第一个Event用于描述binlog文件的格式版本，这个格式就是event写入binlog文件的格式；</p>
<p>其余的Event按照第一个Event的格式版本写入；</p>
<p>最后一个Event用于说明下一个binlog文件；</p>
<p>binlog的索引文件是一个文本文件，其中内容为当前的binlog文件列表</p>
<p>当遇到以下3种情况时，MySQL会重新生成一个新的日志文件，文件序号递增：</p>
<p>MySQL服务器停止或重启时</p>
<p>使用 flush logs 命令；</p>
<p>当 binlog 文件大小超过 max_binlog_size 变量的值时；</p>
<p>max_binlog_size 的最小值是4096字节，最大值和默认值是 1GB (1073741824字节)。事务被写入到binlog的一个块中，所以它不会在几个二进制日志之间被拆分。<br>因此，如果你有很大的事务，为了保证事务的完整性，不可能做切换日志的动作，只能将该事务的日志都记录到当前日志文件中，直到事务结束，你可能会看到binlog文件大于 max_binlog_size 的情况。</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>查找my.cnf位置</title>
    <url>/2022/04/20/database-mysql-notes-binlog-%E6%9F%A5%E6%89%BEmy-cnf%E4%BD%8D%E7%BD%AE/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="通过服务查找"><a href="#通过服务查找" class="headerlink" title="通过服务查找"></a>通过服务查找</h1><ol>
<li>cmd -&gt; services.msc</li>
<li>右键 MySQL -&gt; 属性 -&gt; 可执行文件路径：<br><img src="images/mysql可执行文件路径.png" alt=""></li>
</ol>
<h1 id="命令查找"><a href="#命令查找" class="headerlink" title="命令查找"></a>命令查找</h1><ol>
<li>先打开mysql控制台<br><a href="./mysql控制台.md"></a></li>
<li>查看 my.cnf 位置<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Windows\System32&gt;mysql --help | grep &#39;Default options&#39; -A 1</span><br><span class="line">Default options are read from the following files in the given order:</span><br><span class="line">C:\WINDOWS\my.ini C:\WINDOWS\my.cnf C:\my.ini C:\my.cnf C:\Program Files\MySQL\MySQL Server 5.5\my.ini C:\Program Files\MySQL\MySQL Server 5.5\my.cnf</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql控制台</title>
    <url>/2022/04/20/database-mysql-notes-binlog-mysql%E6%8E%A7%E5%88%B6%E5%8F%B0/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h1><p>在环境变量Path中添加：<br>C:\Program Files\MySQL\MySQL Server 5.5\bin</p>
<h1 id="打开cmd窗口"><a href="#打开cmd窗口" class="headerlink" title="打开cmd窗口"></a>打开cmd窗口</h1><p>在C:\Windows\System32\文件夹下搜索 cmd 并打开cmd窗口<br>C:\Windows\System32\cmd.exe</p>
<h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><p>mysql –help<br>执行验证是否配置成功</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown设置字体大小、颜色、类型、加粗</title>
    <url>/2022/04/12/tool-MD%E6%96%87%E4%BB%B6-Markdown%E8%AE%BE%E7%BD%AE%E5%AD%97%E4%BD%93%E5%A4%A7%E5%B0%8F%E3%80%81%E9%A2%9C%E8%89%B2%E3%80%81%E7%B1%BB%E5%9E%8B%E3%80%81%E5%8A%A0%E7%B2%97/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="改变字体大小"><a href="#改变字体大小" class="headerlink" title="改变字体大小"></a>改变字体大小</h1><p>size：规定文本的尺寸大小，取值范围为1~7 ，浏览器默认值是 3。注意，size=50也是可以显示的，但与7的字体大小一样<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;font size&#x3D;1&gt;字体大小size&#x3D;1&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font size&#x3D;3&gt;字体大小size&#x3D;3&lt;&#x2F;font&gt;</span><br></pre></td></tr></table></figure></p>
<h1 id="改变字体颜色"><a href="#改变字体颜色" class="headerlink" title="改变字体颜色"></a>改变字体颜色</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;font color&#x3D;red&gt;红色&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;&quot;blue&quot;&gt;蓝色&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;Yellow&gt;黄色&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;YellowGreen&gt;黄绿色&lt;&#x2F;font&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;font color&#x3D;#ff0000&gt;红色&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;#00ff00&gt;绿色&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;#0000ff&gt;蓝色&lt;&#x2F;font&gt;</span><br></pre></td></tr></table></figure>
<h1 id="改变字体类型"><a href="#改变字体类型" class="headerlink" title="改变字体类型"></a>改变字体类型</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;font face&#x3D;&quot;黑体&quot;&gt;黑体&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;宋体&quot;&gt;宋体&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;仿宋&quot;&gt;仿宋&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;幼圆&quot;&gt;幼圆&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;楷书&quot;&gt;楷书&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;华文行楷&quot;&gt;华文行楷&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;华文隶书&quot;&gt;华文隶书&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;华文新魏&quot;&gt;华文新魏&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;华文彩云&quot;&gt;华文彩云&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;华文琥珀&quot;&gt;华文琥珀&lt;&#x2F;font&gt;</span><br></pre></td></tr></table></figure>
<h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;center&gt;&lt;font size&#x3D;10 face&#x3D;&quot;华文行楷&quot;&gt;非业务原因重开&lt;&#x2F;font&gt;&lt;&#x2F;center&gt;</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>md</category>
      </categories>
      <tags>
        <tag>md</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown设置字体大小、颜色、类型、加粗</title>
    <url>/2022/04/12/tool-mappingStruct-Mapper%E6%B3%A8%E8%A7%A3%E4%B8%ADuses%E5%92%8Cimports%E5%8F%82%E6%95%B0%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="uses"><a href="#uses" class="headerlink" title="uses"></a>uses</h1><p>使用其他手动编写的或者其他Mapper接口覆写相关的转换方法，不能循环引用<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Mapper</span>(uses=DateMapper<span class="class">.<span class="keyword">class</span>)</span></span><br></pre></td></tr></table></figure></p>
<h1 id="imports"><a href="#imports" class="headerlink" title="imports"></a>imports</h1><p>引用相关类，允许通过mapping.expression()、mapping.defaultExpression()直接使用这些类型<br>```java<br>@Mapper(imports = DateUtil.class)<br>public interface UserConvert {<br>    UserConvert INSTANCE = Mappers.getMapper(UserConvert.class);<br>    @Mappings({<br>            @Mapping(source = “name”, target = “userName”),<br>            // 以指定方法转换属性，这里如果不使用imports，则需要写全引用类包路径<br>            @Mapping(target = “birthday”, expression = “java(DateUtil.formatDate(entity.getBirthday()))”)<br>    })<br>    UserVO toVO(User entity);<br>}</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>mappingStruct</category>
      </categories>
      <tags>
        <tag>mappingStruct</tag>
      </tags>
  </entry>
  <entry>
    <title>swagger设置账号密码</title>
    <url>/2022/04/07/swagger-swagger%E8%AE%BE%E7%BD%AE%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>swagger ui：<a href="https://github.com/xiaoymin/swagger-bootstrap-ui" target="_blank" rel="noopener">https://github.com/xiaoymin/swagger-bootstrap-ui</a></strong></li>
</ul>
<hr>
<h1 id="swagger设置账号密码"><a href="#swagger设置账号密码" class="headerlink" title="swagger设置账号密码"></a>swagger设置账号密码</h1><ol>
<li>pom.xml<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- swagger --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.github.xiaoymin&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;swagger-bootstrap-ui&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.9.6&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;!-- swagger2 start --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.springfox&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springfox-swagger2&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.8.0&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.springfox&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springfox-swagger-ui&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.8.0&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure></li>
<li>注意 swagger-bootstrap-ui和knife4j-spring-boot-starter会冲突</li>
<li>swagger配置<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Slf4j</span><br><span class="line">@Configuration</span><br><span class="line">@EnableSwagger2</span><br><span class="line">&#x2F;&#x2F;@EnableKnife4j</span><br><span class="line">@EnableSwaggerBootstrapUI</span><br><span class="line">public class Swagger2Config  &#123;</span><br><span class="line">    &#x2F;**</span><br><span class="line">         * 全局参数</span><br><span class="line">         *</span><br><span class="line">         * @return List&lt;Parameter&gt;</span><br><span class="line">         *&#x2F;</span><br><span class="line">        private List&lt;Parameter&gt; parameter() &#123;</span><br><span class="line">            List&lt;Parameter&gt; params &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line">            params.add(new ParameterBuilder().name(&quot;token&quot;)</span><br><span class="line">                    .description(&quot;认证令牌&quot;)</span><br><span class="line">                    .modelRef(new ModelRef(&quot;string&quot;))</span><br><span class="line">                    .parameterType(&quot;header&quot;)</span><br><span class="line">                    .required(false).build());</span><br><span class="line">            return params;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>application.properties配置<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">swagger.basic.enable&#x3D;true</span><br><span class="line">swagger.basic.username&#x3D;admin</span><br><span class="line">swagger.basic.password&#x3D;123456</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="全局配置文件"><a href="#全局配置文件" class="headerlink" title="全局配置文件"></a>全局配置文件</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.xx.yy.adaptor.rest.config;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;import com.github.xiaoymin.knife4j.spring.annotations.EnableKnife4j;</span><br><span class="line">import com.github.xiaoymin.swaggerbootstrapui.annotations.EnableSwaggerBootstrapUI;</span><br><span class="line">import lombok.extern.slf4j.Slf4j;</span><br><span class="line">import org.springframework.beans.factory.annotation.Value;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import springfox.documentation.builders.ApiInfoBuilder;</span><br><span class="line">import springfox.documentation.builders.ParameterBuilder;</span><br><span class="line">import springfox.documentation.builders.PathSelectors;</span><br><span class="line">import springfox.documentation.builders.RequestHandlerSelectors;</span><br><span class="line">import springfox.documentation.schema.ModelRef;</span><br><span class="line">import springfox.documentation.service.ApiInfo;</span><br><span class="line">import springfox.documentation.service.Contact;</span><br><span class="line">import springfox.documentation.service.Parameter;</span><br><span class="line">import springfox.documentation.spi.DocumentationType;</span><br><span class="line">import springfox.documentation.spring.web.plugins.Docket;</span><br><span class="line">import springfox.documentation.swagger2.annotations.EnableSwagger2;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author : Daiyin.Zhang</span><br><span class="line"> * @version ：$Id: Swagger2Config.java v 0.1 2021&#x2F;3&#x2F;31 10:43 Daiyin.Zhang Exp $</span><br><span class="line"> * @description : swagger2 config</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Slf4j</span><br><span class="line">@Configuration</span><br><span class="line">@EnableSwagger2</span><br><span class="line">&#x2F;&#x2F;@EnableKnife4j</span><br><span class="line">@EnableSwaggerBootstrapUI</span><br><span class="line">public class Swagger2Config  &#123;</span><br><span class="line"></span><br><span class="line">    @Value(&quot;$&#123;xx.center.env&#125;&quot;)</span><br><span class="line">    private String xxCenterEnv;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 全局参数</span><br><span class="line">     *</span><br><span class="line">     * @return List&lt;Parameter&gt;</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private List&lt;Parameter&gt; parameter() &#123;</span><br><span class="line">        List&lt;Parameter&gt; params &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line">        params.add(new ParameterBuilder().name(&quot;token&quot;)</span><br><span class="line">                .description(&quot;认证令牌&quot;)</span><br><span class="line">                .modelRef(new ModelRef(&quot;string&quot;))</span><br><span class="line">                .parameterType(&quot;header&quot;)</span><br><span class="line">                .required(false).build());</span><br><span class="line">        return params;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public Docket createRestApi() &#123;</span><br><span class="line">        return new Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .groupName(&quot;XX系统普通接口管理&quot;)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                .select()</span><br><span class="line">                .apis(RequestHandlerSelectors.basePackage(&quot;com.xx.yy.adaptor.rest.web&quot;))</span><br><span class="line">                &#x2F;&#x2F;可以根据url路径设置哪些请求加入文档，忽略哪些请求</span><br><span class="line">                .paths(PathSelectors.any())</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private ApiInfo apiInfo() &#123;</span><br><span class="line">        return new ApiInfoBuilder()</span><br><span class="line">                .title(String.format(&quot;xx center API - %s &quot;, xxCenterEnv))</span><br><span class="line">                .description(&quot;XX系统相关API，使用JSON格式传输数据&quot;)</span><br><span class="line">                .version(&quot;1.0&quot;)</span><br><span class="line">                .contact(new Contact(&quot;张代银&quot;, &quot;&quot;, &quot;zhangdaiyin.cool@163.com&quot;))</span><br><span class="line">                .license(&quot;The Apache License, Version 2.0&quot;)</span><br><span class="line">                .licenseUrl(&quot;http:&#x2F;&#x2F;www.apache.org&#x2F;licenses&#x2F;LICENSE-2.0.html&quot;)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>swagger</category>
      </categories>
      <tags>
        <tag>swagger</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql事务、锁、隔离级别</title>
    <url>/2022/04/07/database-mysql-notes-16-mysql%E4%BA%8B%E5%8A%A1%E3%80%81%E9%94%81%E3%80%81%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="mysql事务、锁、隔离级别"><a href="#mysql事务、锁、隔离级别" class="headerlink" title="mysql事务、锁、隔离级别"></a>mysql事务、锁、隔离级别</h1><h2 id="mysql事务"><a href="#mysql事务" class="headerlink" title="mysql事务"></a>mysql事务</h2><h3 id="事务ACID原则"><a href="#事务ACID原则" class="headerlink" title="事务ACID原则"></a>事务ACID原则</h3><h4 id="原子性-Atomicity"><a href="#原子性-Atomicity" class="headerlink" title="原子性(Atomicity)"></a>原子性(Atomicity)</h4><p>事务是数据库的逻辑工作单位，它对数据库的修改要么全部执行，要么全部不执行。</p>
<h4 id="一致性-Consistemcy"><a href="#一致性-Consistemcy" class="headerlink" title="一致性(Consistemcy)"></a>一致性(Consistemcy)</h4><p>事务前后，数据库的状态都满足所有的完整性约束。</p>
<h4 id="隔离性-Isolation"><a href="#隔离性-Isolation" class="headerlink" title="隔离性(Isolation)"></a>隔离性(Isolation)</h4><p>并发执行的事务是隔离的，一个不影响另一个。<br>如果有两个事务，运行在相同的时间内，执行相同的功能，事务的隔离性将确保每一事务在系统中认为只有该事务在使用系统。<br>通过设置数据库的隔离级别，可以达到不同的隔离效果。</p>
<h4 id="持久性-Durability"><a href="#持久性-Durability" class="headerlink" title="持久性(Durability)"></a>持久性(Durability)</h4><p>在事务完成以后，该事务所对数据库所作的更改便持久的保存在数据库库中。</p>
<h2 id="mysql锁"><a href="#mysql锁" class="headerlink" title="mysql锁"></a>mysql锁</h2><p>表锁  行锁<br>排他锁 共享锁</p>
<h2 id="mysql隔离级别"><a href="#mysql隔离级别" class="headerlink" title="mysql隔离级别"></a>mysql隔离级别</h2><h3 id="读已提交"><a href="#读已提交" class="headerlink" title="读已提交"></a>读已提交</h3><h3 id="读未提交"><a href="#读未提交" class="headerlink" title="读未提交"></a>读未提交</h3><h3 id="可重复读"><a href="#可重复读" class="headerlink" title="可重复读"></a>可重复读</h3><h3 id="串行化"><a href="#串行化" class="headerlink" title="串行化"></a>串行化</h3><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>git初始化本地仓库并关联远程仓库</title>
    <url>/2022/04/06/git-%E7%AC%94%E8%AE%B0-git%E5%88%9D%E5%A7%8B%E5%8C%96%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E5%B9%B6%E5%85%B3%E8%81%94%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="git初始化本地仓库并关联远程仓库"><a href="#git初始化本地仓库并关联远程仓库" class="headerlink" title="git初始化本地仓库并关联远程仓库"></a>git初始化本地仓库并关联远程仓库</h1><h2 id="本地仓库操作"><a href="#本地仓库操作" class="headerlink" title="本地仓库操作"></a>本地仓库操作</h2><ol>
<li>初始化仓库并关联远程仓库<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git init  &#x2F;*初始化一个版本库*&#x2F;</span><br><span class="line">git remote add origin git@github.com:your_account&#x2F;repository.git &#x2F;*连接远程仓库your_account为远程仓库的账号，repository为远程仓库名*&#x2F;</span><br></pre></td></tr></table></figure></li>
<li>推送到远程仓库<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push -u origin master &#x2F;*把本地库与远程库关联，并且把本地库的master分支推送到远程库中去*&#x2F;</span><br><span class="line"></span><br><span class="line"># 报错</span><br><span class="line">$ git push -u origin master</span><br><span class="line">error: src refspec master does not match any</span><br><span class="line">error: failed to push some refs to &#39;git@github.com:diabolo-hub&#x2F;py-practicing.git&#39;</span><br></pre></td></tr></table></figure></li>
<li>git push –set-upstream origin master<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git push --set-upstream origin master</span><br><span class="line">error: src refspec master does not match any</span><br><span class="line">error: failed to push some refs to &#39;git@github.com:diabolo-hub&#x2F;py-practicing.git&#39;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><ol>
<li>本地仓库创建README.md（远程仓库没有README.md）<br>创建完README.md文件后，执行如下操作<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zhangdaiyin@LAPTOP-BKST47D9 MINGW64 &#x2F;e&#x2F;workspace-all&#x2F;workspace-py&#x2F;projects-practicing (master)</span><br><span class="line">$ git add README.md</span><br><span class="line"></span><br><span class="line">zhangdaiyin@LAPTOP-BKST47D9 MINGW64 &#x2F;e&#x2F;workspace-all&#x2F;workspace-py&#x2F;projects-practicing (master)</span><br><span class="line">$ git commit -m &quot;first commit&quot;</span><br><span class="line">[master (root-commit) 7f8065e] first commit</span><br><span class="line"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class="line"> create mode 100644 README.md</span><br><span class="line"></span><br><span class="line">zhangdaiyin@LAPTOP-BKST47D9 MINGW64 &#x2F;e&#x2F;workspace-all&#x2F;workspace-py&#x2F;projects-practicing (master)</span><br><span class="line">$ git branch -M main    &#x2F;&#x2F; 分支重命名（本地和远程）</span><br><span class="line"></span><br><span class="line">zhangdaiyin@LAPTOP-BKST47D9 MINGW64 &#x2F;e&#x2F;workspace-all&#x2F;workspace-py&#x2F;projects-practicing (main)</span><br><span class="line">$ git push -u origin main</span><br><span class="line">Enumerating objects: 3, done.</span><br><span class="line">Counting objects: 100% (3&#x2F;3), done.</span><br><span class="line">Writing objects: 100% (3&#x2F;3), 218 bytes | 218.00 KiB&#x2F;s, done.</span><br><span class="line">Total 3 (delta 0), reused 0 (delta 0)</span><br><span class="line">To github.com:diabolo-hub&#x2F;py-practicing.git</span><br><span class="line"> * [new branch]      main -&gt; main</span><br><span class="line">Branch &#39;main&#39; set up to track remote branch &#39;main&#39; from &#39;origin&#39;.</span><br></pre></td></tr></table></figure>
<blockquote>
<p>然后可再使用git add . 添加并推送所有的文件<br>其中省略了 git remote add origin git@…..，因为之前已经添加了</p>
</blockquote>
</li>
</ol>
<h1 id="github上的解决办法"><a href="#github上的解决办法" class="headerlink" title="github上的解决办法"></a>github上的解决办法</h1><ol>
<li>在命令行上创建一个新的存储库<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &quot;# ttt&quot; &gt;&gt; README.md</span><br><span class="line">git init</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git branch -M main</span><br><span class="line">git remote add origin git@github.com:diabolo-hub&#x2F;ttt.git</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure></li>
<li>从命令行推送现有存储库<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote add origin git@github.com:diabolo-hub&#x2F;ttt.git</span><br><span class="line">git branch -M main</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>将本地JAR包上传到maven私服</title>
    <url>/2022/03/19/java-maven-%E5%B0%86%E6%9C%AC%E5%9C%B0JAR%E5%8C%85%E4%B8%8A%E4%BC%A0%E5%88%B0maven%E7%A7%81%E6%9C%8D/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<pre><code>将本地JAR包上传到maven私服: https://blog.csdn.net/samHuangLiang/article/details/88218610
</code></pre><hr>
<p>#案例<br>本地 xx-bopsdk-3.4.197.jar 上传到私服</p>
<p>命令格式如下：</p>
<p>mvn deploy:deploy-file -Dmaven.test.skip=true -Dfile=E:\jar\alipay-sdk-java.jar -DgroupId=com.alipay -DartifactId=sdk-java -Dversion=1.0.0-SNAPSHOT -Dpackaging=jar -DrepositoryId=snapshots -Durl=<a href="http://10.0.1.xx:8080/nexus/content/repositories/snapshots/" target="_blank" rel="noopener">http://10.0.1.xx:8080/nexus/content/repositories/snapshots/</a><br>各参数代表含义为：</p>
<p>-Dmaven.test.skip=true                               //跳过编译、测试<br>-Dfile=E:\jar\alipay-sdk-java.jar      //jar包文件地址,绝对路径<br>-DgroupId=com.alipay                                 //gruopId,可自定义<br>-DartifactId=sdk-java                                //artifactId,可自定义<br>-Dversion                                            //版本号<br>-Dpackaging                                          //打包方式<br>-DrepositoryId                                       //远程库服务器ID<br>-Durl                                                //远程库服务器地址</p>
<h1 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h1><p>mvn deploy:deploy-file -Dmaven.test.skip=true -Dfile=D:\repository\com\xx\xx-bopsdk-3.4.197.jar -DgroupId=com.xx -DartifactId=xx-bopsdk -Dversion=3.4.197-SNAPSHOT -Dpackaging=jar -DrepositoryId=cicsc-snapshots -Durl=<a href="http://ip:8081/repository/cicsc-snapshots/" target="_blank" rel="noopener">http://ip:8081/repository/cicsc-snapshots/</a></p>
<h1 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h1><ol>
<li>snapshots仓库会存在策略只能允许snapshots镜像</li>
</ol>
<h1 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h1><p>gruopId : com.xx<br>artifactId: xx-bopsdk<br>version: 3.4.197-SNAPSHOT</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>java</category>
        <category>maven</category>
      </categories>
      <tags>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>字符编码、版本等</title>
    <url>/2022/03/19/database-mysql-config-1-%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E3%80%81%E7%89%88%E6%9C%AC%E7%AD%89/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="查看mysql字符编码"><a href="#查看mysql字符编码" class="headerlink" title="查看mysql字符编码"></a>查看mysql字符编码</h1><p>show variables like ‘%character%’;<br>常用的utf8和utf8mb4</p>
<blockquote>
<p><a href="https://www.cnblogs.com/yangmingxianshen/p/7999428.html" target="_blank" rel="noopener">MySQL查看和修改字符集的方法</a></p>
</blockquote>
<h1 id="查看MYSQL所支持的字符集"><a href="#查看MYSQL所支持的字符集" class="headerlink" title="查看MYSQL所支持的字符集"></a>查看MYSQL所支持的字符集</h1><p>show charset;</p>
<h2 id="查看库的字符集"><a href="#查看库的字符集" class="headerlink" title="查看库的字符集"></a>查看库的字符集</h2><p>show database status from 库名 like  表名;</p>
<h2 id="查看表的字符集"><a href="#查看表的字符集" class="headerlink" title="查看表的字符集"></a>查看表的字符集</h2><p>show table status from 库名 like  表名;</p>
<h2 id="查看表中所有列的字符集"><a href="#查看表中所有列的字符集" class="headerlink" title="查看表中所有列的字符集"></a>查看表中所有列的字符集</h2><p>show full columns from 表名;</p>
<h1 id="设置字符集"><a href="#设置字符集" class="headerlink" title="设置字符集"></a>设置字符集</h1><p>设置字符集一般有两种方法，一种是在创建表的时候设置字符集，另一种是表建成之后修改字符集。  </p>
<h2 id="创建时指定"><a href="#创建时指定" class="headerlink" title="创建时指定"></a>创建时指定</h2><ol>
<li>创建时指定字符集<br>创建库的时候指定字符集：<br>语法：create database 库名 default character set=字符集；  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create database db2 default character set&#x3D;utf8</span><br></pre></td></tr></table></figure></li>
<li>创建表的时候指定字符集<br>语法：create table 表名（属性）default character set = 字符集；  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; create table test1(id int(6),name char(10)) default character set &#x3D; &#39;gbk&#39;;</span><br><span class="line">Query OK, 0 rows affected (0.39 sec)</span><br></pre></td></tr></table></figure>
<h2 id="修改字符集"><a href="#修改字符集" class="headerlink" title="修改字符集"></a>修改字符集</h2></li>
<li>修改全局字符集<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*建立连接使用的编码*&#x2F;</span><br><span class="line">set character_set_connection&#x3D;utf8;</span><br><span class="line">&#x2F;*数据库的编码*&#x2F;</span><br><span class="line">set character_set_database&#x3D;utf8;</span><br><span class="line">&#x2F;*结果集的编码*&#x2F;</span><br><span class="line">set character_set_results&#x3D;utf8;</span><br><span class="line">&#x2F;*数据库服务器的编码*&#x2F;</span><br><span class="line">set character_set_server&#x3D;utf8;</span><br><span class="line"></span><br><span class="line">set character_set_system&#x3D;utf8;</span><br><span class="line"></span><br><span class="line">set collation_connection&#x3D;utf8;</span><br><span class="line"></span><br><span class="line">set collation_database&#x3D;utf8;</span><br><span class="line"></span><br><span class="line">set collation_server&#x3D;utf8;</span><br></pre></td></tr></table></figure></li>
<li>修改库的字符集<br>语法：alter database 库名 default character set 字符集;  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alter database shiyan default character set gbk;</span><br></pre></td></tr></table></figure></li>
<li>修改表的字符集<br>语法：alter table 表名 convert to character set 字符集;  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alter table test1 convert to character set utf8;</span><br></pre></td></tr></table></figure></li>
<li>修改字段的字符集<br>语法：alter table 表名 modify 字段名 字段属性 character set gbk；  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alter table test1 modify name char(10) character set gbk;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h1><p>select version();<br>mysql5.5.3以后才支持utf8mb4  </p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>config</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>增删改查</title>
    <url>/2022/03/19/database-mysql-curd-0-mysql-alter%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="字段-——————–"><a href="#字段-——————–" class="headerlink" title="字段 ——————–"></a>字段 ——————–</h1><h1 id="新增字段"><a href="#新增字段" class="headerlink" title="新增字段"></a>新增字段</h1><p>alter table tableName add column scene_type char(2) null comment ‘类型1移动端,2pc’ after pay_type_cd</p>
<h1 id="删除字段"><a href="#删除字段" class="headerlink" title="删除字段"></a>删除字段</h1><p>ALTER TABLE tableName drop field_name;</p>
<h1 id="修改字段信息（可修改字段名称）"><a href="#修改字段信息（可修改字段名称）" class="headerlink" title="修改字段信息（可修改字段名称）"></a>修改字段信息（可修改字段名称）</h1><h3 id="修改字段类型及注释"><a href="#修改字段类型及注释" class="headerlink" title="修改字段类型及注释"></a>修改字段类型及注释</h3><p>alter table tableName  modify column app_name varchar(20) COMMENT ‘应用的名称’;</p>
<h3 id="修改字段类型"><a href="#修改字段类型" class="headerlink" title="修改字段类型"></a>修改字段类型</h3><p>alter table tableName  modify column app_name text;</p>
<h1 id="仅仅修改字段类型和注释"><a href="#仅仅修改字段类型和注释" class="headerlink" title="仅仅修改字段类型和注释"></a>仅仅修改字段类型和注释</h1><p>alter table tableName modify column schema_code varchar(20) null comment ‘方案编号’</p>
<h1 id="索引-——————"><a href="#索引-——————" class="headerlink" title="索引 ——————"></a>索引 ——————</h1><h1 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h1><p>alter table tableName drop index <code>i_pay_type_config_channel</code>,add index <code>i_pay_type_config_channel</code> (channel_code,channel_platform_no,product_code,type)</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>curd</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>索引</title>
    <url>/2022/03/19/database-mysql-curd-3-Mysql%E5%91%BD%E4%BB%A4alter%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.cnblogs.com/gengyufei/p/12551083.html" target="_blank" rel="noopener">Mysql命令alter</a></p>
<p>alter add命令用来增加表的字段。</p>
<p>alter add命令格式：alter table 表名 add字段 类型 其他;</p>
<p>例如，在表MyClass中添加了一个字段passtest，类型为int(4)，默认值为0：<br>   mysql&gt; alter table MyClass add passtest int(4) default ‘0’;</p>
<p>1) 加索引<br>   mysql&gt; alter table 表名 add index 索引名 (字段名1[，字段名2 …]);</p>
<p>例子： mysql&gt; alter table employee add index emp_name (name);</p>
<p>2) 加主关键字的索引<br>    mysql&gt; alter table 表名 add primary key (字段名);</p>
<p>例子： mysql&gt; alter table employee add primary key(id);</p>
<p>3) 加唯一限制条件的索引<br>   mysql&gt; alter table 表名 add unique 索引名 (字段名);</p>
<p>例子： mysql&gt; alter table employee add unique emp_name2(cardnumber);</p>
<p>4) 删除某个索引<br>   mysql&gt; alter table 表名 drop index 索引名;</p>
<p>例子： mysql&gt;alter table employee drop index emp_name;</p>
<p>5) 增加字段<br>    mysql&gt; ALTER TABLE table_name ADD field_name field_type;</p>
<p>6) 修改原字段名称及类型<br>    mysql&gt; ALTER TABLE table_name CHANGE old_field_name new_field_name field_type;</p>
<p>7) 删除字段<br>    MySQL ALTER TABLE table_name DROP field_name;</p>
<p>全文：<a href="http://c.biancheng.net/cpp/html/1456.html" target="_blank" rel="noopener">http://c.biancheng.net/cpp/html/1456.html</a></p>
<p>8) 修改字段</p>
<p>如果要修改字段的话就用这个：</p>
<p>ALTER TABLE 创建好的表名称 MODIFY COLUMN 创建好的表需要修改的字段 INT AUTO_INCREMENT</p>
<p>全文：<a href="https://zhidao.baidu.com/question/359185899.html" target="_blank" rel="noopener">https://zhidao.baidu.com/question/359185899.html</a></p>
<p>9) 修改字段属性</p>
<p>mysql修改已存在的表增加ID属性为auto_increment自动增长</p>
<p>今天有需要将已经存在表设置自动增长属性<br>具体如下<br>alter table customers change id id int not null auto_increment primary key;</p>
<p>//添加字段并设置主键<br>ALTER TABLE tabelname ADD new_field_id int(5) unsigned default 0 not null auto_increment ,ADD primary key (new_field_id);</p>
<p>全文：<a href="http://www.2cto.com/database/201203/125731.html" target="_blank" rel="noopener">http://www.2cto.com/database/201203/125731.html</a></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>curd</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>查询某个字段重复以及重复的次数</title>
    <url>/2022/03/19/database-mysql-curd-%E6%9F%A5%E8%AF%A2%E6%9F%90%E4%B8%AA%E5%AD%97%E6%AE%B5%E9%87%8D%E5%A4%8D%E4%BB%A5%E5%8F%8A%E9%87%8D%E5%A4%8D%E7%9A%84%E6%AC%A1%E6%95%B0/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>//当count(1) &gt; 1时，才有重复项<br>select name,count(1) from people group by name having count(1) &gt; 1;</p>
<p>//删除除了最小的id意外的重复记录<br>delete from people where id not in (<br>select min(id)) from people group by name having count(*) &gt; 1<br>);</p>
<p>– 来源： <a href="https://www.cnblogs.com/xiaofeng028/p/4098965.html" target="_blank" rel="noopener">https://www.cnblogs.com/xiaofeng028/p/4098965.html</a><br>//三表级联查询 join on<br>select article.aid, article.title, user.username, type.typename<br>from article inner join user<br>on article.uid = user.uid<br>inner join type<br>on article.tid = type.tid<br>;</p>
<p>//三表级联 left join on<br>select article.aid, article.title, user.username, type.typename<br>from article left join user<br>on article.uid = user.uid<br>left join type<br>on article.tid = type.tid;</p>
<p>//三表级联 right join on<br>SELECT article.aid,article.title,user.username,type.typename<br>FROM articleRIGHT JOIN user<br>ON article.uid=user.uid<br>RIGHT JOIN type<br>ON article.tid=type.tid;</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>curd</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>索引</title>
    <url>/2022/03/19/database-mysql-curd-mysql-%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95%E5%92%8C%E5%88%A0%E9%99%A4%E7%B4%A2%E5%BC%95/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.cnblogs.com/llzhang123/p/7889382.html" target="_blank" rel="noopener">mysql 创建索引和删除索引</a></p>
<p>索引的创建可以在CREATE TABLE语句中进行，也可以单独用CREATE INDEX或ALTER TABLE来给表增加索引。删除索引可以利用ALTER TABLE或DROP INDEX语句来实现。<br>（1）使用ALTER TABLE语句创建索引。<br>语法如下：<br>alter table table_name add index index_name (column_list) ;<br>alter table table_name add unique (column_list) ;<br>alter table table_name add primary key (column_list) ;<br>其中包括普通索引、UNIQUE索引和PRIMARY KEY索引3种创建索引的格式，table_name是要增加索引的表名，column_list指出对哪些列进行索引，多列时各列之间用逗号分隔。索引名index_name可选，缺省时，MySQL将根据第一个索引列赋一个名称。另外，ALTER TABLE允许在单个语句中更改多个表，因此可以同时创建多个索引。<br>创建索引的示例如下：<br>mysql&gt; alter table table_test add index index_test1(name) ;<br>Query OK, 2 rows affected (0.08 sec)<br>（2）使用CREATE INDEX语句对表增加索引。<br>能够增加普通索引和UNIQUE索引两种。其格式如下：<br>create index index_name on table_name (column_list) ;<br>create unique index index_name on table_name (column_list) ;</p>
<p>创建索引的示例如下：</p>
<p>mysql&gt;create index index_test2 on table_test(age);</p>
<p>Query OK, 2 rows affected (0.08 sec)</p>
<p>说明：table_name、index_name和column_list具有与ALTER TABLE语句中相同的含义，索引名不可选。另外，不能用CREATE INDEX语句创建PRIMARY KEY索引。<br>（3）删除索引。<br>删除索引可以使用ALTER TABLE或DROP INDEX语句来实现。DROP INDEX可以在ALTER TABLE内部作为一条语句处理，其格式如下：<br>drop index index_name on table_name ;<br>alter table table_name drop index index_name ;<br>alter table table_name drop primary key ;<br>其中，在前面的两条语句中，都删除了table_name中的索引index_name。而在最后一条语句中，只在删除PRIMARY KEY索引中使用，因为一个表只可能有一个PRIMARY KEY索引，因此不需要指定索引名。如果没有创建PRIMARY KEY索引，但表具有一个或多个UNIQUE索引，则MySQL将删除第一个UNIQUE索引。<br>如果从表中删除某列，则索引会受影响。对于多列组合的索引，如果删除其中的某列，则该列也会从索引中删除。如果删除组成索引的所有列，则整个索引将被删除。<br>删除索引的操作，如下面的代码：<br>mysql&gt; drop index name on table_test ;<br>Query OK, 2 rows affected (0.08 sec)</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>curd</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>字段</title>
    <url>/2022/03/19/database-mysql-curd-4-Mysql%E5%91%BD%E4%BB%A4alter-add%EF%BC%9A%E5%A2%9E%E5%8A%A0%E8%A1%A8%E7%9A%84%E5%AD%97%E6%AE%B5/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/hechaojie_com/article/details/82382716" target="_blank" rel="noopener">Mysql命令alter add：增加表的字段</a></p>
<p>alter add命令用来增加表的字段。</p>
<p>alter add命令格式：alter table 表名 add字段 类型 其他;</p>
<p>例如，在表MyClass中添加了一个字段passtest，类型为int(4)，默认值为0：<br>   mysql&gt; alter table MyClass add passtest int(4) default ‘0’;</p>
<p>1) 加索引<br>   mysql&gt; alter table 表名 add index 索引名 (字段名1[，字段名2 …]);</p>
<p>例子： mysql&gt; alter table employee add index emp_name (name);</p>
<p>2) 加主关键字的索引<br>    mysql&gt; alter table 表名 add primary key (字段名);</p>
<p>例子： mysql&gt; alter table employee add primary key(id);</p>
<p>3) 加唯一限制条件的索引<br>   mysql&gt; alter table 表名 add unique 索引名 (字段名);</p>
<p>例子： mysql&gt; alter table employee add unique emp_name2(cardnumber);</p>
<p>4) 删除某个索引<br>   mysql&gt; alter table 表名 drop index 索引名;</p>
<p>例子： mysql&gt;alter table employee drop index emp_name;</p>
<p>5) 增加字段<br>    mysql&gt; ALTER TABLE table_name ADD field_name field_type;</p>
<p>6) 修改原字段名称及类型<br>    mysql&gt; ALTER TABLE table_name CHANGE old_field_name new_field_name field_type;</p>
<p>7) 删除字段<br>    MySQL ALTER TABLE table_name DROP field_name;</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>curd</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>查询某字段长度大于x的数据</title>
    <url>/2022/03/19/database-mysql-curd-%E6%9F%A5%E8%AF%A2%E6%9F%90%E5%AD%97%E6%AE%B5%E9%95%BF%E5%BA%A6%E5%A4%A7%E4%BA%8Ex%E7%9A%84%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="length-origin-msg-gt-22"><a href="#length-origin-msg-gt-22" class="headerlink" title="length(origin_msg) &gt;= 22"></a>length(origin_msg) &gt;= 22</h1><p>select * from t_fin_pay_issue_log<br>where pay_channel_cd = 30 and error_category_cd = ‘voucherServiceHandler’ and length(origin_msg) &gt;= 22<br>order by rand() limit 10;</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>curd</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>查看存储引擎</title>
    <url>/2022/03/19/database-mysql-config-3-%E6%9F%A5%E7%9C%8B%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="看你的mysql现在已提供什么存储引擎"><a href="#看你的mysql现在已提供什么存储引擎" class="headerlink" title="看你的mysql现在已提供什么存储引擎:"></a>看你的mysql现在已提供什么存储引擎:</h1><p>show engines;</p>
<h1 id="看你的mysql当前默认的存储引擎"><a href="#看你的mysql当前默认的存储引擎" class="headerlink" title="看你的mysql当前默认的存储引擎:"></a>看你的mysql当前默认的存储引擎:</h1><p>show variables like ‘%storage_engine%’;</p>
<h1 id="你要看某个表用了什么引擎-在显示结果里参数engine后面的就表示该表当前用的存储引擎"><a href="#你要看某个表用了什么引擎-在显示结果里参数engine后面的就表示该表当前用的存储引擎" class="headerlink" title="你要看某个表用了什么引擎(在显示结果里参数engine后面的就表示该表当前用的存储引擎):"></a>你要看某个表用了什么引擎(在显示结果里参数engine后面的就表示该表当前用的存储引擎):</h1><p>show create table 表名;</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>config</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>随机查询数据</title>
    <url>/2022/03/19/database-mysql-curd-%E9%9A%8F%E6%9C%BA%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="order-by-rand"><a href="#order-by-rand" class="headerlink" title="order by rand()"></a>order by rand()</h1><p>select * from t_fin_pay_issue_log<br>where pay_channel_cd = 30 and error_category_cd = ‘voucherServiceHandler’ and length(origin_msg) &gt;= 22<br>order by rand() limit 10;</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>curd</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>索引</title>
    <url>/2022/03/19/database-mysql-curd-%E7%B4%A2%E5%BC%95%E6%93%8D%E4%BD%9C%E5%8F%8Aselect%E6%9F%A5%E8%AF%A2%E6%89%80%E6%9C%89%E5%92%8CfileName%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="新增索引"><a href="#新增索引" class="headerlink" title="新增索引"></a>新增索引</h1><p>alter table t_fin_wro_identifier add index index_test(bill_detail_no) ;<br>create index index_test on t_fin_wro_identifier (bill_detail_no) ;<br>create unique index index_test on t_fin_wro_identifier (bill_detail_no) ;</p>
<h1 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h1><p>drop index index_test on t_fin_wro_identifier ;<br>alter table table_name drop index index_name ;<br>alter table table_name drop primary key ;</p>
<h1 id="index索引描述"><a href="#index索引描述" class="headerlink" title="index索引描述"></a>index索引描述</h1><p>index索引允许 字段列多个列值为 空  或者 为 null</p>
<h1 id="unique-index索引描述"><a href="#unique-index索引描述" class="headerlink" title="unique index索引描述"></a>unique index索引描述</h1><p>index索引允许 字段列多个列值为 空  或者 为 null</p>
<h1 id="select-和-select-fieldName-的区别"><a href="#select-和-select-fieldName-的区别" class="headerlink" title="select(*) 和 select(fieldName) 的区别"></a>select(*) 和 select(fieldName) 的区别</h1><ol>
<li>select(*)查询出所有满足where条件的行，包括为空或为null的列值行</li>
<li>select(fieldName)查询出所有满足where条件的行，但“无法统计列值为 null 的行”，可以统计“列值为 空 的行”</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>curd</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>there can be only oneTIMESTAMP column with CURRENT_TIMESTAMP in DEFAULT or ON UPDATE</title>
    <url>/2022/03/19/database-mysql-excep-there-can-be-only-oneTIMESTAMP-column-with-CURRENT-TIMESTAMP-in-DEFAULT-or-ON-UPDATE/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.cnblogs.com/xujian2016/p/10614884.html" target="_blank" rel="noopener">解决</a><br>问题：<br>there can be only oneTIMESTAMP column with CURRENT_TIMESTAMP in DEFAULT or ON UPDATE  </p>
<p>分析：<br>出现这种问题的原因是：<br>同一个建表语句中，不能出现两个及以上的 “默认当前时间戳” 语句。</p>
<p>解决办法：  </p>
<p><code>created</code> timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT ‘创建时间’,<br><code>modified</code> timestamp NOT NULL DEFAULT ‘0000-00-00 00:00:00’ COMMENT ‘修改时间’,</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>excep</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Unable to load authentication plugin &#39;caching_sha2_password&#39;</title>
    <url>/2022/03/19/database-mysql-excep-Unable-to-resolve-name-org-hibernate-dialect-MySQL55Dialect-as-strategy-org-hibernate-dialect-Dialect/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>[Unable to resolve name [org.hibernate.dialect.MySQL55Dialect] as strategy [org.hibernate.dialect.Dialect]]</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>excep</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Unable to load authentication plugin &#39;caching_sha2_password&#39;</title>
    <url>/2022/03/19/database-mysql-excep-Unable-to-load-authentication-plugin-caching-sha2-password/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.cnblogs.com/wanguncle/p/11432868.html" target="_blank" rel="noopener">Unable to load authentication plugin ‘caching_sha2_password’.错误</a></p>
<p>springboot jpa数据源启动失败：Unable to load authentication plugin ‘caching_sha2_password’</p>
<p>报错详情如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java.sql.SQLException: Unable to load authentication plugin &#39;caching_sha2_password&#39;.</span><br><span class="line">	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:868) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:864) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1746) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2191) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2222) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2017) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.ConnectionImpl.&lt;init&gt;(ConnectionImpl.java:779) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.JDBC4Connection.&lt;init&gt;(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_91]</span><br><span class="line">	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_91]</span><br><span class="line">	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_91]</span><br><span class="line">	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_91]</span><br><span class="line">	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:389) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310) ~[tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203) ~[tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:735) [tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:667) [tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:482) [tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.ConnectionPool.&lt;init&gt;(ConnectionPool.java:154) [tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118) [tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107) [tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131) [tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111) [spring-jdbc-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77) [spring-jdbc-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:326) [spring-jdbc-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:366) [spring-jdbc-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:72) [spring-boot-autoconfigure-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:139) [spring-boot-autoconfigure-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:105) [spring-boot-autoconfigure-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$a321d678.CGLIB$jpaVendorAdapter$6(&lt;generated&gt;) [spring-boot-autoconfigure-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$a321d678$$FastClassBySpringCGLIB$$4101d322.invoke(&lt;generated&gt;) [spring-boot-autoconfigure-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) [spring-core-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358) [spring-context-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$a321d678.jpaVendorAdapter(&lt;generated&gt;) [spring-boot-autoconfigure-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_91]</span><br><span class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_91]</span><br><span class="line">	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_91]</span><br><span class="line">	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_91]</span><br><span class="line">	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078) [spring-context-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:857) [spring-context-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543) [spring-context-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at com.yale.commonpracticing.CommonPracticingApplication.main(CommonPracticingApplication.java:10) [classes&#x2F;:na]</span><br><span class="line"></span><br><span class="line">2019-11-18 21:50:30.695  WARN 2076 --- [           main] o.s.b.a.orm.jpa.DatabaseLookup           : Unable to determine jdbc url from datasource</span><br><span class="line"></span><br><span class="line">org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Unable to load authentication plugin &#39;caching_sha2_password&#39;.</span><br><span class="line">	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:339) ~[spring-jdbc-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:366) ~[spring-jdbc-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:72) ~[spring-boot-autoconfigure-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:139) [spring-boot-autoconfigure-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:105) [spring-boot-autoconfigure-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$a321d678.CGLIB$jpaVendorAdapter$6(&lt;generated&gt;) [spring-boot-autoconfigure-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$a321d678$$FastClassBySpringCGLIB$$4101d322.invoke(&lt;generated&gt;) [spring-boot-autoconfigure-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) [spring-core-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358) [spring-context-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$a321d678.jpaVendorAdapter(&lt;generated&gt;) [spring-boot-autoconfigure-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_91]</span><br><span class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_91]</span><br><span class="line">	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_91]</span><br><span class="line">	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_91]</span><br><span class="line">	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078) [spring-context-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:857) [spring-context-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543) [spring-context-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at com.yale.commonpracticing.CommonPracticingApplication.main(CommonPracticingApplication.java:10) [classes&#x2F;:na]</span><br><span class="line">Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Unable to load authentication plugin &#39;caching_sha2_password&#39;.</span><br><span class="line">	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:326) ~[spring-jdbc-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	... 61 common frames omitted</span><br><span class="line">Caused by: java.sql.SQLException: Unable to load authentication plugin &#39;caching_sha2_password&#39;.</span><br><span class="line">	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:868) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:864) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1746) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2191) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2222) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2017) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.ConnectionImpl.&lt;init&gt;(ConnectionImpl.java:779) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.JDBC4Connection.&lt;init&gt;(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_91]</span><br><span class="line">	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_91]</span><br><span class="line">	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_91]</span><br><span class="line">	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_91]</span><br><span class="line">	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:389) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310) ~[tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203) ~[tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:735) ~[tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:667) ~[tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:482) ~[tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.ConnectionPool.&lt;init&gt;(ConnectionPool.java:154) ~[tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118) ~[tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107) ~[tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131) ~[tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111) ~[spring-jdbc-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77) ~[spring-jdbc-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	... 62 common frames omitted</span><br><span class="line"></span><br><span class="line">2019-11-18 21:50:30.704 ERROR 2076 --- [           main] o.a.tomcat.jdbc.pool.ConnectionPool      : Unable to create initial connections of pool.</span><br><span class="line"></span><br><span class="line">java.sql.SQLException: Unable to load authentication plugin &#39;caching_sha2_password&#39;.</span><br><span class="line">	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:868) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:864) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1746) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2191) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2222) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2017) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.ConnectionImpl.&lt;init&gt;(ConnectionImpl.java:779) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.JDBC4Connection.&lt;init&gt;(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_91]</span><br><span class="line">	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_91]</span><br><span class="line">	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_91]</span><br><span class="line">	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_91]</span><br><span class="line">	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:389) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310) ~[tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203) ~[tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:735) [tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:667) [tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:482) [tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.ConnectionPool.&lt;init&gt;(ConnectionPool.java:154) [tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118) [tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107) [tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131) [tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111) [spring-jdbc-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77) [spring-jdbc-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:342) [spring-jdbc-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:137) [spring-boot-autoconfigure-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getDefaultDdlAuto(JpaProperties.java:226) [spring-boot-autoconfigure-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getOrDeduceDdlAuto(JpaProperties.java:214) [spring-boot-autoconfigure-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getAdditionalProperties(JpaProperties.java:190) [spring-boot-autoconfigure-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.access$000(JpaProperties.java:142) [spring-boot-autoconfigure-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.getHibernateProperties(JpaProperties.java:126) [spring-boot-autoconfigure-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at com.yale.commonpracticing.config.JpaDatasourceConfig.getVendorProperties(JpaDatasourceConfig.java:60) [classes&#x2F;:na]</span><br><span class="line">	at com.yale.commonpracticing.config.JpaDatasourceConfig.JpaEntityManagerFactory(JpaDatasourceConfig.java:45) [classes&#x2F;:na]</span><br><span class="line">	at com.yale.commonpracticing.config.JpaDatasourceConfig$$EnhancerBySpringCGLIB$$98571c3e.CGLIB$JpaEntityManagerFactory$2(&lt;generated&gt;) [classes&#x2F;:na]</span><br><span class="line">	at com.yale.commonpracticing.config.JpaDatasourceConfig$$EnhancerBySpringCGLIB$$98571c3e$$FastClassBySpringCGLIB$$75b16edd.invoke(&lt;generated&gt;) [classes&#x2F;:na]</span><br><span class="line">	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) [spring-core-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358) [spring-context-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at com.yale.commonpracticing.config.JpaDatasourceConfig$$EnhancerBySpringCGLIB$$98571c3e.JpaEntityManagerFactory(&lt;generated&gt;) [classes&#x2F;:na]</span><br><span class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_91]</span><br><span class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_91]</span><br><span class="line">	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_91]</span><br><span class="line">	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_91]</span><br><span class="line">	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078) [spring-context-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:857) [spring-context-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543) [spring-context-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at com.yale.commonpracticing.CommonPracticingApplication.main(CommonPracticingApplication.java:10) [classes&#x2F;:na]</span><br><span class="line"></span><br><span class="line">2019-11-18 21:50:30.720  INFO 2076 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit &#39;primaryPersistenceUnit&#39;</span><br><span class="line">2019-11-18 21:50:30.728  INFO 2076 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [</span><br><span class="line">	name: primaryPersistenceUnit</span><br><span class="line">	...]</span><br><span class="line">2019-11-18 21:50:30.772  INFO 2076 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core &#123;5.0.12.Final&#125;</span><br><span class="line">2019-11-18 21:50:30.773  INFO 2076 --- [           main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found</span><br><span class="line">2019-11-18 21:50:30.774  INFO 2076 --- [           main] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist</span><br><span class="line">2019-11-18 21:50:30.801  INFO 2076 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations &#123;5.0.1.Final&#125;</span><br><span class="line">2019-11-18 21:50:30.893 ERROR 2076 --- [           main] o.a.tomcat.jdbc.pool.ConnectionPool      : Unable to create initial connections of pool.</span><br><span class="line"></span><br><span class="line">java.sql.SQLException: Unable to load authentication plugin &#39;caching_sha2_password&#39;.</span><br><span class="line">	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:868) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:864) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1746) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2191) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2222) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2017) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.ConnectionImpl.&lt;init&gt;(ConnectionImpl.java:779) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.JDBC4Connection.&lt;init&gt;(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_91]</span><br><span class="line">	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_91]</span><br><span class="line">	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_91]</span><br><span class="line">	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_91]</span><br><span class="line">	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:389) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.44.jar:5.1.44]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310) ~[tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203) ~[tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:735) [tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:667) [tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:482) [tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.ConnectionPool.&lt;init&gt;(ConnectionPool.java:154) [tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118) [tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107) [tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131) [tomcat-jdbc-8.5.23.jar:na]</span><br><span class="line">	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122) [hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180) [hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68) [hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) [hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) [hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:254) [hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:228) [hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207) [hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) [hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) [hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) [hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207) [hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) [hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) [hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:847) [hibernate-entitymanager-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:874) [hibernate-entitymanager-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:60) [spring-orm-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:353) [spring-orm-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:370) [spring-orm-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:359) [spring-orm-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078) [spring-context-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:857) [spring-context-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543) [spring-context-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at com.yale.commonpracticing.CommonPracticingApplication.main(CommonPracticingApplication.java:10) [classes&#x2F;:na]</span><br><span class="line"></span><br><span class="line">2019-11-18 21:50:30.893  WARN 2076 --- [           main] o.h.e.j.e.i.JdbcEnvironmentInitiator     : HHH000342: Could not obtain connection to query metadata : Unable to load authentication plugin &#39;caching_sha2_password&#39;.</span><br><span class="line">2019-11-18 21:50:30.894  WARN 2076 --- [           main] ationConfigEmbeddedWebApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#39;JpaEntityManagerFactory&#39; defined in class path resource [com&#x2F;yale&#x2F;commonpracticing&#x2F;config&#x2F;JpaDatasourceConfig.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]</span><br><span class="line">2019-11-18 21:50:30.896  INFO 2076 --- [           main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]</span><br><span class="line">2019-11-18 21:50:30.904  INFO 2076 --- [           main] utoConfigurationReportLoggingInitializer : </span><br><span class="line"></span><br><span class="line">Error starting ApplicationContext. To display the auto-configuration report re-run your application with &#39;debug&#39; enabled.</span><br><span class="line">2019-11-18 21:50:30.908 ERROR 2076 --- [           main] o.s.boot.SpringApplication               : Application startup failed</span><br><span class="line"></span><br><span class="line">org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#39;JpaEntityManagerFactory&#39; defined in class path resource [com&#x2F;yale&#x2F;commonpracticing&#x2F;config&#x2F;JpaDatasourceConfig.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628) ~[spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197) ~[spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078) ~[spring-context-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:857) ~[spring-context-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543) ~[spring-context-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) ~[spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]</span><br><span class="line">	at com.yale.commonpracticing.CommonPracticingApplication.main(CommonPracticingApplication.java:10) [classes&#x2F;:na]</span><br><span class="line">Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]</span><br><span class="line">	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264) ~[hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:228) ~[hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207) ~[hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207) ~[hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:847) ~[hibernate-entitymanager-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:874) ~[hibernate-entitymanager-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:60) ~[spring-orm-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:353) ~[spring-orm-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:370) ~[spring-orm-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:359) ~[spring-orm-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687) ~[spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624) ~[spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]</span><br><span class="line">	... 16 common frames omitted</span><br><span class="line">Caused by: org.hibernate.HibernateException: Access to DialectResolutionInfo cannot be null when &#39;hibernate.dialect&#39; not set</span><br><span class="line">	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:100) ~[hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:54) ~[hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:137) ~[hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:254) ~[hibernate-core-5.0.12.Final.jar:5.0.12.Final]</span><br><span class="line">	... 32 common frames omitted</span><br></pre></td></tr></table></figure></p>
<p>更改过后启动成功！！！</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>excep</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>索引相关命令</title>
    <url>/2022/03/19/database-mysql-index-0-%E7%B4%A2%E5%BC%95%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="查看mysql版本"><a href="#查看mysql版本" class="headerlink" title="查看mysql版本"></a>查看mysql版本</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select version(); -- 5.5.62-log</span><br></pre></td></tr></table></figure>
<h1 id="查看是否开启索引下推"><a href="#查看是否开启索引下推" class="headerlink" title="查看是否开启索引下推"></a>查看是否开启索引下推</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select @@optimizer_switch;</span><br><span class="line">-- 内容如下</span><br><span class="line">index_merge&#x3D;on,index_merge_union&#x3D;on,index_merge_sort_union&#x3D;on,index_merge_intersection&#x3D;on,engine_condition_pushdown&#x3D;on</span><br><span class="line">-- 描述如下（mysql.5.6之前无该属性配置）</span><br><span class="line">set &#x3D;&quot;index_condition_pushdown&#x3D;off&quot;; 关闭</span><br><span class="line">set &#x3D;&quot;index_condition_pushdown&#x3D;on&quot;; 开启</span><br></pre></td></tr></table></figure>
<h2 id="开启关闭索引下推"><a href="#开启关闭索引下推" class="headerlink" title="开启关闭索引下推"></a>开启关闭索引下推</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set optimizer_switch&#x3D;&#39;index_condition_pushdown&#x3D;off&#39;; &#x2F;&#x2F; 关闭</span><br><span class="line">set optimizer_switch&#x3D;&#39;index_condition_pushdown&#x3D;on&#39;; &#x2F;&#x2F; 开启</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>index</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Unable to resolve name [org.hibernate.dialect.MySQL55Dialect] as strategy [org.hibernate.dialect.Dialect]</title>
    <url>/2022/03/19/database-mysql-excep-Unable-to-load-authentication-plugin-caching-sha2-password-%E9%94%99%E8%AF%AF/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.cnblogs.com/wanguncle/p/11432868.html" target="_blank" rel="noopener">Unable to load authentication plugin ‘caching_sha2_password’.错误</a></p>
<p>今天整合SSM时，在创建连接时一直报错 Unable to load authentication plugin ‘caching_sha2_password’. 研究了很久发现是因为MySQL的版本问题</p>
<p>我目前用的MySQL 8.0.15，据网上所说，5.x版本和8.x的区别如下：</p>
<p>5.X版本是：default_authentication_plugin=mysql_native_password</p>
<p>8.x版本就是：default_authentication_plugin=caching_sha2_password</p>
<p>但是后来看到一篇博客说将Maven引入的MySQL驱动的jar包改为(8.0.11)版本的jar（我目前用的5.1）看完后马上将自己的jar包下载一个8.0.11发现还是不行</p>
<p>继续百度….又看到说将加密规则重新改一下，又打开MySQL改密码</p>
<p>输入如下代码：(password换成相应密码)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 修改密码为用不过期</span><br><span class="line">ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;password&#39; PASSWORD EXPIRE NEVER;</span><br><span class="line">-- 修改密码并指定加密规则为mysql_native_password</span><br><span class="line">ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;password&#39;;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line">-- 刷新权限</span><br><span class="line">alter user &#39;root&#39;@&#39;localhost&#39; identified by &#39;password&#39;;</span><br></pre></td></tr></table></figure>
<p>这里有个坑需要注意，一定看好自己的root用户对应的地址，默认是localhost，我之前小组需要改成了%，这里运行 ALTER USER ‘root’@’localhost’ IDENTIFIED BY ‘password’ PASSWORD EXPIRE NEVER;时一直报错</p>
<p>后来改成ALTER USER ‘root’@’%’ IDENTIFIED BY ‘password’ PASSWORD EXPIRE NEVER; 成功运行。</p>
<p>改完加密规则成功运行，后来又发现，在改完加密规则之后，就算MySQL驱动jar包仍然是5.1也可以使用：<br><img src="001.png" alt="avator"></p>
<p><img src="002.png" alt="avator"></p>
<p><img src="003.png" alt=""></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>excep</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>索引下推</title>
    <url>/2022/03/19/database-mysql-index-1-%E7%B4%A2%E5%BC%95%E4%B8%8B%E6%8E%A8/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="索引下推（英文全称Index-Condition-Pushdown，简称ICP）"><a href="#索引下推（英文全称Index-Condition-Pushdown，简称ICP）" class="headerlink" title="索引下推（英文全称Index Condition Pushdown，简称ICP）"></a>索引下推（英文全称Index Condition Pushdown，简称ICP）</h1><h2 id="表"><a href="#表" class="headerlink" title="表"></a>表</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE &#96;student&#96; (</span><br><span class="line">  &#96;id&#96; int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  &#96;name&#96; varchar(255)  DEFAULT NULL,</span><br><span class="line">  &#96;age&#96; int  DEFAULT 0,</span><br><span class="line">  &#96;class&#96; varchar(255)  DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (&#96;id&#96;),</span><br><span class="line">  KEY &#96;index_two&#96; (&#96;name&#96;,&#96;age&#96;)</span><br><span class="line">) ENGINE&#x3D;InnoDB;</span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F;这张表增加一个复合索引</span><br><span class="line"> (&#96;name&#96;,&#96;age&#96;)</span><br></pre></td></tr></table></figure>
<h2 id="判断是否走索引"><a href="#判断是否走索引" class="headerlink" title="判断是否走索引"></a>判断是否走索引</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">explain select * from student where name like &#39;peng%&#39; and age &#x3D; 23;</span><br></pre></td></tr></table></figure>
<h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><ol>
<li>5.5.62-log版本<br><img src="1-索引下推/mysql-5.5.62-无索引下推.png" alt=""><blockquote>
<p>Extra: Using where</p>
</blockquote>
</li>
<li>5.6及之后<br><img src="1-索引下推/mysq.-5.6-索引下推.png" alt=""><blockquote>
<p>可以看到Extra字段显示为USING INDEX CONDITION，这就表明这个SQL使用了索引下推</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在MySQL5.6之前，只能从name字段中找出符合条件的行然后开始回表，到聚集索引上找出数据行，再对age字段进行对比，把符合条件的数据加入到结果集中。</span><br><span class="line"></span><br><span class="line">在MySQL5.6引入了索引下推优化，在索引的遍历过程中，对索引中包含字段先做判断，这里对age字段进行判断。直接将age字段不满足的数据行排除，从而减少回表的次数。</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ol>
<h1 id="问答区"><a href="#问答区" class="headerlink" title="问答区"></a>问答区</h1><ol>
<li><p>问题1 当复合索引列为（name，age，address）时 以下SQL能使用索引吗？</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from student where name like &#39;peng%&#39; and age &#x3D; 23;</span><br></pre></td></tr></table></figure>
<p>可以，遇到like会中断后续元素的匹配，但只能使用name这个字段，mysql会一直向右匹配直到遇到范围查询（&gt;、&lt;、between、like）就停止匹配。<br>范围列可以用到索引，但是范围列后面的列无法用到索引。<br>即索引最多用于一个范围列，因此如果查询条件中有两个范围列则无法全用到索引。</p>
</li>
<li><p>问题2 索引下推只能存在联合索引里吗？<br>是的，非联合索引无法使用索引下推。</p>
</li>
<li><p>问题3 索引下推在哪些情况下无法使用？</p>
</li>
</ol>
<ul>
<li>下推条件遇到子查询</li>
<li>下推条件遇到函数</li>
<li>非InnoDB表和MyISAM表</li>
</ul>
<ol>
<li>问题4 索引下推如何开启和关闭？<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 索引下推默认是开启的</span><br><span class="line">set optimizer_switch&#x3D;&#39;index_condition_pushdown&#x3D;off&#39;; &#x2F;&#x2F; 关闭</span><br><span class="line">set optimizer_switch&#x3D;&#39;index_condition_pushdown&#x3D;on&#39;; &#x2F;&#x2F; 开启</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>索引下推在非主键索引上的优化，可以有效减少回表的次数，大大提升了查询的效率，在平时工作中可以根据业务情况通过优化索引来达到使用索引下推，提高业务吞吐量。</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>index</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql的默认隔离级别</title>
    <url>/2022/03/19/database-mysql-notes-11-mysql%E7%9A%84%E9%BB%98%E8%AE%A4%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.cnblogs.com/shoshana-kong/p/10516404.html" target="_blank" rel="noopener">mysql的默认隔离级别</a></p>
<p>1.数据库默认隔离级别:  mysql —repeatable,oracle,sql server —read commited</p>
<p>2.mysql binlog的格式三种：statement,row,mixed</p>
<p>3.为什么mysql用的是repeatable而不是read committed:在 5.0之前只有statement一种格式，而主从复制存在了大量的不一致，故选用repeatable</p>
<p>4.为什么默认的隔离级别都会选用read commited 原因有二：repeatable存在间隙锁会使死锁的概率增大，在RR隔离级别下，条件列未命中索引会锁表！而在RC隔离级别下，只锁行</p>
<p>2.在RC级用别下，主从复制用什么binlog格式：row格式，是基于行的复制！</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql中utf8和utf8mb4区别</title>
    <url>/2022/03/19/database-mysql-notes-10-mysql%E4%B8%ADutf8%E5%92%8Cutf8mb4%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.cnblogs.com/Renyi-Fan/p/11065692.html" target="_blank" rel="noopener">mysql中utf8和utf8mb4区别</a></p>
<h1 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h1><p>utf8最多3个字节（中文汉字）<br>utf8mb4最多4个字节（中文汉字）  </p>
<p>utf8mb4是utf8的超集  </p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>UUID、自增ID、雪花算法哪个更合适</title>
    <url>/2022/03/19/database-mysql-notes-12-UUID%E3%80%81%E8%87%AA%E5%A2%9EID%E3%80%81%E9%9B%AA%E8%8A%B1%E7%AE%97%E6%B3%95%E5%93%AA%E4%B8%AA%E6%9B%B4%E5%90%88%E9%80%82/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/chendasheng/article/details/115222589" target="_blank" rel="noopener">使用雪花id或uuid作为Mysql主键，被老板怼了一顿！</a></p>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>分别是user_auto_key，user_uuid，user_random_key，分别表示自动增长的主键，uuid作为主键，随机key作为主键，<br>其它我们完全保持不变。根据控制变量法，我们只把每个表的主键使用不同的策略生成，而其他的字段完全一样，然后测试一下表的插入速度和查询速度：</p>
<h1 id="效率测试结果"><a href="#效率测试结果" class="headerlink" title="效率测试结果"></a>效率测试结果</h1><p><img src="images/自增id、uuid、雪花算法效率测试结果1.png" alt=""></p>
<h2 id="在已有数据量为130W的时候：我们再来测试一下插入10w数据，看看会有什么结果："><a href="#在已有数据量为130W的时候：我们再来测试一下插入10w数据，看看会有什么结果：" class="headerlink" title="在已有数据量为130W的时候：我们再来测试一下插入10w数据，看看会有什么结果："></a>在已有数据量为130W的时候：我们再来测试一下插入10w数据，看看会有什么结果：</h2><p><img src="images/自增id、uuid、雪花算法效率测试结果2.png" alt="">  </p>
<blockquote>
<p>可以看出在数据量100W左右的时候,uuid的插入效率垫底，并且在后序增加了130W的数据，uudi的时间又直线下降。<br>时间占用量总体可以打出的效率排名为：auto_key&gt;random_key&gt;uuid,uuid的效率最低，<br>在数据量较大的情况下，效率直线下滑。那么为什么会出现这样的现象呢？带着疑问,我们来探讨一下这个问题： </p>
</blockquote>
<h1 id="使用uuid和自增id的索引结构对比"><a href="#使用uuid和自增id的索引结构对比" class="headerlink" title="使用uuid和自增id的索引结构对比"></a>使用uuid和自增id的索引结构对比</h1><h2 id="使用自增id的内部结构"><a href="#使用自增id的内部结构" class="headerlink" title="使用自增id的内部结构"></a>使用自增id的内部结构</h2><ol>
<li>下一条记录就会写入新的页中，一旦数据按照这种顺序的方式加载，主键页就会近乎于顺序的记录填满，提升了页面的最大填充率，不会有页的浪费</li>
<li>新插入的行一定会在原有的最大数据行下一行,mysql定位和寻址很快，不会为计算新行的位置而做出额外的消耗</li>
<li>减少了页分裂和碎片的产生<h2 id="使用uuid的索引内部结构"><a href="#使用uuid的索引内部结构" class="headerlink" title="使用uuid的索引内部结构"></a>使用uuid的索引内部结构</h2></li>
<li>写入的目标页很可能已经刷新到磁盘上并且从缓存上移除，或者还没有被加载到缓存中，innodb在插入之前不得不先找到并从磁盘读取目标页到内存中，这将导致大量的随机IO </li>
<li>因为写入是乱序的,innodb不得不频繁的做页分裂操作,以便为新的行分配空间,页分裂导致移动大量的数据，一次插入最少需要修改三个页以上</li>
<li>由于频繁的页分裂，页会变得稀疏并被不规则的填充，最终会导致数据会有碎片<br>在把随机值（uuid和雪花id）载入到聚簇索引(innodb默认的索引类型)以后,有时候会需要做一次OPTIMEIZE TABLE来重建表并优化页的填充，这将又需要一定的时间消耗。<blockquote>
<p>结论：使用innodb应该尽可能的按主键的自增顺序插入，并且尽可能使用单调的增加的聚簇键的值来插入新行</p>
<h2 id="使用自增id的缺点"><a href="#使用自增id的缺点" class="headerlink" title="使用自增id的缺点"></a>使用自增id的缺点</h2></blockquote>
</li>
<li>别人一旦爬取你的数据库,就可以根据数据库的自增id获取到你的业务增长信息，很容易分析出你的经营情况</li>
<li>对于高并发的负载，innodb在按主键进行插入的时候会造成明显的锁争用，主键的上界会成为争抢的热点，因为所有的插入都发生在这里，并发插入会导致间隙锁竞争</li>
<li>Auto_Increment锁机制会造成自增锁的抢夺,有一定的性能损失<blockquote>
<p>附：<br>Auto_increment的锁争抢问题，如果要改善需要调优innodb_autoinc_lock_mode的配置</p>
</blockquote>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL数据页以及页分裂机制</title>
    <url>/2022/03/19/database-mysql-notes-13-MySQL%E6%95%B0%E6%8D%AE%E9%A1%B5%E4%BB%A5%E5%8F%8A%E9%A1%B5%E5%88%86%E8%A3%82%E6%9C%BA%E5%88%B6/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.cnblogs.com/ZhuChangwu/p/14041410.html" target="_blank" rel="noopener">MySQL数据页以及页分裂机制</a></p>
<p><a href="https://www.pianshen.com/article/89941890104/" target="_blank" rel="noopener">mysql页分裂</a></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql支持hash索引吗</title>
    <url>/2022/03/19/database-mysql-notes-15-mysql%E6%94%AF%E6%8C%81hash%E7%B4%A2%E5%BC%95%E5%90%97/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/shenjian58/article/details/102493421" target="_blank" rel="noopener">mysql自适应哈希索引</a></p>
<h1 id="mysql支持hash索引吗"><a href="#mysql支持hash索引吗" class="headerlink" title="mysql支持hash索引吗"></a>mysql支持hash索引吗</h1><ol>
<li>InnoDB用户无法手动创建哈希索引，这一层上说，InnoDB确实不支持哈希索引；</li>
<li>InnoDB会自调优(self-tuning)，如果判定建立自适应哈希索引(Adaptive Hash Index, AHI)，能够提升查询效率，InnoDB自己会建立相关哈希索引，这一层上说，InnoDB又是支持哈希索引的；</li>
</ol>
<h1 id="什么是自适应哈希索引-Adaptive-Hash-Index-AHI-呢？原理又是怎样的呢？"><a href="#什么是自适应哈希索引-Adaptive-Hash-Index-AHI-呢？原理又是怎样的呢？" class="headerlink" title="什么是自适应哈希索引(Adaptive Hash Index, AHI)呢？原理又是怎样的呢？"></a>什么是自适应哈希索引(Adaptive Hash Index, AHI)呢？原理又是怎样的呢？</h1><h2 id="发起普通索引查询时："><a href="#发起普通索引查询时：" class="headerlink" title="发起普通索引查询时："></a>发起普通索引查询时：</h2><ol>
<li>会先从普通索引查询出主键（上图右边）；</li>
<li>再由主键，从聚集索引上二次遍历定位到记录（上图左边）。</li>
</ol>
<p>不管聚集索引还是普通索引，记录定位的寻路路径(Search Path)都很长。</p>
<h3 id="建立自适应哈希索引"><a href="#建立自适应哈希索引" class="headerlink" title="建立自适应哈希索引"></a>建立自适应哈希索引</h3><p>在MySQL运行的过程中，如果InnoDB发现，有很多SQL存在这类很长的寻路，并且有很多SQL会命中相同的页面(page)，<br>InnoDB会在自己的内存缓冲区(Buffer)里，开辟一块区域，建立自适应哈希所有AHI，以加速查询。</p>
<h2 id="为啥叫“自适应-adaptive-”哈希索引？"><a href="#为啥叫“自适应-adaptive-”哈希索引？" class="headerlink" title="为啥叫“自适应(adaptive)”哈希索引？"></a>为啥叫“自适应(adaptive)”哈希索引？</h2><p>系统自己判断“应该可以加速查询”而建立的，不需要用户手动建立，故称“自适应”。</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql int和varchar查询效率</title>
    <url>/2022/03/19/database-mysql-notes-2-mysql-int%E5%92%8Cvarchar%E6%9F%A5%E8%AF%A2%E6%95%88%E7%8E%87/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://cloud.tencent.com/developer/ask/62018" target="_blank" rel="noopener">mysql int和varchar查询效率</a></p>
<p>INT比较比varchar比较快，因为INT占用的空间比varchars少得多。</p>
<p>对于无索引访问和索引访问，这都是正确的。最快的方法是索引int列。</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql前缀索引</title>
    <url>/2022/03/19/database-mysql-notes-14-mysql%E5%89%8D%E7%BC%80%E7%B4%A2%E5%BC%95/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/u013295276/article/details/79105163" target="_blank" rel="noopener">mysql索引】之前缀索引</a></p>
<h1 id="什么是前缀索引"><a href="#什么是前缀索引" class="headerlink" title="什么是前缀索引"></a>什么是前缀索引</h1><p>有时候需要索引很长的字符(例如BLOB,TEXT,或者很长的VARCHAR)，这样会使得索引又大又慢。  </p>
<h2 id="改良方法有"><a href="#改良方法有" class="headerlink" title="改良方法有:"></a>改良方法有:</h2><ol>
<li>改用哈希索引(这里不讲)。</li>
<li>使用字符串的前几个字符作为索引(即前缀索引)。<blockquote>
<p>下面具体主要说第2种方法，主要思路就是选择足够长的前缀以保证较高的选择性，同时又不能太长(造成空间浪费)。</p>
</blockquote>
</li>
</ol>
<h1 id="确认前缀索引的字符串长度方法"><a href="#确认前缀索引的字符串长度方法" class="headerlink" title="确认前缀索引的字符串长度方法"></a>确认前缀索引的字符串长度方法</h1><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 查询重复次数最多的10条完整城市名称及其数量(图1)</span><br><span class="line">SELECT COUNT(*) cnt, city FROM city_demo GROUP BY city ORDER BY cnt DESC LIMIT 10;</span><br><span class="line">-- 查询重复次数最多的10条城市名称(前3个字符)及其数量,可以发现:前3个字符的相同数量过大,不适合做前缀索引(图2)</span><br><span class="line">SELECT COUNT(*) cnt, LEFT(city,3) pref FROM city_demo GROUP BY pref ORDER BY cnt DESC LIMIT 10;</span><br><span class="line">-- 查询重复次数最多的10条城市名称(前7个字符)及其数量,可以发现:前7个字符的相同数量和完整城市名称很相近了,可以考虑作为做前缀索引(图3)</span><br><span class="line">SELECT COUNT(*) cnt, LEFT(city,7) pref FROM city_demo GROUP BY pref ORDER BY cnt DESC LIMIT 10;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>通过字符不同长度查询结果与完整长度结果匹配，最接近的即可未前缀索引字符长度</p>
<h1 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 计算出完整字符串的选择性(图4)</span><br><span class="line">SELECT COUNT(DISTINCT city)&#x2F;COUNT(*) FROM city_demo;</span><br><span class="line">-- 计算各个前缀的选择性(图5)，然后找出选择性与图4相近的</span><br><span class="line">SELECT </span><br><span class="line">	COUNT(DISTINCT LEFT(city,3))&#x2F;COUNT(*) pref3,</span><br><span class="line">	COUNT(DISTINCT LEFT(city,4))&#x2F;COUNT(*) pref4,</span><br><span class="line">	COUNT(DISTINCT LEFT(city,5))&#x2F;COUNT(*) pref5,</span><br><span class="line">	COUNT(DISTINCT LEFT(city,6))&#x2F;COUNT(*) pref6,</span><br><span class="line">	COUNT(DISTINCT LEFT(city,7))&#x2F;COUNT(*) pref7</span><br><span class="line">FROM city_demo;</span><br></pre></td></tr></table></figure>
<p>完整字符选择性，和不同长度字符选择性比较</p>
</blockquote>
<h1 id="建立前缀索引"><a href="#建立前缀索引" class="headerlink" title="建立前缀索引"></a>建立前缀索引</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALTER TABLE &#96;city_demo&#96; ADD INDEX &#96;idx_city&#96; (&#96;city&#96;(7)) USING BTREE ;</span><br><span class="line">-- 或者这个也行</span><br><span class="line">ALTER TABLE &#96;city_demo&#96; ADD KEY &#96;idx_city&#96; (&#96;city&#96;(7))</span><br><span class="line">-- 又或者直接用Navicat可视化操作也行</span><br></pre></td></tr></table></figure>
<h1 id="前缀索引的优缺点"><a href="#前缀索引的优缺点" class="headerlink" title="前缀索引的优缺点"></a>前缀索引的优缺点</h1><ul>
<li><p>有点</p>
</li>
<li><p>缺点<br>MySQL中无法使用前缀索引进行ORDER BY和GROUP BY，也无法用来进行覆盖扫描</p>
</li>
</ul>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql索引注意点</title>
    <url>/2022/03/19/database-mysql-notes-3-mysql%E7%B4%A2%E5%BC%95%E6%B3%A8%E6%84%8F%E7%82%B9/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ol>
<li>between 走索引情况 <a href="http://www.51testing.com/html/85/132585-860191.html" target="_blank" rel="noopener">http://www.51testing.com/html/85/132585-860191.html</a><br>１）如果表数据量小１４条时，取５条时就会使用索引，否则就使用全表描述<br>２）如果表数据量在１０００左右时，取出超过１８％时，就不会使用索引<br>３）如果表数据量超地１００００时，只要使用between and 都使用索引
　　</li>
<li>in 走索引，建议in(xxx) xxx小于100</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql中delete和truncate区别</title>
    <url>/2022/03/19/database-mysql-notes-5-mysql%E4%B8%ADdelete%E5%92%8Ctruncate%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="delete和truncate区别如下："><a href="#delete和truncate区别如下：" class="headerlink" title="delete和truncate区别如下："></a>delete和truncate区别如下：</h1><p>一、灵活性：delete可以条件删除数据，而truncate只能删除表的所有数据；  </p>
<p>delete from table_test where …   </p>
<p>truncate table table_test   </p>
<p>二、效率：delete效率低于truncate，delete是一行一行地删除，truncate会重建表结构，  </p>
<p>三、事务：truncate是DDL语句，需要drop权限，因此会隐式提交，不能够rollback；delete是DML语句，可以使用rollback回滚。  </p>
<p>四、触发器：truncate 不能触发任何Delete触发器；而delete可以触发delete触发器。  </p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql inner join 去重</title>
    <url>/2022/03/19/database-mysql-notes-1-mysql-inner-join-%E5%8E%BB%E9%87%8D/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/qq_29498555/article/details/79695815" target="_blank" rel="noopener">inner join 数据重复问题</a></p>
<p>SELECT <include refid="fields"></include>,gmt_create<br>FROM t_fin_policy_main<br>WHERE seq_invoice_no IN<br>(SELECT DISTINCT seq_invoice_no FROM t_fin_policy_main WHERE ant_policy_no = #{antPolicyNo} AND is_valid = 1)<br>AND is_valid = 1</p>
<p>// —-<br>  package表的id对应package_product表的package_id，并且两者是一对多的关系，今天想筛选出package表所有id存在于package_product表的记录，第一个想到的就是join</p>
<p>select package.*,package_product.package_id from package join package_product<br>       on(package.id=package_product.package_id);<br>但是有一个问题，数据会重复，比如package_product表有3个相同的package_id就会查找出3条相同的package表记录,<br>加上distinct好像也没用</p>
<p>所以，又想到了子查询，select * from package where id in(select distinct package_id from package_product)，虽然写起来简单，但是这条语句太耗性能了，查找6条记录要好几秒，最后找到了合适的方法</p>
<p>select * from package join (select distinct package_id from package_product) as package_product on(package.id=package_product.package_id)；</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>MySql insert唯一键冲突时候update</title>
    <url>/2022/03/19/database-mysql-notes-9-MySql-insert%E5%94%AF%E4%B8%80%E9%94%AE%E5%86%B2%E7%AA%81%E6%97%B6%E5%80%99update/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/lorry2010/article/details/84466741" target="_blank" rel="noopener">MySql insert唯一键冲突时候update</a></p>
<p>方法一：当唯一键重复时候，执行update操作</p>
<p>INSERT table (auto_id, auto_name) values (1, ‘yourname’) ON DUPLICATE KEY UPDATE auto_name=’yourname’</p>
<p>ON DUPLICATE KEY UPDATE的使用<br>如果您指定了ON DUPLICATE KEY UPDATE，并且插入行后会导致在一个UNIQUE索引或PRIMARY KEY中出现重复值，则执行UPDATE。</p>
<p>方法二：insert ignore 如果中已经存在相同的记录，则忽略当前新数据</p>
<p>INSERT ignore INTO a(id, type)  VALUES  ( 11, 22)</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL的binlog日志详解</title>
    <url>/2022/03/19/database-mysql-notes-8-MySQL%E7%9A%84binlog%E6%97%A5%E5%BF%97%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/king_kgh/article/details/74833539" target="_blank" rel="noopener">MySQL的binlog日志详解</a></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>联合索引使用规则+order by使用</title>
    <url>/2022/03/19/database-mysql-notes-4-%E8%81%94%E5%90%88%E7%B4%A2%E5%BC%95%E4%BD%BF%E7%94%A8%E8%A7%84%E5%88%99-order-by%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.cnblogs.com/xiaoxi/p/8269289.html" target="_blank" rel="noopener">联合索引使用规则+order by使用详解</a></p>
<p>问题：</p>
<p>假设某个表有一个联合索引（c1,c2,c3,c4）以下只能使用该联合索引的c1,c2,c3部分</p>
<p>A where c1=x and c2=x and c4&gt;x and c3=x</p>
<p>B where c1=x and c2=x and c4=x order by c3</p>
<p>C where c1=x and c4= x group by c3,c2</p>
<p>D where c1=? and c5=? order by c2,c3</p>
<p>E where c1=? and c2=? and c5=? order by c2,c3</p>
<p>一、创建测试表和联合索引</p>
<p>创建表t1，有c1到c5共5个字段，特别说明一下，字段类型都是定长char(1) 类型，并且非空，字符集是utf8（与计算索引使用字节数有关）。</p>
<p>复制代码<br>create table t1(<br>c1 char(1) not null default ‘’,<br>c2 char(1) not null default ‘’,<br>c3 char(1) not null default ‘’,<br>c4 char(1) not null default ‘’,<br>c5 char(1) not null default ‘’<br>)engine myisam charset utf8;<br>复制代码<br> 创建联合索引：</p>
<p>alter table t1 add index c1234(c1,c2,c3,c4);<br>插入3条数据：</p>
<p>insert into t1 values(‘a’,’b’,’c’,’d’,’e’),(‘A’,’b’,’c’,’d’,’e’),(‘a’,’B’,’c’,’d’,’e’);</p>
<h1 id="二、分析"><a href="#二、分析" class="headerlink" title="二、分析"></a>二、分析</h1><p>1、A选项</p>
<ul>
<li>使用完整的联合索引，四个字段都使用了</li>
</ul>
<p>2、B选项</p>
<ul>
<li>使用了联合索引（字段C1 和 C2）</li>
<li>order by排序不使用索引，但是利用了这个联合索引(C3）排序</li>
<li>若order by不利用联合索引排序，执行计划Extra会显示：Using filesort 表示在索引之外，需要额外进行外部的排序动作。因为c5的顺序是没有规律的</li>
</ul>
<p>3、C选项</p>
<ul>
<li><p>4、D选项</p>
</li>
</ul>
<p>5、E选项</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql字符串 collate字符串大小写区分</title>
    <url>/2022/03/19/database-mysql-notes-20220916-mysql-collate%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%A7%E5%B0%8F%E5%86%99%E5%8C%BA%E5%88%86/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><ol>
<li>库中存在 test 和 TEST 两条数据，通过如下sql，均能查询出两条数据<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from tba where name &#x3D; &#39;test&#39;;</span><br><span class="line">select * from tba where name &#x3D; &#39;TEST&#39;;</span><br></pre></td></tr></table></figure>
大小写没有被区分查出</li>
</ol>
<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>mysql的表查询大小写是否敏感，取决于字段的collate设置<br>charset是utf8，而utf8的默认collate规则是utf8_general_ci。（可通过show charset命令查看。）<br>*_ci的含义是case insensitive，即不区分大小写</p>
<h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><ol>
<li>查询条件前binary;<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; select * from tba where binary name &#x3D; &#39;test&#39;;</span><br><span class="line">+----+------+-----+------------+</span><br><span class="line">| id | name | age | addtime    |</span><br><span class="line">+----+------+-----+------------+</span><br><span class="line">|  1 | test |  12 | 4294967295 |</span><br><span class="line">+----+------+-----+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;  select * from tba where binary name &#x3D; &#39;TEST&#39;;</span><br><span class="line">Empty set (0.00 sec)</span><br></pre></td></tr></table></figure></li>
<li>可以通过修改字段的collate为utf8_bin; (很多mysql不支持修改，具体的以实际执行结果为准)<br>utf8_bin表示将字符串中的每一个字符用二进制数据存储，区分大小写。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALTER TABLE tba MODIFY COLUMN name VARCHAR(25) CHARACTER  SET utf8 COLLATE utf8_bin;</span><br></pre></td></tr></table></figure>
其他修改方式：(<a href="https://www.cnblogs.com/yubin-huang/p/13601187.html" target="_blank" rel="noopener">https://www.cnblogs.com/yubin-huang/p/13601187.html</a>)<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALTER TABLE t_inv_out_biz_trace_source MODIFY COLUMN &#96;seq_inv_no&#96; varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT &#39;发票请求流水号&#39;;</span><br><span class="line"></span><br><span class="line">-- 2</span><br><span class="line">ALTER TABLE logtest CHANGE title title VARCHAR(100) CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class="line"></span><br><span class="line">ALTER TABLE t_inv_out_biz_trace_source CHANGE seq_inv_no seq_inv_no varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin;</span><br><span class="line"></span><br><span class="line">-- 3</span><br><span class="line">ALTER TABLE xxx_order CONVERT TO CHARACTER SET utf8 COLLATE utf8_bin;</span><br><span class="line"></span><br><span class="line">ALTER TABLE t_inv_out_biz_trace_source CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_bin;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><ol>
<li>不区分大小写的建表语句<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE &#96;trace_source&#96; (</span><br><span class="line">  &#96;trace_no&#96; varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT &#39;溯源号&#39;,</span><br><span class="line">  &#96;biz_no&#96; varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT &#39;业务号&#39;,</span><br><span class="line">  &#96;biz_detail_no&#96; varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT &#39;业务明细流水号&#39;,</span><br><span class="line">  &#96;biz_opened_amount&#96; decimal(24,8) NOT NULL COMMENT &#39;业务发生含税金额&#39;,</span><br><span class="line">  &#96;biz_opened_tax_amount&#96; decimal(24,8) NOT NULL COMMENT &#39;业务发生税额&#39;,</span><br><span class="line">  &#96;biz_open_without_tax_amount&#96; decimal(24,8) NOT NULL COMMENT &#39;业务发生不含税金额&#39;,</span><br><span class="line">  &#96;seq_inv_no&#96; varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT &#39;发票请求流水号&#39;,</span><br><span class="line">  &#96;inv_detail_no&#96; varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT &#39;发票明细流水号&#39;,</span><br><span class="line">  &#96;org_inv_detail_no&#96; varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;原发票明细流水号&#39;,</span><br><span class="line">  &#96;biz_trace_category_cd&#96; tinyint(4) DEFAULT &#39;0&#39; COMMENT &#39;溯源类型&#39;,</span><br><span class="line">  &#96;inv_category_cd&#96; tinyint(4) DEFAULT NULL COMMENT &#39;发票大类（初始红蓝作废）&#39;,</span><br><span class="line">  &#96;gmt_create&#96; timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),</span><br><span class="line">  &#96;gmt_modified&#96; timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),</span><br><span class="line">  &#96;is_valid&#96; tinyint(4) DEFAULT &#39;1&#39;,</span><br><span class="line">  PRIMARY KEY (&#96;seq_inv_no&#96;, &#96;inv_detail_no&#96;, &#96;trace_no&#96;),</span><br><span class="line">  KEY &#96;index_biz_no&#96; (&#96;biz_no&#96;) BLOCK_SIZE 16384 GLOBAL</span><br><span class="line">) DEFAULT CHARSET &#x3D; utf8mb4 ROW_FORMAT &#x3D; DYNAMIC COMPRESSION &#x3D; &#39;zstd_1.0&#39; REPLICA_NUM &#x3D; 3 BLOCK_SIZE &#x3D; 16384 USE_BLOOM_FILTER &#x3D; FALSE TABLET_SIZE &#x3D; 134217728 PCTFREE &#x3D; 0</span><br><span class="line"> partition by key(seq_inv_no)</span><br></pre></td></tr></table></figure></li>
<li>区分大小写的建表语句<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE &#96;invoice&#96; (</span><br><span class="line">  &#96;seq_inv_no&#96; varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT &#39;发票请求流水号&#39;,</span><br><span class="line">  &#96;inv_code&#96; varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;发票代码&#39;,</span><br><span class="line">  &#96;inv_no&#96; varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;发票号码&#39;,</span><br><span class="line">  &#96;order_no&#96; varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;订单编号&#39;,</span><br><span class="line">  &#96;contract_no&#96; varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;合同编号&#39;,</span><br><span class="line">  &#96;trade_no&#96; varchar(5) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;交易编号&#39;,</span><br><span class="line">  &#96;trade_desc&#96; varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;交易描述&#39;,</span><br><span class="line">  &#96;app_type_code&#96; char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;应用类型代码&#39;,</span><br><span class="line">  &#96;open_terminal_no&#96; varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;开票终端编号&#39;,</span><br><span class="line">  &#96;tax_control_serv_code&#96; varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;税控服务器编号&#39;,</span><br><span class="line">  &#96;inv_type_code&#96; char(3) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT &#39;开票类型代码&#39;,</span><br><span class="line">  &#96;inv_category_cd&#96; tinyint(4) NOT NULL COMMENT &#39;发票大类（初始红蓝作废）&#39;,</span><br><span class="line">  &#96;special_inv_sign&#96; char(2) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;特殊票种标识&#39;,</span><br><span class="line">  &#96;org_code&#96; varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;机构代码&#39;,</span><br><span class="line">  &#96;org_name&#96; varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;机构名称&#39;,</span><br><span class="line">  &#96;taxpayer_type_cd&#96; tinyint(4) NOT NULL COMMENT &#39;纳税人类型&#39;,</span><br><span class="line">  &#96;seller_taxpayer_no&#96; varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;销方纳税人识别号&#39;,</span><br><span class="line">  &#96;seller_taxpayer_name&#96; varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;销方纳税人名称&#39;,</span><br><span class="line">  &#96;seller_taxpayer_addr&#96; varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;销方纳税人地址&#39;,</span><br><span class="line">  &#96;seller_taxpayer_tel_no&#96; varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;销方电话&#39;,</span><br><span class="line">  &#96;seller_taxpayer_open_bank_no&#96; varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;销方纳税人开户银行号&#39;,</span><br><span class="line">  &#96;seller_taxpayer_open_bank_name&#96; varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;销方纳税人开户银行名称&#39;,</span><br><span class="line">  &#96;buyer_taxpayer_no&#96; varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;购方纳税人识别号&#39;,</span><br><span class="line">  &#96;buyer_taxpayer_name&#96; varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;购方纳税人名称&#39;,</span><br><span class="line">  &#96;buyer_taxpayer_addr&#96; varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;购方纳税人地址&#39;,</span><br><span class="line">  &#96;buyer_taxpayer_tel_no&#96; varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;购方纳税人电话&#39;,</span><br><span class="line">  &#96;buyer_taxpayer_open_bank_no&#96; varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;购方纳税人开户银行号&#39;,</span><br><span class="line">  &#96;buyer_taxpayer_open_bank_name&#96; varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;购方纳税人开户银行名称&#39;,</span><br><span class="line">  &#96;buyer_email&#96; varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;购方邮箱&#39;,</span><br><span class="line">  &#96;buyer_tel_no&#96; varchar(15) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;购方电话号码&#39;,</span><br><span class="line">  &#96;buyer_cert_type_cd&#96; varchar(3) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;购方证件类型&#39;,</span><br><span class="line">  &#96;buyer_cert_no&#96; varchar(60) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;购方证件号码&#39;,</span><br><span class="line">  &#96;is_list_cd&#96; tinyint(4) DEFAULT &#39;0&#39; COMMENT &#39;是否带清单：1-带清单，0-不带清单&#39;,</span><br><span class="line">  &#96;taxation_method_cd&#96; tinyint(4) DEFAULT &#39;0&#39; COMMENT &#39;征税方式（0 - 普通征税，...）&#39;,</span><br><span class="line">  &#96;total_amount&#96; decimal(24,8) DEFAULT NULL COMMENT &#39;发票总金额&#39;,</span><br><span class="line">  &#96;total_tax_amount&#96; decimal(24,8) DEFAULT NULL COMMENT &#39;发票总税额&#39;,</span><br><span class="line">  &#96;total_price_and_tax_amount&#96; decimal(24,8) DEFAULT NULL COMMENT &#39;发票价税合计&#39;,</span><br><span class="line">  &#96;diff_taxation_deduction_amount&#96; decimal(24,8) DEFAULT NULL COMMENT &#39;差额征税扣除额&#39;,</span><br><span class="line">  &#96;inv_remark&#96; varchar(184) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;发票备注&#39;,</span><br><span class="line">  &#96;payee&#96; varchar(8) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;收款人&#39;,</span><br><span class="line">  &#96;reviewer&#96; varchar(8) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;复核人&#39;,</span><br><span class="line">  &#96;drawer&#96; varchar(8) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;开票人&#39;,</span><br><span class="line">  &#96;inv_period&#96; varchar(6) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;开票属期&#39;,</span><br><span class="line">  &#96;inv_dt&#96; datetime DEFAULT NULL COMMENT &#39;开票日期&#39;,</span><br><span class="line">  &#96;check_code&#96; varchar(22) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;校验码&#39;,</span><br><span class="line">  &#96;machinary_code&#96; varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;机器码&#39;,</span><br><span class="line">  &#96;qr_code&#96; varchar(1200) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;二维码&#39;,</span><br><span class="line">  &#96;tax_control_code&#96; varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;税控码&#39;,</span><br><span class="line">  &#96;info_table_code&#96; varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;信息表编号&#39;,</span><br><span class="line">  &#96;org_inv_code&#96; varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;原发票代码&#39;,</span><br><span class="line">  &#96;org_inv_no&#96; varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;原发票号码&#39;,</span><br><span class="line">  &#96;vat_biz_status_cd&#96; tinyint(4) DEFAULT NULL COMMENT &#39;增值税业务状态&#39;,</span><br><span class="line">  &#96;push_status_cd&#96; tinyint(4) DEFAULT &#39;0&#39; COMMENT &#39;记录推送交易域的状态&#39;,</span><br><span class="line">  &#96;inv_deal_type_cd&#96; tinyint(4) DEFAULT NULL COMMENT &#39;发票处理方式&#39;,</span><br><span class="line">  &#96;is_pre_open_inv_cd&#96; tinyint(4) DEFAULT NULL COMMENT &#39;是否预开发票&#39;,</span><br><span class="line">  &#96;return_code&#96; varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;返回代码&#39;,</span><br><span class="line">  &#96;return_msg&#96; varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;返回信息&#39;,</span><br><span class="line">  &#96;upload_flag&#96; tinyint(4) DEFAULT NULL COMMENT &#39;上传标识&#39;,</span><br><span class="line">  &#96;changer&#96; varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;变更人&#39;,</span><br><span class="line">  &#96;change_dt&#96; timestamp(6) NULL DEFAULT NULL COMMENT &#39;变更日期（作废、红冲）&#39;,</span><br><span class="line">  &#96;inv_status_cd&#96; tinyint(4) NOT NULL DEFAULT &#39;1&#39; COMMENT &#39;发票状态&#39;,</span><br><span class="line">  &#96;sign_param&#96; varchar(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;签名参数&#39;,</span><br><span class="line">  &#96;sign_value&#96; varchar(450) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;签名值&#39;,</span><br><span class="line">  &#96;opened_negative_amount&#96; decimal(24,8) DEFAULT NULL COMMENT &#39;已开负数金额&#39;,</span><br><span class="line">  &#96;signature_verification_result_cd&#96; tinyint(4) DEFAULT NULL COMMENT &#39;验签结果&#39;,</span><br><span class="line">  &#96;remark&#96; varchar(4000) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &#39;备注&#39;,</span><br><span class="line">  &#96;gmt_create&#96; timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) COMMENT &#39;创建时间&#39;,</span><br><span class="line">  &#96;gmt_modified&#96; timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) COMMENT &#39;修改时间&#39;,</span><br><span class="line">  &#96;is_valid&#96; tinyint(4) NOT NULL DEFAULT &#39;1&#39; COMMENT &#39;是否有效&#39;,</span><br><span class="line">  PRIMARY KEY (&#96;seq_inv_no&#96;),</span><br><span class="line">  KEY &#96;idx_inv_code_and_no&#96; (&#96;inv_code&#96;, &#96;inv_no&#96;) BLOCK_SIZE 16384 GLOBAL,</span><br><span class="line">  KEY &#96;idx_org_inv_code_and_no&#96; (&#96;org_inv_code&#96;, &#96;org_inv_no&#96;) BLOCK_SIZE 16384 GLOBAL</span><br><span class="line">) DEFAULT CHARSET &#x3D; utf8mb4 ROW_FORMAT &#x3D; DYNAMIC COMPRESSION &#x3D; &#39;zstd_1.0&#39; REPLICA_NUM &#x3D; 3 BLOCK_SIZE &#x3D; 16384 USE_BLOOM_FILTER &#x3D; FALSE TABLET_SIZE &#x3D; 134217728 PCTFREE &#x3D; 0 COMMENT &#x3D; &#39;增值税销项发票信息表&#39;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>database</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>npm安装git仓库包异常</title>
    <url>/2022/03/18/npm-npm%E5%AE%89%E8%A3%85git%E4%BB%93%E5%BA%93%E5%8C%85%E5%BC%82%E5%B8%B8/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="安装失败"><a href="#安装失败" class="headerlink" title="安装失败"></a>安装失败</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7 silly fetchPackageMetaData error for git:&#x2F;&#x2F;github.com&#x2F;howiefh&#x2F;hexo-generator-calendar.git Error while executing:</span><br><span class="line">7 silly fetchPackageMetaData D:\developmentUsedSoftAddress\Git\mingw64\bin\git.EXE ls-remote -h -t git:&#x2F;&#x2F;github.com&#x2F;howiefh&#x2F;hexo-generator-calendar.git</span><br><span class="line">7 silly fetchPackageMetaData</span><br><span class="line">7 silly fetchPackageMetaData fatal: unable to connect to github.com:</span><br><span class="line">7 silly fetchPackageMetaData github.com[0: 20.205.243.166]: errno&#x3D;No such file or directory</span><br><span class="line">7 silly fetchPackageMetaData</span><br><span class="line">7 silly fetchPackageMetaData</span><br><span class="line">7 silly fetchPackageMetaData exited with error code: 128</span><br><span class="line">8 timing stage:rollbackFailedOptional Completed in 0ms</span><br><span class="line">9 timing stage:runTopLevelLifecycles Completed in 21635ms</span><br><span class="line">10 verbose stack Error: exited with error code: 128</span><br><span class="line">10 verbose stack     at ChildProcess.&lt;anonymous&gt; (D:\developmentUsedSoftAddress\nodejs\node_modules\npm\node_modules\pacote\lib\util\finished.js:12:19)</span><br><span class="line">10 verbose stack     at ChildProcess.emit (events.js:321:20)</span><br><span class="line">10 verbose stack     at maybeClose (internal&#x2F;child_process.js:1021:16)</span><br><span class="line">10 verbose stack     at Process.ChildProcess._handle.onexit (internal&#x2F;child_process.js:286:5)</span><br><span class="line">11 verbose cwd E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code</span><br><span class="line">12 verbose Windows_NT 10.0.19042</span><br><span class="line">13 verbose argv &quot;D:\\developmentUsedSoftAddress\\nodejs\\node.exe&quot; &quot;D:\\developmentUsedSoftAddress\\nodejs\\node_modules\\npm\\bin\\npm-cli.js&quot; &quot;install&quot; &quot;--save&quot; &quot;git:&#x2F;&#x2F;github.com&#x2F;howiefh&#x2F;hexo-generator-calendar.git&quot;</span><br><span class="line">14 verbose node v12.16.0</span><br><span class="line">15 verbose npm  v6.13.4</span><br><span class="line">16 error Error while executing:</span><br><span class="line">16 error D:\developmentUsedSoftAddress\Git\mingw64\bin\git.EXE ls-remote -h -t git:&#x2F;&#x2F;github.com&#x2F;howiefh&#x2F;hexo-generator-calendar.git</span><br></pre></td></tr></table></figure>
<h1 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h1><ol>
<li>设置代理<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global url.&quot;https:&#x2F;&#x2F;&quot;.insteadOf git:&#x2F;&#x2F;</span><br></pre></td></tr></table></figure></li>
<li>若代理有误，可以使用如下脚本取消代理<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global --unset http.proxy</span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zhangdaiyin@LAPTOP-BKST47D9 MINGW64 &#x2F;e&#x2F;workspace-all&#x2F;workspace-github&#x2F;blog-projects&#x2F;diabolo-hub-source-code (first_code)</span><br><span class="line">$ npm install --save git:&#x2F;&#x2F;github.com&#x2F;bitwater1997&#x2F;Hexo-Next-Plugins-Calendar#hexo</span><br><span class="line">npm ERR! Error while executing:</span><br><span class="line">npm ERR! D:\developmentUsedSoftAddress\Git\mingw64\bin\git.EXE ls-remote -h -t git:&#x2F;&#x2F;github.com&#x2F;bitwater1997&#x2F;Hexo-Next-Plugins-Calendar.git</span><br><span class="line">npm ERR!</span><br><span class="line">npm ERR! fatal: unable to access &#39;https:&#x2F;&#x2F;github.com&#x2F;bitwater1997&#x2F;Hexo-Next-Plugins-Calendar.git&#x2F;&#39;: OpenSSL SSL_connect: SSL_ERROR_SYSCALL in connection to github.com:443</span><br><span class="line">npm ERR!</span><br><span class="line">npm ERR! exited with error code: 128</span><br><span class="line"></span><br><span class="line">npm ERR! A complete log of this run can be found in:</span><br><span class="line">npm ERR!     D:\node\cache\_logs\2022-03-19T06_50_53_334Z-debug.log</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>npm</category>
        <category>nodejs</category>
      </categories>
      <tags>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>日历</title>
    <url>/2022/03/18/hexo-%E6%8F%92%E4%BB%B6-hexo%E7%AC%94%E8%AE%B0-%E6%97%A5%E5%8E%86/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>theme-next-calendar：<a href="https://github.com/icecory/theme-next-calendar" target="_blank" rel="noopener">https://github.com/icecory/theme-next-calendar</a></strong></li>
<li><strong>hexo-next 主题添加日历云: <a href="https://www.zhyong.cn/posts/1da9/" target="_blank" rel="noopener">https://www.zhyong.cn/posts/1da9/</a></strong></li>
<li><strong>Hexo日历插件: <a href="http://howiefh.github.io/2016/04/29/hexo-s-calendar-plugin/?utm_source=tuicool" target="_blank" rel="noopener">http://howiefh.github.io/2016/04/29/hexo-s-calendar-plugin/?utm_source=tuicool</a></strong></li>
<li><strong>Hexo主题中添加日历云功能: <a href="https://www.jianshu.com/p/b9665a8e8282" target="_blank" rel="noopener">https://www.jianshu.com/p/b9665a8e8282</a></strong></li>
</ul>
<hr>
<h1 id="日历"><a href="#日历" class="headerlink" title="日历"></a>日历</h1><ol>
<li>首先安装hexo插件<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install --save git:&#x2F;&#x2F;github.com&#x2F;icecory&#x2F;theme-next-calendar#hexo</span><br><span class="line">git clone --depth&#x3D;1 git@github.com&#x2F;icecory&#x2F;theme-next-calendar themes&#x2F;next&#x2F;source&#x2F;lib&#x2F;calendar</span><br></pre></td></tr></table></figure></li>
<li><p>配置 把sidebar.swig, calendar.styl放到${root}/source/_data目录下<br>在themes/next/layout/_layout.swig最后加入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% include &#39;..&#x2F;source&#x2F;lib&#x2F;calendar&#x2F;calendar.swig&#39; %&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在next主题配置文件_config.yml配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">custom_file_path:</span><br><span class="line">  sidebar: source&#x2F;_data&#x2F;sidebar.swig</span><br><span class="line">  styles: source&#x2F;_data&#x2F;calendar.styl</span><br><span class="line"></span><br><span class="line">CloudCalendar:</span><br><span class="line">  enable: true</span><br><span class="line">  language: zh-CN</span><br><span class="line">  single: true</span><br><span class="line">  root: &#x2F;calendar&#x2F;</span><br></pre></td></tr></table></figure>
<h2 id="渲染日历"><a href="#渲染日历" class="headerlink" title="渲染日历"></a>渲染日历</h2><p>默认是在边栏中渲染, 当然也可以在任何位置显示, 只要移动sidebar.swig中的代码即可</p>
<h2 id="自定义日历颜色"><a href="#自定义日历颜色" class="headerlink" title="自定义日历颜色"></a>自定义日历颜色</h2><p>日历插件内各元素的颜色都是可定制的, 可以通过修改calendar.styl文件来达到更好的效果.</p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>提取自Landscape-F主题, 修改后适配theme-next</p>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>plugin</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>代码块复制功能</title>
    <url>/2022/03/18/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>clipboard.js：<a href="https://raw.githubusercontent.com/zenorocha/clipboard.js/master/dist/clipboard.js" target="_blank" rel="noopener">https://raw.githubusercontent.com/zenorocha/clipboard.js/master/dist/clipboard.js</a></strong></li>
<li><strong>clipboard.min.js: <a href="https://raw.githubusercontent.com/zenorocha/clipboard.js/master/dist/clipboard.min.js" target="_blank" rel="noopener">https://raw.githubusercontent.com/zenorocha/clipboard.js/master/dist/clipboard.min.js</a></strong></li>
<li><strong>Hexo NexT 代码块复制功能: <a href="https://www.jianshu.com/p/3e9d614c1e77" target="_blank" rel="noopener">https://www.jianshu.com/p/3e9d614c1e77</a></strong></li>
</ul>
<hr>
<h1 id="代码块复制功能"><a href="#代码块复制功能" class="headerlink" title="代码块复制功能"></a>代码块复制功能</h1><ol>
<li>保存文件clipboard.js / clipboard.min.js ，目录如下：<br>.\themes\next\source\js\src</li>
<li>clipboardjs 使用<br>也是在.\themes\next\source\js\src目录下，创建clipboard-use.js，文件内容如下：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*页面载入完成后，创建复制按钮*&#x2F;</span><br><span class="line">!function (e, t, a) &#123; </span><br><span class="line">  &#x2F;* code *&#x2F;</span><br><span class="line">  var initCopyCode &#x3D; function()&#123;</span><br><span class="line">    var copyHtml &#x3D; &#39;&#39;;</span><br><span class="line">    copyHtml +&#x3D; &#39;&lt;button class&#x3D;&quot;btn-copy&quot; data-clipboard-snippet&#x3D;&quot;&quot;&gt;&#39;;</span><br><span class="line">    copyHtml +&#x3D; &#39;  &lt;i class&#x3D;&quot;fa fa-globe&quot;&gt;&lt;&#x2F;i&gt;&lt;span&gt;copy&lt;&#x2F;span&gt;&#39;;</span><br><span class="line">    copyHtml +&#x3D; &#39;&lt;&#x2F;button&gt;&#39;;</span><br><span class="line">    $(&quot;.highlight .code pre&quot;).before(copyHtml);</span><br><span class="line">    new ClipboardJS(&#39;.btn-copy&#39;, &#123;</span><br><span class="line">        target: function(trigger) &#123;</span><br><span class="line">            return trigger.nextElementSibling;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  initCopyCode();</span><br><span class="line">&#125;(window, document);</span><br></pre></td></tr></table></figure></li>
<li>在.\themes\next\source\css_custom\custom.styl样式文件中添加下面代码：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;代码块复制按钮</span><br><span class="line">.highlight&#123;</span><br><span class="line">  &#x2F;&#x2F;方便copy代码按钮（btn-copy）的定位</span><br><span class="line">  position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.btn-copy &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">    background-color: #eee;</span><br><span class="line">    background-image: linear-gradient(#fcfcfc,#eee);</span><br><span class="line">    border: 1px solid #d5d5d5;</span><br><span class="line">    border-radius: 3px;</span><br><span class="line">    -webkit-user-select: none;</span><br><span class="line">    -moz-user-select: none;</span><br><span class="line">    -ms-user-select: none;</span><br><span class="line">    user-select: none;</span><br><span class="line">    -webkit-appearance: none;</span><br><span class="line">    font-size: 13px;</span><br><span class="line">    font-weight: 700;</span><br><span class="line">    line-height: 20px;</span><br><span class="line">    color: #333;</span><br><span class="line">    -webkit-transition: opacity .3s ease-in-out;</span><br><span class="line">    -o-transition: opacity .3s ease-in-out;</span><br><span class="line">    transition: opacity .3s ease-in-out;</span><br><span class="line">    padding: 2px 6px;</span><br><span class="line">    position: absolute;</span><br><span class="line">    right: 5px;</span><br><span class="line">    top: 5px;</span><br><span class="line">    opacity: 0;</span><br><span class="line">&#125;</span><br><span class="line">.btn-copy span &#123;</span><br><span class="line">    margin-left: 5px;</span><br><span class="line">&#125;</span><br><span class="line">.highlight:hover .btn-copy&#123;</span><br><span class="line">  opacity: 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2>在.\themes\next\layout_layout.swig文件中，添加引用（注：在 swig 末尾或 body 结束标签（</body>）之前添加）：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 代码块复制功能 --&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;src&#x2F;clipboard.min.js&quot;&gt;&lt;&#x2F;script&gt;  </span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;src&#x2F;clipboard-use.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="clipboard-min-js"><a href="#clipboard-min-js" class="headerlink" title="clipboard.min.js"></a>clipboard.min.js</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*!</span><br><span class="line"> * clipboard.js v2.0.10</span><br><span class="line"> * https:&#x2F;&#x2F;clipboardjs.com&#x2F;</span><br><span class="line"> *</span><br><span class="line"> * Licensed MIT © Zeno Rocha</span><br><span class="line"> *&#x2F;</span><br><span class="line">!function(t,e)&#123;&quot;object&quot;&#x3D;&#x3D;typeof exports&amp;&amp;&quot;object&quot;&#x3D;&#x3D;typeof module?module.exports&#x3D;e():&quot;function&quot;&#x3D;&#x3D;typeof define&amp;&amp;define.amd?define([],e):&quot;object&quot;&#x3D;&#x3D;typeof exports?exports.ClipboardJS&#x3D;e():t.ClipboardJS&#x3D;e()&#125;(this,function()&#123;return n&#x3D;&#123;686:function(t,e,n)&#123;&quot;use strict&quot;;n.d(e,&#123;default:function()&#123;return o&#125;&#125;);var e&#x3D;n(279),i&#x3D;n.n(e),e&#x3D;n(370),u&#x3D;n.n(e),e&#x3D;n(817),c&#x3D;n.n(e);function a(t)&#123;try&#123;return document.execCommand(t)&#125;catch(t)&#123;return&#125;&#125;var f&#x3D;function(t)&#123;t&#x3D;c()(t);return a(&quot;cut&quot;),t&#125;;var l&#x3D;function(t)&#123;var e,n,o,r&#x3D;1&lt;arguments.length&amp;&amp;void 0!&#x3D;&#x3D;arguments[1]?arguments[1]:&#123;container:document.body&#125;,i&#x3D;&quot;&quot;;return&quot;string&quot;&#x3D;&#x3D;typeof t?(e&#x3D;t,n&#x3D;&quot;rtl&quot;&#x3D;&#x3D;&#x3D;document.documentElement.getAttribute(&quot;dir&quot;),(o&#x3D;document.createElement(&quot;textarea&quot;)).style.fontSize&#x3D;&quot;12pt&quot;,o.style.border&#x3D;&quot;0&quot;,o.style.padding&#x3D;&quot;0&quot;,o.style.margin&#x3D;&quot;0&quot;,o.style.position&#x3D;&quot;absolute&quot;,o.style[n?&quot;right&quot;:&quot;left&quot;]&#x3D;&quot;-9999px&quot;,n&#x3D;window.pageYOffset||document.documentElement.scrollTop,o.style.top&#x3D;&quot;&quot;.concat(n,&quot;px&quot;),o.setAttribute(&quot;readonly&quot;,&quot;&quot;),o.value&#x3D;e,o&#x3D;o,r.container.appendChild(o),i&#x3D;c()(o),a(&quot;copy&quot;),o.remove()):(i&#x3D;c()(t),a(&quot;copy&quot;)),i&#125;;function r(t)&#123;return(r&#x3D;&quot;function&quot;&#x3D;&#x3D;typeof Symbol&amp;&amp;&quot;symbol&quot;&#x3D;&#x3D;typeof Symbol.iterator?function(t)&#123;return typeof t&#125;:function(t)&#123;return t&amp;&amp;&quot;function&quot;&#x3D;&#x3D;typeof Symbol&amp;&amp;t.constructor&#x3D;&#x3D;&#x3D;Symbol&amp;&amp;t!&#x3D;&#x3D;Symbol.prototype?&quot;symbol&quot;:typeof t&#125;)(t)&#125;var s&#x3D;function()&#123;var t&#x3D;0&lt;arguments.length&amp;&amp;void 0!&#x3D;&#x3D;arguments[0]?arguments[0]:&#123;&#125;,e&#x3D;t.action,n&#x3D;void 0&#x3D;&#x3D;&#x3D;e?&quot;copy&quot;:e,o&#x3D;t.container,e&#x3D;t.target,t&#x3D;t.text;if(&quot;copy&quot;!&#x3D;&#x3D;n&amp;&amp;&quot;cut&quot;!&#x3D;&#x3D;n)throw new Error(&#39;Invalid &quot;action&quot; value, use either &quot;copy&quot; or &quot;cut&quot;&#39;);if(void 0!&#x3D;&#x3D;e)&#123;if(!e||&quot;object&quot;!&#x3D;&#x3D;r(e)||1!&#x3D;&#x3D;e.nodeType)throw new Error(&#39;Invalid &quot;target&quot; value, use a valid Element&#39;);if(&quot;copy&quot;&#x3D;&#x3D;&#x3D;n&amp;&amp;e.hasAttribute(&quot;disabled&quot;))throw new Error(&#39;Invalid &quot;target&quot; attribute. Please use &quot;readonly&quot; instead of &quot;disabled&quot; attribute&#39;);if(&quot;cut&quot;&#x3D;&#x3D;&#x3D;n&amp;&amp;(e.hasAttribute(&quot;readonly&quot;)||e.hasAttribute(&quot;disabled&quot;)))throw new Error(&#39;Invalid &quot;target&quot; attribute. You can\&#39;t cut text from elements with &quot;readonly&quot; or &quot;disabled&quot; attributes&#39;)&#125;return t?l(t,&#123;container:o&#125;):e?&quot;cut&quot;&#x3D;&#x3D;&#x3D;n?f(e):l(e,&#123;container:o&#125;):void 0&#125;;function p(t)&#123;return(p&#x3D;&quot;function&quot;&#x3D;&#x3D;typeof Symbol&amp;&amp;&quot;symbol&quot;&#x3D;&#x3D;typeof Symbol.iterator?function(t)&#123;return typeof t&#125;:function(t)&#123;return t&amp;&amp;&quot;function&quot;&#x3D;&#x3D;typeof Symbol&amp;&amp;t.constructor&#x3D;&#x3D;&#x3D;Symbol&amp;&amp;t!&#x3D;&#x3D;Symbol.prototype?&quot;symbol&quot;:typeof t&#125;)(t)&#125;function d(t,e)&#123;for(var n&#x3D;0;n&lt;e.length;n++)&#123;var o&#x3D;e[n];o.enumerable&#x3D;o.enumerable||!1,o.configurable&#x3D;!0,&quot;value&quot;in o&amp;&amp;(o.writable&#x3D;!0),Object.defineProperty(t,o.key,o)&#125;&#125;function y(t,e)&#123;return(y&#x3D;Object.setPrototypeOf||function(t,e)&#123;return t.__proto__&#x3D;e,t&#125;)(t,e)&#125;function h(n)&#123;var o&#x3D;function()&#123;if(&quot;undefined&quot;&#x3D;&#x3D;typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(&quot;function&quot;&#x3D;&#x3D;typeof Proxy)return!0;try&#123;return Date.prototype.toString.call(Reflect.construct(Date,[],function()&#123;&#125;)),!0&#125;catch(t)&#123;return!1&#125;&#125;();return function()&#123;var t,e&#x3D;m(n);return t&#x3D;o?(t&#x3D;m(this).constructor,Reflect.construct(e,arguments,t)):e.apply(this,arguments),e&#x3D;this,!(t&#x3D;t)||&quot;object&quot;!&#x3D;&#x3D;p(t)&amp;&amp;&quot;function&quot;!&#x3D;typeof t?function(t)&#123;if(void 0!&#x3D;&#x3D;t)return t;throw new ReferenceError(&quot;this hasn&#39;t been initialised - super() hasn&#39;t been called&quot;)&#125;(e):t&#125;&#125;function m(t)&#123;return(m&#x3D;Object.setPrototypeOf?Object.getPrototypeOf:function(t)&#123;return t.__proto__||Object.getPrototypeOf(t)&#125;)(t)&#125;function v(t,e)&#123;t&#x3D;&quot;data-clipboard-&quot;.concat(t);if(e.hasAttribute(t))return e.getAttribute(t)&#125;var o&#x3D;function()&#123;!function(t,e)&#123;if(&quot;function&quot;!&#x3D;typeof e&amp;&amp;null!&#x3D;&#x3D;e)throw new TypeError(&quot;Super expression must either be null or a function&quot;);t.prototype&#x3D;Object.create(e&amp;&amp;e.prototype,&#123;constructor:&#123;value:t,writable:!0,configurable:!0&#125;&#125;),e&amp;&amp;y(t,e)&#125;(r,i());var t,e,n,o&#x3D;h(r);function r(t,e)&#123;var n;return function(t)&#123;if(!(t instanceof r))throw new TypeError(&quot;Cannot call a class as a function&quot;)&#125;(this),(n&#x3D;o.call(this)).resolveOptions(e),n.listenClick(t),n&#125;return t&#x3D;r,n&#x3D;[&#123;key:&quot;copy&quot;,value:function(t)&#123;var e&#x3D;1&lt;arguments.length&amp;&amp;void 0!&#x3D;&#x3D;arguments[1]?arguments[1]:&#123;container:document.body&#125;;return l(t,e)&#125;&#125;,&#123;key:&quot;cut&quot;,value:function(t)&#123;return f(t)&#125;&#125;,&#123;key:&quot;isSupported&quot;,value:function()&#123;var t&#x3D;0&lt;arguments.length&amp;&amp;void 0!&#x3D;&#x3D;arguments[0]?arguments[0]:[&quot;copy&quot;,&quot;cut&quot;],t&#x3D;&quot;string&quot;&#x3D;&#x3D;typeof t?[t]:t,e&#x3D;!!document.queryCommandSupported;return t.forEach(function(t)&#123;e&#x3D;e&amp;&amp;!!document.queryCommandSupported(t)&#125;),e&#125;&#125;],(e&#x3D;[&#123;key:&quot;resolveOptions&quot;,value:function()&#123;var t&#x3D;0&lt;arguments.length&amp;&amp;void 0!&#x3D;&#x3D;arguments[0]?arguments[0]:&#123;&#125;;this.action&#x3D;&quot;function&quot;&#x3D;&#x3D;typeof t.action?t.action:this.defaultAction,this.target&#x3D;&quot;function&quot;&#x3D;&#x3D;typeof t.target?t.target:this.defaultTarget,this.text&#x3D;&quot;function&quot;&#x3D;&#x3D;typeof t.text?t.text:this.defaultText,this.container&#x3D;&quot;object&quot;&#x3D;&#x3D;&#x3D;p(t.container)?t.container:document.body&#125;&#125;,&#123;key:&quot;listenClick&quot;,value:function(t)&#123;var e&#x3D;this;this.listener&#x3D;u()(t,&quot;click&quot;,function(t)&#123;return e.onClick(t)&#125;)&#125;&#125;,&#123;key:&quot;onClick&quot;,value:function(t)&#123;var e&#x3D;t.delegateTarget||t.currentTarget,n&#x3D;this.action(e)||&quot;copy&quot;,t&#x3D;s(&#123;action:n,container:this.container,target:this.target(e),text:this.text(e)&#125;);this.emit(t?&quot;success&quot;:&quot;error&quot;,&#123;action:n,text:t,trigger:e,clearSelection:function()&#123;e&amp;&amp;e.focus(),document.activeElement.blur(),window.getSelection().removeAllRanges()&#125;&#125;)&#125;&#125;,&#123;key:&quot;defaultAction&quot;,value:function(t)&#123;return v(&quot;action&quot;,t)&#125;&#125;,&#123;key:&quot;defaultTarget&quot;,value:function(t)&#123;t&#x3D;v(&quot;target&quot;,t);if(t)return document.querySelector(t)&#125;&#125;,&#123;key:&quot;defaultText&quot;,value:function(t)&#123;return v(&quot;text&quot;,t)&#125;&#125;,&#123;key:&quot;destroy&quot;,value:function()&#123;this.listener.destroy()&#125;&#125;])&amp;&amp;d(t.prototype,e),n&amp;&amp;d(t,n),r&#125;()&#125;,828:function(t)&#123;var e;&quot;undefined&quot;&#x3D;&#x3D;typeof Element||Element.prototype.matches||((e&#x3D;Element.prototype).matches&#x3D;e.matchesSelector||e.mozMatchesSelector||e.msMatchesSelector||e.oMatchesSelector||e.webkitMatchesSelector),t.exports&#x3D;function(t,e)&#123;for(;t&amp;&amp;9!&#x3D;&#x3D;t.nodeType;)&#123;if(&quot;function&quot;&#x3D;&#x3D;typeof t.matches&amp;&amp;t.matches(e))return t;t&#x3D;t.parentNode&#125;&#125;&#125;,438:function(t,e,n)&#123;var u&#x3D;n(828);function i(t,e,n,o,r)&#123;var i&#x3D;function(e,n,t,o)&#123;return function(t)&#123;t.delegateTarget&#x3D;u(t.target,n),t.delegateTarget&amp;&amp;o.call(e,t)&#125;&#125;.apply(this,arguments);return t.addEventListener(n,i,r),&#123;destroy:function()&#123;t.removeEventListener(n,i,r)&#125;&#125;&#125;t.exports&#x3D;function(t,e,n,o,r)&#123;return&quot;function&quot;&#x3D;&#x3D;typeof t.addEventListener?i.apply(null,arguments):&quot;function&quot;&#x3D;&#x3D;typeof n?i.bind(null,document).apply(null,arguments):(&quot;string&quot;&#x3D;&#x3D;typeof t&amp;&amp;(t&#x3D;document.querySelectorAll(t)),Array.prototype.map.call(t,function(t)&#123;return i(t,e,n,o,r)&#125;))&#125;&#125;,879:function(t,n)&#123;n.node&#x3D;function(t)&#123;return void 0!&#x3D;&#x3D;t&amp;&amp;t instanceof HTMLElement&amp;&amp;1&#x3D;&#x3D;&#x3D;t.nodeType&#125;,n.nodeList&#x3D;function(t)&#123;var e&#x3D;Object.prototype.toString.call(t);return void 0!&#x3D;&#x3D;t&amp;&amp;(&quot;[object NodeList]&quot;&#x3D;&#x3D;&#x3D;e||&quot;[object HTMLCollection]&quot;&#x3D;&#x3D;&#x3D;e)&amp;&amp;&quot;length&quot;in t&amp;&amp;(0&#x3D;&#x3D;&#x3D;t.length||n.node(t[0]))&#125;,n.string&#x3D;function(t)&#123;return&quot;string&quot;&#x3D;&#x3D;typeof t||t instanceof String&#125;,n.fn&#x3D;function(t)&#123;return&quot;[object Function]&quot;&#x3D;&#x3D;&#x3D;Object.prototype.toString.call(t)&#125;&#125;,370:function(t,e,n)&#123;var f&#x3D;n(879),l&#x3D;n(438);t.exports&#x3D;function(t,e,n)&#123;if(!t&amp;&amp;!e&amp;&amp;!n)throw new Error(&quot;Missing required arguments&quot;);if(!f.string(e))throw new TypeError(&quot;Second argument must be a String&quot;);if(!f.fn(n))throw new TypeError(&quot;Third argument must be a Function&quot;);if(f.node(t))return c&#x3D;e,a&#x3D;n,(u&#x3D;t).addEventListener(c,a),&#123;destroy:function()&#123;u.removeEventListener(c,a)&#125;&#125;;if(f.nodeList(t))return o&#x3D;t,r&#x3D;e,i&#x3D;n,Array.prototype.forEach.call(o,function(t)&#123;t.addEventListener(r,i)&#125;),&#123;destroy:function()&#123;Array.prototype.forEach.call(o,function(t)&#123;t.removeEventListener(r,i)&#125;)&#125;&#125;;if(f.string(t))return t&#x3D;t,e&#x3D;e,n&#x3D;n,l(document.body,t,e,n);throw new TypeError(&quot;First argument must be a String, HTMLElement, HTMLCollection, or NodeList&quot;);var o,r,i,u,c,a&#125;&#125;,817:function(t)&#123;t.exports&#x3D;function(t)&#123;var e,n&#x3D;&quot;SELECT&quot;&#x3D;&#x3D;&#x3D;t.nodeName?(t.focus(),t.value):&quot;INPUT&quot;&#x3D;&#x3D;&#x3D;t.nodeName||&quot;TEXTAREA&quot;&#x3D;&#x3D;&#x3D;t.nodeName?((e&#x3D;t.hasAttribute(&quot;readonly&quot;))||t.setAttribute(&quot;readonly&quot;,&quot;&quot;),t.select(),t.setSelectionRange(0,t.value.length),e||t.removeAttribute(&quot;readonly&quot;),t.value):(t.hasAttribute(&quot;contenteditable&quot;)&amp;&amp;t.focus(),n&#x3D;window.getSelection(),(e&#x3D;document.createRange()).selectNodeContents(t),n.removeAllRanges(),n.addRange(e),n.toString());return n&#125;&#125;,279:function(t)&#123;function e()&#123;&#125;e.prototype&#x3D;&#123;on:function(t,e,n)&#123;var o&#x3D;this.e||(this.e&#x3D;&#123;&#125;);return(o[t]||(o[t]&#x3D;[])).push(&#123;fn:e,ctx:n&#125;),this&#125;,once:function(t,e,n)&#123;var o&#x3D;this;function r()&#123;o.off(t,r),e.apply(n,arguments)&#125;return r._&#x3D;e,this.on(t,r,n)&#125;,emit:function(t)&#123;for(var e&#x3D;[].slice.call(arguments,1),n&#x3D;((this.e||(this.e&#x3D;&#123;&#125;))[t]||[]).slice(),o&#x3D;0,r&#x3D;n.length;o&lt;r;o++)n[o].fn.apply(n[o].ctx,e);return this&#125;,off:function(t,e)&#123;var n&#x3D;this.e||(this.e&#x3D;&#123;&#125;),o&#x3D;n[t],r&#x3D;[];if(o&amp;&amp;e)for(var i&#x3D;0,u&#x3D;o.length;i&lt;u;i++)o[i].fn!&#x3D;&#x3D;e&amp;&amp;o[i].fn._!&#x3D;&#x3D;e&amp;&amp;r.push(o[i]);return r.length?n[t]&#x3D;r:delete n[t],this&#125;&#125;,t.exports&#x3D;e,t.exports.TinyEmitter&#x3D;e&#125;&#125;,r&#x3D;&#123;&#125;,o.n&#x3D;function(t)&#123;var e&#x3D;t&amp;&amp;t.__esModule?function()&#123;return t.default&#125;:function()&#123;return t&#125;;return o.d(e,&#123;a:e&#125;),e&#125;,o.d&#x3D;function(t,e)&#123;for(var n in e)o.o(e,n)&amp;&amp;!o.o(t,n)&amp;&amp;Object.defineProperty(t,n,&#123;enumerable:!0,get:e[n]&#125;)&#125;,o.o&#x3D;function(t,e)&#123;return Object.prototype.hasOwnProperty.call(t,e)&#125;,o(686).default;function o(t)&#123;if(r[t])return r[t].exports;var e&#x3D;r[t]&#x3D;&#123;exports:&#123;&#125;&#125;;return n[t](e,e.exports,o),e.exports&#125;var n,r&#125;);</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>新增菜单标签（快速）</title>
    <url>/2022/03/18/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E6%96%B0%E5%A2%9E%E8%8F%9C%E5%8D%95%E6%A0%87%E7%AD%BE%EF%BC%88%E5%BF%AB%E9%80%9F%EF%BC%89/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="新增菜单标签（快速）"><a href="#新增菜单标签（快速）" class="headerlink" title="新增菜单标签（快速）"></a>新增菜单标签（快速）</h1><p>创建新文章的时候直接指定categories: read配置<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 《好好学习》—黄金思维圈</span><br><span class="line">date: 2018-06-12 11:45:43</span><br><span class="line">tags:</span><br><span class="line">- read</span><br><span class="line">categories:</span><br><span class="line">- read</span><br><span class="line">notshow: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure><br>配置主题配置文件themes/_config.yml中添加以下代码（#号后为注释内容）<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F; || home</span><br><span class="line">  about: &#x2F;about&#x2F; || user</span><br><span class="line">  tags: &#x2F;tags&#x2F; || tags</span><br><span class="line">  categories: &#x2F;categories&#x2F; || th</span><br><span class="line">  read: &#x2F;categories&#x2F;read  #指定分类中阅读的路径</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>AQS</title>
    <url>/2022/03/18/java-%E5%B9%B6%E5%8F%91-AQS/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>java</category>
        <category>并发</category>
      </categories>
      <tags>
        <tag>并发</tag>
      </tags>
  </entry>
  <entry>
    <title>MVCC</title>
    <url>/2022/03/18/database-mysql-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-MVCC/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="MVCC"><a href="#MVCC" class="headerlink" title="MVCC"></a>MVCC</h1><p>全称Multi-Version Concurrency Control，即多版本并发控制<br>最早的数据库系统，只有读读之间可以并发，读写，写读，写写都要阻塞。引入多版本之后，只有写写之间相互阻塞，其他三种操作都可以并行，这样大幅度提高了InnoDB的并发度</p>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>InnoDB是在undolog中实现的mvcc<br>在InnoDB内部中，会记录一个全局的活跃读写事务数组，其主要用来判断事务的可见性。</p>
<h3 id="undolog的作用"><a href="#undolog的作用" class="headerlink" title="undolog的作用"></a>undolog的作用</h3><p>通过undolog可以找回数据的历史版本<br>找回的数据历史版本可以提供给用户读(按照隔离级别的定义，有些读请求只能看到比较老的数据版本)<br>也可以在回滚的时候覆盖数据页上的数据</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>database</category>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>kafka简介</title>
    <url>/2022/03/18/%E5%88%86%E5%B8%83%E5%BC%8F-%E5%88%86%E5%B8%83%E5%BC%8F%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97-kafka-kafka%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<h2 id="Kafka入门教程-https-blog-csdn-net-yuan-xw-article-details-51210954"><a href="#Kafka入门教程-https-blog-csdn-net-yuan-xw-article-details-51210954" class="headerlink" title="- Kafka入门教程: https://blog.csdn.net/yuan_xw/article/details/51210954"></a>- <strong>Kafka入门教程: <a href="https://blog.csdn.net/yuan_xw/article/details/51210954" target="_blank" rel="noopener">https://blog.csdn.net/yuan_xw/article/details/51210954</a></strong></h2><h1 id="kafka："><a href="#kafka：" class="headerlink" title="kafka："></a>kafka：</h1><p>在Kafka集群中，没有“中心主节点”的概念，集群中所有的服务器都是对等的<br>因此，可以在不做任何配置的更改的情况下实现服务器的的添加与删除，同样的消息的生产者和消费者也能够做到随意重启和机器的上下线。</p>
<h2 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h2><ol>
<li>消息生产者：即：Producer，是消息的产生的源头，负责生成消息并发送到Kafka服务器上。</li>
<li>消息消费者：即：Consumer，是消息的使用方，负责消费Kafka服务器上的消息。</li>
<li>主题：即：Topic，由用户定义并配置在Kafka服务器，用于建立生产者和消息者之间的订阅关系：生产者发送消息到指定的Topic下，消息者从这个Topic下消费消息。</li>
<li>消息分区：即：Partition，一个Topic下面会分为很多分区，<br>例如：“kafka-test”这个Topic下可以分为6个分区，分别由两台服务器提供，那么通常可以配置为让每台服务器提供3个分区，<br>假如服务器ID分别为0、1，则所有的分区为0-0、0-1、0-2和1-0、1-1、1-2。<br>Topic物理上的分组，一个 topic可以分为多个 partition，每个 partition 是一个有序的队列。<br>partition中的每条消息都会被分配一个有序的 id（offset）。</li>
<li>Broker：即Kafka的服务器，用户存储消息，Kafa集群中的一台或多台服务器统称为 broker。</li>
<li>消费者分组：Group，用于归组同类消费者，<br>在Kafka中，多个消费者可以共同消息一个Topic下的消息，每个消费者消费其中的部分消息，这些消费者就组成了一个分组，拥有同一个分组名称，通常也被称为消费者集群。</li>
<li>Offset：消息存储在Kafka的Broker上，消费者拉取消息数据的过程中需要知道消息在文件中的偏移量，这个偏移量就是所谓的Offset。<h2 id="Kafka中Broker"><a href="#Kafka中Broker" class="headerlink" title="Kafka中Broker"></a>Kafka中Broker</h2></li>
<li>Broker：即Kafka的服务器，用户存储消息，Kafa集群中的一台或多台服务器统称为 broker。</li>
<li>Message在Broker中通Log追加的方式进行持久化存储。并进行分区（patitions)。</li>
<li>为了减少磁盘写入的次数,broker会将消息暂时buffer起来,当消息的个数(或尺寸)达到一定阀值时,再flush到磁盘,这样减少了磁盘IO调用的次数。</li>
<li>Broker没有副本机制，一旦broker宕机，该broker的消息将都不可用。Message消息是有多份的。</li>
<li>Broker不保存订阅者的状态，由订阅者自己保存。</li>
<li>无状态导致消息的删除成为难题（可能删除的消息正在被订阅），kafka采用基于时间的SLA(服务水平保证)，消息保存一定时间（通常为7天）后会被删除。</li>
<li>消息订阅者可以rewind back到任意位置重新进行消费，当订阅者故障时，可以选择最小的offset(id)进行重新读取消费消息。<h2 id="Kafka的Message组成"><a href="#Kafka的Message组成" class="headerlink" title="Kafka的Message组成"></a>Kafka的Message组成</h2></li>
<li>Message消息：是通信的基本单位，每个 producer 可以向一个 topic（主题）发布一些消息。</li>
<li>Kafka中的Message是以topic为基本单位组织的，不同的topic之间是相互独立的。每个topic又可以分成几个不同的partition(每个topic有几个partition是在创建topic时指定的)，每个partition存储一部分Message。</li>
<li>partition中的每条Message包含了以下三个属性：<ul>
<li>offset      即：消息唯一标识:对应类型：long</li>
<li>MessageSize 对应类型：int32</li>
<li>data        是message的具体内容。<h2 id="Kafka的Partitions分区"><a href="#Kafka的Partitions分区" class="headerlink" title="Kafka的Partitions分区"></a>Kafka的Partitions分区</h2></li>
</ul>
</li>
<li>Kafka基于文件存储.通过分区，可以将日志内容分散到多个server上,来避免文件尺寸达到单机磁盘的上限，每个partiton都会被当前server(kafka实例)保存。</li>
<li>可以将一个topic切分多任意多个partitions，来消息保存/消费的效率。</li>
<li>越多的partitions意味着可以容纳更多的consumer，有效提升并发消费的能力。<h2 id="Kafka的Consumers"><a href="#Kafka的Consumers" class="headerlink" title="Kafka的Consumers"></a>Kafka的Consumers</h2></li>
<li>消息和数据消费者，订阅 topics并处理其发布的消息的过程叫做 consumers。</li>
<li>在 kafka中,我们可以认为一个group是一个“订阅者”，一个Topic中的每个partions，只会被一个“订阅者”中的一个consumer消费，不过一个 consumer可以消费多个partitions中的消息（消费者数据小于Partions的数量时）。注意：kafka的设计原理决定，对于一个topic，同一个group中不能有多于partitions个数的consumer同时消费，否则将意味着某些consumer将无法得到消息。</li>
<li>一个partition中的消息只会被group中的一个consumer消息。每个group中consumer消息消费互相独立。<h2 id="Kafka的持久化"><a href="#Kafka的持久化" class="headerlink" title="Kafka的持久化"></a>Kafka的持久化</h2></li>
<li>一个Topic可以认为是一类消息，每个topic将被分成多partition(区),每个partition在存储层面是append log文件。任何发布到此partition的消息都会被直接追加到log文件的尾部，每条消息在文件中的位置称为offset（偏移量），partition是以文件的形式存储在文件系统中。</li>
<li>Logs文件根据broker中的配置要求,保留一定时间后删除来释放磁盘空间<blockquote>
<p>partition: Topic物理上的分组，一个 topic可以分为多个 partition，每个 partition 是一个有序的队列。partition中的每条消息都会被分配一个有序的 id（offset）。</p>
</blockquote>
</li>
<li>为数据文件建索引：稀疏存储，每隔一定字节的数据建立一条索引。<h2 id="Kafka的通讯协议"><a href="#Kafka的通讯协议" class="headerlink" title="Kafka的通讯协议"></a>Kafka的通讯协议</h2></li>
<li>Kafka的Producer、Broker和Consumer之间采用的是一套自行设计基于TCP层的协议，根据业务需求定制，而非实现一套类似ProtocolBuffer的通用协议。</li>
<li>基本数据类型：（Kafka是基于Scala语言实现的，类型也是Scala中的数据类型）<blockquote>
<p>定长数据类型：int8,int16,int32和int64，对应到Java中就是byte, short, int和long。<br>变长数据类型：bytes和string。变长的数据类型由两部分组成，分别是一个有符号整数N(表示内容的长度)和N个字节的内容。其中，N为-1表示内容为null。bytes的长度由int32表示，string的长度由int16表示。<br>数组：数组由两部分组成，分别是一个由int32类型的数字表示的数组长度N和N个元素。</p>
</blockquote>
</li>
<li>Kafka通讯的基本单位是Request/Response</li>
<li>基本结构<br>RequestOrResponse =&gt; MessageSize(RequestMessage | ResponseMessage)</li>
<li>通讯过程：<br>客户端打开与服务器端的Socket<br>往Socket写入一个int32的数字(数字表示这次发送的Request有多少字节)<br>服务器端先读出一个int32的整数从而获取这次Request的大小<br>然后读取对应字节数的数据从而得到Request的具体内容<br>服务器端处理了请求后，也用同样的方式来发送响应。</li>
<li>RequestMessage结构：<br>RequestMessage =&gt; ApiKey ApiVersion CorrelationId ClientId Request  </li>
</ol>
<table>
<thead>
<tr>
<th style="text-align:center">名称</th>
<th style="text-align:center">类型</th>
<th style="text-align:center">描术</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">ApiKey</td>
<td style="text-align:center">int16</td>
<td style="text-align:center">表示这次请求的API编号</td>
</tr>
<tr>
<td style="text-align:center">ApiVersion</td>
<td style="text-align:center">int16</td>
<td style="text-align:center">表示请求的API的版本，有了版本后就可以做到后向兼容</td>
</tr>
<tr>
<td style="text-align:center">CorrelationId</td>
<td style="text-align:center">int32</td>
<td style="text-align:center">由客户端指定的一个数字唯一标示这次请求的id，服务器端在处理完请求后也会把同样的CorrelationId写到Response中，这样客户端就能把某个请求和响应对应起来了。</td>
</tr>
<tr>
<td style="text-align:center">ClientId</td>
<td style="text-align:center">string</td>
<td style="text-align:center">客户端指定的用来描述客户端的字符串，会被用来记录日志和监控，它唯一标示一个客户端。</td>
</tr>
<tr>
<td style="text-align:center">Request</td>
<td style="text-align:center">—</td>
<td style="text-align:center">Request的具体内容。</td>
</tr>
</tbody>
</table>
<ol>
<li>ResponseMessage结构：<br>ResponseMessage =&gt; CorrelationId Response<br>|名称 |类型 |描术|<br>|:—-:|:—-:|:—-:|<br>|CorrelationId     |int32         |对应Request的CorrelationId。  |<br>|Response        |—            |对应Request的Response，不同的Request的Response的字段是不一样的。 |</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>消息队列</category>
        <category>kafka</category>
      </categories>
      <tags>
        <tag>MQ</tag>
      </tags>
  </entry>
  <entry>
    <title>消息队列</title>
    <url>/2022/03/18/%E5%88%86%E5%B8%83%E5%BC%8F-%E5%88%86%E5%B8%83%E5%BC%8F%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97-%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E6%A6%82%E8%A7%88-%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="消息队列分类："><a href="#消息队列分类：" class="headerlink" title="消息队列分类："></a>消息队列分类：</h1><p>点对点和发布/订阅两种：</p>
<ol>
<li>点对点：<br>消息生产者生产消息发送到queue中，然后消息消费者从queue中取出并且消费消息。<br>消息被消费以后，queue中不再有存储，所以消息消费者不可能消费到已经被消费的消息。<br>Queue支持存在多个消费者，但是对一个消息而言，只会有一个消费者可以消费。</li>
<li>发布/订阅：<br>消息生产者（发布）将消息发布到topic中，同时有多个消息消费者（订阅）消费该消息。<br>和点对点方式不同，发布到topic的消息会被所有订阅者消费。</li>
</ol>
<h1 id="MQ消息队列对比"><a href="#MQ消息队列对比" class="headerlink" title="MQ消息队列对比"></a>MQ消息队列对比</h1><ol>
<li>RabbitMQ：支持的协议多，非常重量级消息队列，对路由(Routing)，负载均衡(Loadbalance)或者数据持久化都有很好的支持。</li>
<li>ZeroMQ：号称最快的消息队列系统，尤其针对大吞吐量的需求场景，擅长的高级/复杂的队列，但是技术也复杂，并且只提供非持久性的队列。</li>
<li>ActiveMQ：Apache下的一个子项，类似ZeroMQ，能够以代理人和点对点的技术实现队列。</li>
<li>Redis：是一个key-Value的NOSql数据库，但也支持MQ功能，数据量较小，性能优于RabbitMQ，数据超过10K就慢的无法忍受。</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>消息队列</category>
      </categories>
      <tags>
        <tag>MQ</tag>
      </tags>
  </entry>
  <entry>
    <title>文章加密-2</title>
    <url>/2022/03/16/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86-2/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="文章加密-2"><a href="#文章加密-2" class="headerlink" title="文章加密-2"></a>文章加密-2</h1><ol>
<li>插件<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br><span class="line"></span><br><span class="line">或者 yarn add hexo-blog-encrypt (需要安装 Yarn)</span><br></pre></td></tr></table></figure></li>
<li>站点启用<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">encrypt:</span><br><span class="line">    enable: true</span><br></pre></td></tr></table></figure></li>
<li>然后在你的文章的头部添加上对应的字段，如 password, abstract, message<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章加密</span><br><span class="line">date: 2019-01-04T22:20:13.000Z</span><br><span class="line">category: 教程</span><br><span class="line">tags:</span><br><span class="line">  - 博客</span><br><span class="line">  - Hexo</span><br><span class="line">keywords: 博客文章密码</span><br><span class="line">password: TloveY</span><br><span class="line">abstract: 密码：TloveY</span><br><span class="line">message:  输入密码，查看文章</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li>
</ol>
<ul>
<li>password: 是该博客加密使用的密码</li>
<li>abstract: 是该博客的摘要，会显示在博客的列表页</li>
<li>message: 这个是博客查看时，密码输入框上面的描述性文字</li>
</ul>
<ol>
<li>如果你想对 TOC 也进行加密，则在 article.ejs 中将 TOC 的生成代码修改成如下：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;% if(post.toc &#x3D;&#x3D; true)&#123; %&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;toc-div&quot; class&#x3D;&quot;toc-article&quot; &lt;% if (post.encrypt &#x3D;&#x3D; true) &#123; %&gt;style&#x3D;&quot;display:none&quot; &lt;% &#125; %&gt;&gt;</span><br><span class="line">        &lt;strong class&#x3D;&quot;toc-title&quot;&gt;Index&lt;&#x2F;strong&gt;</span><br><span class="line">        &lt;% if (post.encrypt &#x3D;&#x3D; true) &#123; %&gt;</span><br><span class="line">            &lt;%- toc(post.origin) %&gt;</span><br><span class="line">        &lt;% &#125; else &#123; %&gt;</span><br><span class="line">            &lt;%- toc(post.content) %&gt;</span><br><span class="line">        &lt;% &#125; %&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line">&lt;%- post.content %&gt;</span><br></pre></td></tr></table></figure></li>
<li>然后使用 hexo clean &amp;&amp; hexo g &amp;&amp; hexo s，来查看效果。</li>
</ol>
<h1 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h1><ol>
<li><p>如果你对默认的主题不满意，或者希望修改默认的提示和摘要内容，你可以添加如下配置在 站点配置文件 中。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">encrypt:</span><br><span class="line">  enable: true</span><br><span class="line">  default_abstract: 这是一篇加密文章，内容可能是个人情感宣泄或者收费技术。如果你确实想看，请与我联系。</span><br><span class="line">  default_message: 输入密码，查看文章。</span><br></pre></td></tr></table></figure>
<p>这样，对于每一篇需要加密的文章就不必都在在头部添加 abstract 和 message 字段了，脚本会自动添加默认的内容填充。</p>
</li>
<li><p>如果你希望对某一篇特定的文章做特殊处理（如本文的 abstract ，可以在对应文章的头部添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章加密</span><br><span class="line">date: 2019-01-04T22:20:13.000Z</span><br><span class="line">category: 教程</span><br><span class="line">tags:</span><br><span class="line">  - 博客</span><br><span class="line">  - Hexo</span><br><span class="line">keywords: 博客文章密码</span><br><span class="line">password: TloveY</span><br><span class="line">abstract: 密码：TloveY</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>此时，博客头部的 abstract 会覆盖 站点配置文件 的 default_abstract 实现自定义。</p>
</li>
</ol>
<h1 id="存在问题"><a href="#存在问题" class="headerlink" title="存在问题"></a>存在问题</h1><p>如果你开启了 字数统计功能 的话，那么本文的字数会显得比实际值大。</p>
<p>加密文章内部分脚本会失效，已知 代码复制 失效。</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>文章加密</title>
    <url>/2022/03/16/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h1><h2 id="head脚本配置"><a href="#head脚本配置" class="headerlink" title="head脚本配置"></a>head脚本配置</h2><p>打开themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig文件,在以下位置插入这样一段代码：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;meta charset&#x3D;&quot;UTF-8&quot;&#x2F;&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot; &#x2F;&gt;</span><br><span class="line">&lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1, maximum-scale&#x3D;1&quot;&#x2F;&gt;</span><br><span class="line">&lt;meta name&#x3D;&quot;theme-color&quot; content&#x3D;&quot;&#123;&#123; theme.android_chrome_color &#125;&#125;&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 加密脚本 --&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    (function () &#123;</span><br><span class="line">        if (&#39;&#123;&#123; page.password &#125;&#125;&#39;) &#123;</span><br><span class="line">            if (prompt(&#39;请输入文章密码&#39;) !&#x3D;&#x3D; &#39;&#123;&#123; page.password &#125;&#125;&#39;) &#123;</span><br><span class="line">                alert(&#39;密码错误！&#39;);</span><br><span class="line">                if (history.length &#x3D;&#x3D;&#x3D; 1) &#123;</span><br><span class="line">                    location.replace(&quot;http:&#x2F;&#x2F;xxxxxxx.xxx&quot;); &#x2F;&#x2F; 这里替换成你的首页</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    history.back();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&#123;% if theme.needmoreshare2.enable %&#125;</span><br><span class="line">  &#123;% set needmoreshare2_css &#x3D; url_for(theme.vendors._internal + &#39;&#x2F;needsharebutton&#x2F;needsharebutton.css&#39;) %&#125;</span><br><span class="line">  &#123;% if theme.vendors.needmoreshare2 %&#125;</span><br><span class="line">    &#123;% set needmoreshare2_css &#x3D; theme.vendors.needmoreshare2_css %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&#123;&#123; needmoreshare2_css &#125;&#125;&quot;&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="文章加密配置"><a href="#文章加密配置" class="headerlink" title="文章加密配置"></a>文章加密配置</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &quot;文章置顶&quot;</span><br><span class="line">date: 2022-03-16</span><br><span class="line">comments: true</span><br><span class="line">share: true</span><br><span class="line">toc: true</span><br><span class="line">password: xxxx</span><br><span class="line">categories:</span><br><span class="line">  - hexo</span><br><span class="line">  - 笔记</span><br><span class="line">tags:</span><br><span class="line">  - hexo</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<blockquote>
<p>password配置密码</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>文章置顶</title>
    <url>/2022/03/16/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E6%96%87%E7%AB%A0%E7%BD%AE%E9%A1%B6/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h1><p>博客中执行：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm uninstall hexo-generator-index --save</span><br><span class="line">$ npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure><br>然后在需要置顶的文章的Front-matter中加上top: true即可。比如下面这篇文章：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &quot;git merge过程操作&quot;</span><br><span class="line">date: 2018-10-05</span><br><span class="line">comments: true</span><br><span class="line">share: true</span><br><span class="line">toc: true</span><br><span class="line">top: true</span><br><span class="line">categories:</span><br><span class="line">  - git</span><br><span class="line">tags:</span><br><span class="line">  - git</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p>
<h1 id="设置置顶标志"><a href="#设置置顶标志" class="headerlink" title="设置置顶标志"></a>设置置顶标志</h1><p>/blog/themes/next/layout/_macro 目录下的post.swig文件，<br>定位到<div class="post-meta">标签下，插入代码：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;post-meta&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- 置顶标签 --&gt;</span><br><span class="line">  &#123;% if post.top %&#125;</span><br><span class="line">    &lt;i class&#x3D;&quot;fa fa-thumb-tack&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">    &lt;font color&#x3D;7D26CD&gt;置顶&lt;&#x2F;font&gt;</span><br><span class="line">    &lt;span class&#x3D;&quot;post-meta-divider&quot;&gt;|&lt;&#x2F;span&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>idea 启动项目提示 Command line is too long. Shorten command line for Application or also for Spring Boot default configuration</title>
    <url>/2022/03/15/ideal-%E5%90%AF%E5%8A%A8%E6%8F%90%E7%A4%BACommand-line-is-too-long/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<hr>
<h1 id="idea-启动项目提示-Command-line-is-too-long-Shorten-command-line-for-Application-or-also-for-Spring-Boot-default-configuration"><a href="#idea-启动项目提示-Command-line-is-too-long-Shorten-command-line-for-Application-or-also-for-Spring-Boot-default-configuration" class="headerlink" title="idea 启动项目提示 Command line is too long. Shorten command line for Application or also for Spring Boot default configuration"></a>idea 启动项目提示 Command line is too long. Shorten command line for Application or also for Spring Boot default configuration</h1><p>在.idea 文件夹中打开workspace.xml文件找到<component name="PropertiesComponent">,在标签里加一行    </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;property name&#x3D;&quot;dynamic.classpath&quot; value&#x3D;&quot;true&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>ideal</category>
        <category>异常</category>
      </categories>
      <tags>
        <tag>ideal</tag>
      </tags>
  </entry>
  <entry>
    <title>动态背景</title>
    <url>/2022/03/15/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E5%8A%A8%E6%80%81%E8%83%8C%E6%99%AF/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<p>七牛云图床</p>
<hr>
<h1 id="layout-swig"><a href="#layout-swig" class="headerlink" title="_layout.swig"></a>_layout.swig</h1><p>找到themes\next\layout_layout.swig文件，添加内容：<br>在<body>里添加：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;bg_content&quot;&gt;</span><br><span class="line">  &lt;canvas id&#x3D;&quot;canvas&quot;&gt;&lt;&#x2F;canvas&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><br>仍是该文件，在末尾添加：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;src&#x2F;dynamic_bg.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></p>
<h1 id="dynamic-bg-js"><a href="#dynamic-bg-js" class="headerlink" title="dynamic_bg.js"></a>dynamic_bg.js</h1><p>在themes\next\source\js\src中新建文件dynamic_bg.js，代码链接中可见：dynamic_bg.js</p>
<h1 id="custom-styl"><a href="#custom-styl" class="headerlink" title="custom.styl"></a>custom.styl</h1><p>在themes\next\source\css_custom\custom.styl文件末尾添加内容：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.bg_content &#123;</span><br><span class="line">  position: fixed;</span><br><span class="line">  top: 0;</span><br><span class="line">  z-index: -1;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>文章添加阴影效果</title>
    <url>/2022/03/15/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E6%96%87%E7%AB%A0%E6%B7%BB%E5%8A%A0%E9%98%B4%E5%BD%B1%E6%95%88%E6%9E%9C/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<p>七牛云图床</p>
<hr>
<h1 id="文章添加阴影效果"><a href="#文章添加阴影效果" class="headerlink" title="文章添加阴影效果"></a>文章添加阴影效果</h1><p>打开\themes\next\source\css_custom\custom.styl,向里面加入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 主页文章添加阴影效果</span><br><span class="line"> .post &#123;</span><br><span class="line">   margin-top: 60px;</span><br><span class="line">   margin-bottom: 60px;</span><br><span class="line">   padding: 25px;</span><br><span class="line">   -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>点击爱心效果</title>
    <url>/2022/03/15/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E7%82%B9%E5%87%BB%E7%88%B1%E5%BF%83%E6%95%88%E6%9E%9C/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<p>七牛云图床</p>
<hr>
<h1 id="点击爱心效果"><a href="#点击爱心效果" class="headerlink" title="点击爱心效果"></a>点击爱心效果</h1><h2 id="创建js文件"><a href="#创建js文件" class="headerlink" title="创建js文件"></a>创建js文件</h2><p>在/themes/next/source/js/src下新建文件clicklove.js，接着把该链接下的代码拷贝粘贴到clicklove.js文件中。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#39;&#39;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e&#x3D;0;e&lt;d.length;e++)d[e].alpha&lt;&#x3D;0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+&#x3D;.004,d[e].alpha-&#x3D;.013,d[e].el.style.cssText&#x3D;&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t&#x3D;&quot;function&quot;&#x3D;&#x3D;typeof e.onclick&amp;&amp;e.onclick;e.onclick&#x3D;function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a&#x3D;t.createElement(&quot;div&quot;);a.className&#x3D;&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a&#x3D;t.createElement(&quot;style&quot;);a.type&#x3D;&quot;text&#x2F;css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText&#x3D;e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d&#x3D;[];e.requestAnimationFrame&#x3D;function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3&#x2F;60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure></p>
<h2 id="修改-layout-swig"><a href="#修改-layout-swig" class="headerlink" title="修改_layout.swig"></a>修改_layout.swig</h2><p>在\themes\next\layout_layout.swig文件末尾添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;src&#x2F;clicklove.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>留言板</title>
    <url>/2022/03/15/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E7%95%99%E8%A8%80%E6%9D%BF/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<hr>
<h1 id="添加留言本-page"><a href="#添加留言本-page" class="headerlink" title="添加留言本 page"></a>添加留言本 page</h1><p>  进入到博客的根目录，运行命令：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page guestbook</span><br></pre></td></tr></table></figure><br>生成index.md，在里面可以写一些留言板介绍内容等<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">博客根目录\source\guestbook\index.md</span><br></pre></td></tr></table></figure></p>
<h1 id="修改菜单目录"><a href="#修改菜单目录" class="headerlink" title="修改菜单目录"></a>修改菜单目录</h1><p>Next主题默认只有主页和和关于，如果要增加菜单，在themes/next/_config.yml中修改配置，<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Menu Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line">menu:</span><br><span class="line">  home: &#x2F; || home</span><br><span class="line">  about: &#x2F;about&#x2F; || user</span><br><span class="line">  tags: &#x2F;tags&#x2F; || tags #标签</span><br><span class="line">  categories: &#x2F;categories&#x2F; || th #分类</span><br><span class="line">  archives: &#x2F;archives&#x2F; || archive #归档</span><br><span class="line">  guestbook: &#x2F;guestbook&#x2F; || comment #留言</span><br><span class="line">  #schedule: &#x2F;schedule&#x2F; || calendar</span><br><span class="line">  #sitemap: &#x2F;sitemap.xml || sitemap</span><br><span class="line">  #commonweal: &#x2F;404&#x2F; || heartbeat</span><br></pre></td></tr></table></figure><br>其中留言页需要自己增加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">guestbook: &#x2F;guestbook&#x2F; || comment #留言</span><br></pre></td></tr></table></figure>
<h1 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h1><p>本地预览<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure></p>
<p>推荐使用 &amp;&amp; 作为组合命令的串联符号</p>
<p>注：一定要严格清理缓存，这样不容易出现问题，即需要执行hexo clean</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>自定义鼠标样式</title>
    <url>/2022/03/15/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E8%87%AA%E5%AE%9A%E4%B9%89%E9%BC%A0%E6%A0%87%E6%A0%B7%E5%BC%8F/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<p>七牛云图床</p>
<hr>
<h1 id="自定义鼠标样式"><a href="#自定义鼠标样式" class="headerlink" title="自定义鼠标样式"></a>自定义鼠标样式</h1><p>打开themes/next/source/css/_custom/custom.styl，添加代码：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 鼠标样式</span><br><span class="line">  * &#123;</span><br><span class="line">      cursor: url(&quot;http:&#x2F;&#x2F;om8u46rmb.bkt.clouddn.com&#x2F;sword2.ico&quot;),auto!important</span><br><span class="line">  &#125;</span><br><span class="line">  :active &#123;</span><br><span class="line">      cursor: url(&quot;http:&#x2F;&#x2F;om8u46rmb.bkt.clouddn.com&#x2F;sword1.ico&quot;),auto!important</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>集成gittak评论系统异常</title>
    <url>/2022/03/14/hexo-%E5%BC%82%E5%B8%B8-hexo%E7%AC%94%E8%AE%B0-%E9%9B%86%E6%88%90gittak%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E5%BC%82%E5%B8%B8/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="初始化失败"><a href="#初始化失败" class="headerlink" title="初始化失败"></a>初始化失败</h1><h2 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h2><p>在主题配置文件next/_config.yml中添加如下内容：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gitalk:</span><br><span class="line">  enable: true</span><br><span class="line">  githubID: github帐号  # 例：asdfv1929   </span><br><span class="line">  repo: 仓库名称   # 例：asdfv1929.github.io</span><br><span class="line">  ClientID: Client ID</span><br><span class="line">  ClientSecret: Client Secret</span><br><span class="line">  adminUser: github帐号 #指定可初始化评论账户</span><br><span class="line">  distractionFreeMode: true</span><br></pre></td></tr></table></figure></p>
<h2 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h2><p>将 githubID 和 adminUser 配置一致</p>
<hr>
<ul>
<li><strong>Hexo添加gitalk评论插件及 Error: Validation Failed 报错解决：<a href="https://blog.csdn.net/weixin_30642561/article/details/97126103" target="_blank" rel="noopener">https://blog.csdn.net/weixin_30642561/article/details/97126103</a></strong></li>
<li><strong>报错出现 Error: Validation Failed. #102: <a href="https://github.com/gitalk/gitalk/issues/102" target="_blank" rel="noopener">https://github.com/gitalk/gitalk/issues/102</a></strong></li>
</ul>
<hr>
<h1 id="评论提示错误，且无法评论"><a href="#评论提示错误，且无法评论" class="headerlink" title="评论提示错误，且无法评论"></a>评论提示错误，且无法评论</h1><p>页面显示：Error: Validation Failed.<br>浏览器http请求响应： POST <a href="https://api.github.com/repos/diabolo-hub/diabolo-hub.github.io/issues" target="_blank" rel="noopener">https://api.github.com/repos/diabolo-hub/diabolo-hub.github.io/issues</a> 422</p>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>文章名称经URL编码后添加到issues的label里，但是label的长度上限是50个字符，所以文章名有些长的都会生成label失败，也就没办法评论了。</p>
<h2 id="处理-1"><a href="#处理-1" class="headerlink" title="处理"></a>处理</h2><p>文章名经URL编码后转MD5，然后再生成label,这样就不会超过长度了，也存在区分度</p>
<ol>
<li>在 themes\NexT\source\js\src\ 下添加 md5.min.js，代码如下<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">n</span>)</span>&#123;<span class="string">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">t</span>(<span class="params">n,t</span>)</span>&#123;<span class="keyword">var</span> r=(<span class="number">65535</span>&amp;n)+(<span class="number">65535</span>&amp;t);<span class="keyword">return</span>(n&gt;&gt;<span class="number">16</span>)+(t&gt;&gt;<span class="number">16</span>)+(r&gt;&gt;<span class="number">16</span>)&lt;&lt;<span class="number">16</span>|<span class="number">65535</span>&amp;r&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params">n,t</span>)</span>&#123;<span class="keyword">return</span> n&lt;&lt;t|n&gt;&gt;&gt;<span class="number">32</span>-t&#125;<span class="function"><span class="keyword">function</span> <span class="title">e</span>(<span class="params">n,e,o,u,c,f</span>)</span>&#123;<span class="keyword">return</span> t(r(t(t(e,n),t(u,f)),c),o)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params">n,t,r,o,u,c,f</span>)</span>&#123;<span class="keyword">return</span> e(t&amp;r|~t&amp;o,n,t,u,c,f)&#125;<span class="function"><span class="keyword">function</span> <span class="title">u</span>(<span class="params">n,t,r,o,u,c,f</span>)</span>&#123;<span class="keyword">return</span> e(t&amp;o|r&amp;~o,n,t,u,c,f)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">n,t,r,o,u,c,f</span>)</span>&#123;<span class="keyword">return</span> e(t^r^o,n,t,u,c,f)&#125;<span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">n,t,r,o,u,c,f</span>)</span>&#123;<span class="keyword">return</span> e(r^(t|~o),n,t,u,c,f)&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">n,r</span>)</span>&#123;n[r&gt;&gt;<span class="number">5</span>]|=<span class="number">128</span>&lt;&lt;r%<span class="number">32</span>,n[<span class="number">14</span>+(r+<span class="number">64</span>&gt;&gt;&gt;<span class="number">9</span>&lt;&lt;<span class="number">4</span>)]=r;<span class="keyword">var</span> e,i,a,d,h,l=<span class="number">1732584193</span>,g=<span class="number">-271733879</span>,v=<span class="number">-1732584194</span>,m=<span class="number">271733878</span>;<span class="keyword">for</span>(e=<span class="number">0</span>;e&lt;n.length;e+=<span class="number">16</span>)i=l,a=g,d=v,h=m,g=f(g=f(g=f(g=f(g=c(g=c(g=c(g=c(g=u(g=u(g=u(g=u(g=o(g=o(g=o(g=o(g,v=o(v,m=o(m,l=o(l,g,v,m,n[e],<span class="number">7</span>,<span class="number">-680876936</span>),g,v,n[e+<span class="number">1</span>],<span class="number">12</span>,<span class="number">-389564586</span>),l,g,n[e+<span class="number">2</span>],<span class="number">17</span>,<span class="number">606105819</span>),m,l,n[e+<span class="number">3</span>],<span class="number">22</span>,<span class="number">-1044525330</span>),v=o(v,m=o(m,l=o(l,g,v,m,n[e+<span class="number">4</span>],<span class="number">7</span>,<span class="number">-176418897</span>),g,v,n[e+<span class="number">5</span>],<span class="number">12</span>,<span class="number">1200080426</span>),l,g,n[e+<span class="number">6</span>],<span class="number">17</span>,<span class="number">-1473231341</span>),m,l,n[e+<span class="number">7</span>],<span class="number">22</span>,<span class="number">-45705983</span>),v=o(v,m=o(m,l=o(l,g,v,m,n[e+<span class="number">8</span>],<span class="number">7</span>,<span class="number">1770035416</span>),g,v,n[e+<span class="number">9</span>],<span class="number">12</span>,<span class="number">-1958414417</span>),l,g,n[e+<span class="number">10</span>],<span class="number">17</span>,<span class="number">-42063</span>),m,l,n[e+<span class="number">11</span>],<span class="number">22</span>,<span class="number">-1990404162</span>),v=o(v,m=o(m,l=o(l,g,v,m,n[e+<span class="number">12</span>],<span class="number">7</span>,<span class="number">1804603682</span>),g,v,n[e+<span class="number">13</span>],<span class="number">12</span>,<span class="number">-40341101</span>),l,g,n[e+<span class="number">14</span>],<span class="number">17</span>,<span class="number">-1502002290</span>),m,l,n[e+<span class="number">15</span>],<span class="number">22</span>,<span class="number">1236535329</span>),v=u(v,m=u(m,l=u(l,g,v,m,n[e+<span class="number">1</span>],<span class="number">5</span>,<span class="number">-165796510</span>),g,v,n[e+<span class="number">6</span>],<span class="number">9</span>,<span class="number">-1069501632</span>),l,g,n[e+<span class="number">11</span>],<span class="number">14</span>,<span class="number">643717713</span>),m,l,n[e],<span class="number">20</span>,<span class="number">-373897302</span>),v=u(v,m=u(m,l=u(l,g,v,m,n[e+<span class="number">5</span>],<span class="number">5</span>,<span class="number">-701558691</span>),g,v,n[e+<span class="number">10</span>],<span class="number">9</span>,<span class="number">38016083</span>),l,g,n[e+<span class="number">15</span>],<span class="number">14</span>,<span class="number">-660478335</span>),m,l,n[e+<span class="number">4</span>],<span class="number">20</span>,<span class="number">-405537848</span>),v=u(v,m=u(m,l=u(l,g,v,m,n[e+<span class="number">9</span>],<span class="number">5</span>,<span class="number">568446438</span>),g,v,n[e+<span class="number">14</span>],<span class="number">9</span>,<span class="number">-1019803690</span>),l,g,n[e+<span class="number">3</span>],<span class="number">14</span>,<span class="number">-187363961</span>),m,l,n[e+<span class="number">8</span>],<span class="number">20</span>,<span class="number">1163531501</span>),v=u(v,m=u(m,l=u(l,g,v,m,n[e+<span class="number">13</span>],<span class="number">5</span>,<span class="number">-1444681467</span>),g,v,n[e+<span class="number">2</span>],<span class="number">9</span>,<span class="number">-51403784</span>),l,g,n[e+<span class="number">7</span>],<span class="number">14</span>,<span class="number">1735328473</span>),m,l,n[e+<span class="number">12</span>],<span class="number">20</span>,<span class="number">-1926607734</span>),v=c(v,m=c(m,l=c(l,g,v,m,n[e+<span class="number">5</span>],<span class="number">4</span>,<span class="number">-378558</span>),g,v,n[e+<span class="number">8</span>],<span class="number">11</span>,<span class="number">-2022574463</span>),l,g,n[e+<span class="number">11</span>],<span class="number">16</span>,<span class="number">1839030562</span>),m,l,n[e+<span class="number">14</span>],<span class="number">23</span>,<span class="number">-35309556</span>),v=c(v,m=c(m,l=c(l,g,v,m,n[e+<span class="number">1</span>],<span class="number">4</span>,<span class="number">-1530992060</span>),g,v,n[e+<span class="number">4</span>],<span class="number">11</span>,<span class="number">1272893353</span>),l,g,n[e+<span class="number">7</span>],<span class="number">16</span>,<span class="number">-155497632</span>),m,l,n[e+<span class="number">10</span>],<span class="number">23</span>,<span class="number">-1094730640</span>),v=c(v,m=c(m,l=c(l,g,v,m,n[e+<span class="number">13</span>],<span class="number">4</span>,<span class="number">681279174</span>),g,v,n[e],<span class="number">11</span>,<span class="number">-358537222</span>),l,g,n[e+<span class="number">3</span>],<span class="number">16</span>,<span class="number">-722521979</span>),m,l,n[e+<span class="number">6</span>],<span class="number">23</span>,<span class="number">76029189</span>),v=c(v,m=c(m,l=c(l,g,v,m,n[e+<span class="number">9</span>],<span class="number">4</span>,<span class="number">-640364487</span>),g,v,n[e+<span class="number">12</span>],<span class="number">11</span>,<span class="number">-421815835</span>),l,g,n[e+<span class="number">15</span>],<span class="number">16</span>,<span class="number">530742520</span>),m,l,n[e+<span class="number">2</span>],<span class="number">23</span>,<span class="number">-995338651</span>),v=f(v,m=f(m,l=f(l,g,v,m,n[e],<span class="number">6</span>,<span class="number">-198630844</span>),g,v,n[e+<span class="number">7</span>],<span class="number">10</span>,<span class="number">1126891415</span>),l,g,n[e+<span class="number">14</span>],<span class="number">15</span>,<span class="number">-1416354905</span>),m,l,n[e+<span class="number">5</span>],<span class="number">21</span>,<span class="number">-57434055</span>),v=f(v,m=f(m,l=f(l,g,v,m,n[e+<span class="number">12</span>],<span class="number">6</span>,<span class="number">1700485571</span>),g,v,n[e+<span class="number">3</span>],<span class="number">10</span>,<span class="number">-1894986606</span>),l,g,n[e+<span class="number">10</span>],<span class="number">15</span>,<span class="number">-1051523</span>),m,l,n[e+<span class="number">1</span>],<span class="number">21</span>,<span class="number">-2054922799</span>),v=f(v,m=f(m,l=f(l,g,v,m,n[e+<span class="number">8</span>],<span class="number">6</span>,<span class="number">1873313359</span>),g,v,n[e+<span class="number">15</span>],<span class="number">10</span>,<span class="number">-30611744</span>),l,g,n[e+<span class="number">6</span>],<span class="number">15</span>,<span class="number">-1560198380</span>),m,l,n[e+<span class="number">13</span>],<span class="number">21</span>,<span class="number">1309151649</span>),v=f(v,m=f(m,l=f(l,g,v,m,n[e+<span class="number">4</span>],<span class="number">6</span>,<span class="number">-145523070</span>),g,v,n[e+<span class="number">11</span>],<span class="number">10</span>,<span class="number">-1120210379</span>),l,g,n[e+<span class="number">2</span>],<span class="number">15</span>,<span class="number">718787259</span>),m,l,n[e+<span class="number">9</span>],<span class="number">21</span>,<span class="number">-343485551</span>),l=t(l,i),g=t(g,a),v=t(v,d),m=t(m,h);<span class="keyword">return</span>[l,g,v,m]&#125;<span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">n</span>)</span>&#123;<span class="keyword">var</span> t,r=<span class="string">""</span>,e=<span class="number">32</span>*n.length;<span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;e;t+=<span class="number">8</span>)r+=<span class="built_in">String</span>.fromCharCode(n[t&gt;&gt;<span class="number">5</span>]&gt;&gt;&gt;t%<span class="number">32</span>&amp;<span class="number">255</span>);<span class="keyword">return</span> r&#125;<span class="function"><span class="keyword">function</span> <span class="title">d</span>(<span class="params">n</span>)</span>&#123;<span class="keyword">var</span> t,r=[];<span class="keyword">for</span>(r[(n.length&gt;&gt;<span class="number">2</span>)<span class="number">-1</span>]=<span class="keyword">void</span> <span class="number">0</span>,t=<span class="number">0</span>;t&lt;r.length;t+=<span class="number">1</span>)r[t]=<span class="number">0</span>;<span class="keyword">var</span> e=<span class="number">8</span>*n.length;<span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;e;t+=<span class="number">8</span>)r[t&gt;&gt;<span class="number">5</span>]|=(<span class="number">255</span>&amp;n.charCodeAt(t/<span class="number">8</span>))&lt;&lt;t%<span class="number">32</span>;<span class="keyword">return</span> r&#125;<span class="function"><span class="keyword">function</span> <span class="title">h</span>(<span class="params">n</span>)</span>&#123;<span class="keyword">return</span> a(i(d(n),<span class="number">8</span>*n.length))&#125;<span class="function"><span class="keyword">function</span> <span class="title">l</span>(<span class="params">n,t</span>)</span>&#123;<span class="keyword">var</span> r,e,o=d(n),u=[],c=[];<span class="keyword">for</span>(u[<span class="number">15</span>]=c[<span class="number">15</span>]=<span class="keyword">void</span> <span class="number">0</span>,o.length&gt;<span class="number">16</span>&amp;&amp;(o=i(o,<span class="number">8</span>*n.length)),r=<span class="number">0</span>;r&lt;<span class="number">16</span>;r+=<span class="number">1</span>)u[r]=<span class="number">909522486</span>^o[r],c[r]=<span class="number">1549556828</span>^o[r];<span class="keyword">return</span> e=i(u.concat(d(t)),<span class="number">512</span>+<span class="number">8</span>*t.length),a(i(c.concat(e),<span class="number">640</span>))&#125;<span class="function"><span class="keyword">function</span> <span class="title">g</span>(<span class="params">n</span>)</span>&#123;<span class="keyword">var</span> t,r,e=<span class="string">""</span>;<span class="keyword">for</span>(r=<span class="number">0</span>;r&lt;n.length;r+=<span class="number">1</span>)t=n.charCodeAt(r),e+=<span class="string">"0123456789abcdef"</span>.charAt(t&gt;&gt;&gt;<span class="number">4</span>&amp;<span class="number">15</span>)+<span class="string">"0123456789abcdef"</span>.charAt(<span class="number">15</span>&amp;t);<span class="keyword">return</span> e&#125;<span class="function"><span class="keyword">function</span> <span class="title">v</span>(<span class="params">n</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">unescape</span>(<span class="built_in">encodeURIComponent</span>(n))&#125;<span class="function"><span class="keyword">function</span> <span class="title">m</span>(<span class="params">n</span>)</span>&#123;<span class="keyword">return</span> h(v(n))&#125;<span class="function"><span class="keyword">function</span> <span class="title">p</span>(<span class="params">n</span>)</span>&#123;<span class="keyword">return</span> g(m(n))&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params">n,t</span>)</span>&#123;<span class="keyword">return</span> l(v(n),v(t))&#125;<span class="function"><span class="keyword">function</span> <span class="title">C</span>(<span class="params">n,t</span>)</span>&#123;<span class="keyword">return</span> g(s(n,t))&#125;<span class="function"><span class="keyword">function</span> <span class="title">A</span>(<span class="params">n,t,r</span>)</span>&#123;<span class="keyword">return</span> t?r?s(t,n):C(t,n):r?m(n):p(n)&#125;<span class="string">"function"</span>==<span class="keyword">typeof</span> define&amp;&amp;define.amd?define(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> A&#125;):<span class="string">"object"</span>==<span class="keyword">typeof</span> <span class="built_in">module</span>&amp;&amp;<span class="built_in">module</span>.exports?<span class="built_in">module</span>.exports=A:n.md5=A&#125;(<span class="keyword">this</span>);</span><br></pre></td></tr></table></figure></li>
<li>然后修改修改gitalk.swig，引入md5.min.js，对id值md5编码化<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if page.comments &amp;&amp; theme.gitalk.enable %&#125;</span><br><span class="line">  &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;gitalk&#x2F;dist&#x2F;gitalk.css&quot;&gt;</span><br><span class="line">  &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;gitalk&#x2F;dist&#x2F;gitalk.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">  &lt;script src&#x3D;&quot;&#x2F;js&#x2F;src&#x2F;md5.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">   &lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">        var gitalk &#x3D; new Gitalk(&#123;</span><br><span class="line">          clientID: &#39;&#123;&#123; theme.gitalk.ClientID &#125;&#125;&#39;,</span><br><span class="line">          clientSecret: &#39;&#123;&#123; theme.gitalk.ClientSecret &#125;&#125;&#39;,</span><br><span class="line">          repo: &#39;&#123;&#123; theme.gitalk.repo &#125;&#125;&#39;,</span><br><span class="line">          owner: &#39;&#123;&#123; theme.gitalk.githubID &#125;&#125;&#39;,</span><br><span class="line">          admin: [&#39;&#123;&#123; theme.gitalk.adminUser &#125;&#125;&#39;],</span><br><span class="line"></span><br><span class="line">          &lt;!-- id: location.pathname, --&gt;</span><br><span class="line">          id: md5(location.pathname),</span><br><span class="line"></span><br><span class="line">          distractionFreeMode: &#39;&#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;&#39;</span><br><span class="line">        &#125;)</span><br><span class="line">        gitalk.render(&#39;gitalk-container&#39;)</span><br><span class="line">       &lt;&#x2F;script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>异常</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>next集成DaoVoice</title>
    <url>/2022/03/14/hexo-%E6%8F%92%E4%BB%B6-20220314-next%E9%9B%86%E6%88%90DaoVoice/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>DaoCloud：<a href="https://www.daocloud.io/" target="_blank" rel="noopener">https://www.daocloud.io/</a></strong></li>
<li><strong>DaoVoice: <a href="http://dashboard.daovoice.io/#/get-started" target="_blank" rel="noopener">http://dashboard.daovoice.io/#/get-started</a></strong></li>
<li><strong>DaoVoice接入： <a href="http://guide.daocloud.io/daovoice/daovoice-9151028.html" target="_blank" rel="noopener">http://guide.daocloud.io/daovoice/daovoice-9151028.html</a></strong></li>
</ul>
<hr>
<h1 id="next集成DaoVoice"><a href="#next集成DaoVoice" class="headerlink" title="next集成DaoVoice"></a>next集成DaoVoice</h1><h2 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h2><p>注册<a href="http://dashboard.daovoice.io/#/get-started" target="_blank" rel="noopener">DaoVoice</a><br>完成后，会得到一个app_id，后面会用到：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2.调用下面的 JavaScript 与注册用户沟通</span><br><span class="line">daovoice(&#39;init&#39;, &#123;</span><br><span class="line">  app_id: &quot;xxxxx&quot;,</span><br><span class="line">  user_id: &quot;NO_89757&quot;, &#x2F;&#x2F; 必填: 该用户在您系统上的唯一ID</span><br><span class="line">  email: &quot;daovoice@example.com&quot;, &#x2F;&#x2F; 选填:  该用户在您系统上的主邮箱</span><br><span class="line">  name: &quot;道客船长&quot;, &#x2F;&#x2F; 选填: 用户名</span><br><span class="line">  signed_up: 1449821660 &#x2F;&#x2F; 选填: 用户的注册时间，用Unix时间戳表示</span><br><span class="line">&#125;);</span><br><span class="line">daovoice(&#39;update&#39;);</span><br></pre></td></tr></table></figure></p>
<h2 id="修改head-swig"><a href="#修改head-swig" class="headerlink" title="修改head.swig"></a>修改head.swig</h2><p>修改/themes/next/layout/_partials/head.swig文件，添加内容如下，注意’//widget.daovoice.io/widget/2e5d695d.js’ 中js文件名改成自己的id就行：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.daovoice %&#125;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">  (function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]&#x3D;r;i[r]&#x3D;i[r]||function()&#123;(i[r].q&#x3D;i[r].q||[]).push(arguments)&#125;,i[r].l&#x3D;1*new Date();a&#x3D;s.createElement(o),m&#x3D;s.getElementsByTagName(o)[0];a.async&#x3D;1;a.src&#x3D;g;a.charset&#x3D;&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&#39;https:&#39; &#x3D;&#x3D; document.location.protocol ? &#39;https:&#39; : &#39;http:&#39;) + &quot;&#x2F;&#x2F;widget.daovoice.io&#x2F;widget&#x2F;2e5d695d.js&quot;,&quot;daovoice&quot;)</span><br><span class="line">  daovoice(&#39;init&#39;, &#123;</span><br><span class="line">      app_id: &quot;&#123;&#123;theme.daovoice_app_id&#125;&#125;&quot;</span><br><span class="line">    &#125;);</span><br><span class="line">  daovoice(&#39;update&#39;);</span><br><span class="line">  &lt;&#x2F;script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><br>位置贴图：<br><img src="images/DaoVoice位置贴图.png" alt=""></p>
<h2 id="主题配置文件"><a href="#主题配置文件" class="headerlink" title="主题配置文件"></a>主题配置文件</h2><p>在_config.yml文件中添加内容：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Online contact</span><br><span class="line">daovoice: true</span><br><span class="line">daovoice_app_id:   # 这里填你刚才获得的 app_id</span><br></pre></td></tr></table></figure></p>
<h2 id="聊天窗口配置"><a href="#聊天窗口配置" class="headerlink" title="聊天窗口配置"></a>聊天窗口配置</h2><p>附上我的聊天窗口的颜色、位置等设置信息：<br><img src="images/定制聊天样式.png" alt=""><br>至此，网页的在线联系功能已经完成，重新hexo g，hexo d上传GitHub后，页面上就能看到效果了。</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>plugin</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>gitalk评论系统</title>
    <url>/2022/03/14/hexo-%E6%8F%92%E4%BB%B6-hexo%E7%AC%94%E8%AE%B0-gitalk%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>第三方服务集成-DISQUS评论系统：<a href="http://theme-next.iissnan.com/third-party-services.html" target="_blank" rel="noopener">http://theme-next.iissnan.com/third-party-services.html</a></strong></li>
<li><strong>Hexo NexT主题中集成gitalk评论系统：<a href="https://asdfv1929.github.io/2018/01/20/gitalk/" target="_blank" rel="noopener">https://asdfv1929.github.io/2018/01/20/gitalk/</a></strong></li>
<li><strong>github gitalk评论系统：<a href="https://github.com/gitalk/gitalk" target="_blank" rel="noopener">https://github.com/gitalk/gitalk</a></strong></li>
<li><strong>gitalk在线示例: <a href="https://gitalk.github.io/" target="_blank" rel="noopener">https://gitalk.github.io/</a></strong></li>
</ul>
<hr>
<h1 id="两种方法"><a href="#两种方法" class="headerlink" title="两种方法"></a>两种方法</h1><h2 id="使用js脚本（将容器添加到您的页面）"><a href="#使用js脚本（将容器添加到您的页面）" class="headerlink" title="使用js脚本（将容器添加到您的页面）"></a>使用js脚本（将容器添加到您的页面）</h2><h3 id="创建一个GitHub-应用程序"><a href="#创建一个GitHub-应用程序" class="headerlink" title="创建一个GitHub 应用程序"></a>创建一个GitHub 应用程序</h3><p><a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">创建一个GitHub 应用程序</a> 注意：您必须在字段中指定网站域 url Authorization callback URL。</p>
<ol>
<li>Application name : 随意取</li>
<li>Homepage URL : 主页网址（<a href="https://xxx.github.io/" target="_blank" rel="noopener">https://xxx.github.io/</a>)</li>
<li>Application description: 随意，授权时显示</li>
<li>Authorization callback URL : 授权回调地址（<a href="https://xxx.github.io/" target="_blank" rel="noopener">https://xxx.github.io/</a>)<blockquote>
<p>得到一个 client ID 和一个 client secret，这个将被用于之后的用户登录</p>
<h3 id="gitalk-swig"><a href="#gitalk-swig" class="headerlink" title="gitalk.swig"></a>gitalk.swig</h3><p>新建/layout/_third-party/comments/gitalk.swig文件，并添加内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if page.comments &amp;&amp; theme.gitalk.enable %&#125;</span><br><span class="line">  &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;gitalk&#x2F;dist&#x2F;gitalk.css&quot;&gt;</span><br><span class="line">  &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;gitalk&#x2F;dist&#x2F;gitalk.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">   &lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">        var gitalk &#x3D; new Gitalk(&#123;</span><br><span class="line">          clientID: &#39;&#123;&#123; theme.gitalk.ClientID &#125;&#125;&#39;,</span><br><span class="line">          clientSecret: &#39;&#123;&#123; theme.gitalk.ClientSecret &#125;&#125;&#39;,</span><br><span class="line">          repo: &#39;&#123;&#123; theme.gitalk.repo &#125;&#125;&#39;,</span><br><span class="line">          owner: &#39;&#123;&#123; theme.gitalk.githubID &#125;&#125;&#39;,</span><br><span class="line">          admin: [&#39;&#123;&#123; theme.gitalk.adminUser &#125;&#125;&#39;],</span><br><span class="line">          id: location.pathname,</span><br><span class="line">          distractionFreeMode: &#39;&#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;&#39;</span><br><span class="line">        &#125;)</span><br><span class="line">        gitalk.render(&#39;gitalk-container&#39;)           </span><br><span class="line">       &lt;&#x2F;script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<h3 id="comments-swig"><a href="#comments-swig" class="headerlink" title="comments.swig"></a>comments.swig</h3><p>修改/layout/_partials/comments.swig，添加内容如下，与前面的elseif同一级别上：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% elseif theme.gitalk.enable %&#125;</span><br><span class="line"> &lt;div id&#x3D;&quot;gitalk-container&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>
<h3 id="index-swig"><a href="#index-swig" class="headerlink" title="index.swig"></a>index.swig</h3><p>修改layout/_third-party/comments/index.swig，在最后一行添加内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% include &#39;gitalk.swig&#39; %&#125;</span><br></pre></td></tr></table></figure>
<h3 id="gitalk-styl"><a href="#gitalk-styl" class="headerlink" title="gitalk.styl"></a>gitalk.styl</h3><p>新建/source/css/_common/components/third-party/gitalk.styl文件，添加内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.gt-header a, .gt-comments a, .gt-popup a</span><br><span class="line">  border-bottom: none;</span><br><span class="line">.gt-container .gt-popup .gt-action.is--active:before</span><br><span class="line">  top: 0.7em;</span><br></pre></td></tr></table></figure>
<h3 id="third-party-styl"><a href="#third-party-styl" class="headerlink" title="third-party.styl"></a>third-party.styl</h3><p>修改/source/css/_common/components/third-party/third-party.styl，在最后一行上添加内容，引入样式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@import &quot;gitalk&quot;;</span><br></pre></td></tr></table></figure>
<h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h3><p>在主题配置文件next/_config.yml中添加如下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gitalk:</span><br><span class="line">  enable: true</span><br><span class="line">  githubID: github帐号  # 例：asdfv1929   </span><br><span class="line">  repo: 仓库名称   # 例：asdfv1929.github.io</span><br><span class="line">  ClientID: Client ID</span><br><span class="line">  ClientSecret: Client Secret</span><br><span class="line">  adminUser: github帐号 #指定可初始化评论账户</span><br><span class="line">  distractionFreeMode: true</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ol>
<h2 id="在-React-中使用"><a href="#在-React-中使用" class="headerlink" title="在 React 中使用"></a>在 React 中使用</h2><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>plugin</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo集成xmind</title>
    <url>/2022/03/14/hexo-%E6%8F%92%E4%BB%B6-20221017-hexo%E9%9B%86%E6%88%90xmind/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<p>-<strong>hexo中绘制思维导图：<a href="http://www.hnbian.cn/posts/fcc091a7.html" target="_blank" rel="noopener">http://www.hnbian.cn/posts/fcc091a7.html</a></strong></p>
<hr>
<ol>
<li><p>安装插件<br>首先进入到 Hexo 博客的根目录，执行 npm install hexo-simple-mindmap 安装插件。</p>
</li>
<li><p>格式</p>
<blockquote class="pullquote mindmap mindmap-md"><ul>
<li>知识图谱<ul>
<li>Scala</li>
<li>java<ul>
<li>jvm</li>
</ul>
</li>
<li>消息队列<ul>
<li>kafka</li>
<li>pulsar</li>
</ul>
</li>
</ul>
</li>
</ul>
</blockquote>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>plugin</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>新增标签</title>
    <url>/2022/03/14/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E6%96%B0%E5%A2%9E%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="新增标签"><a href="#新增标签" class="headerlink" title="新增标签"></a>新增标签</h1><h2 id="在NexT的-config-yml配置文件下，找到"><a href="#在NexT的-config-yml配置文件下，找到" class="headerlink" title="在NexT的_config.yml配置文件下，找到"></a>在NexT的_config.yml配置文件下，找到</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F; || home</span><br><span class="line">  about: &#x2F;about&#x2F; || user</span><br><span class="line">  tags: &#x2F;tags&#x2F; || tags</span><br><span class="line">  categories: &#x2F;categories&#x2F; || th</span><br><span class="line">  archives: &#x2F;archives&#x2F; || archive</span><br><span class="line">  guestbook: &#x2F;guestbook # 增加这一行</span><br></pre></td></tr></table></figure>
<h2 id="在NexT-languages-zh-Hans-yml下，找到"><a href="#在NexT-languages-zh-Hans-yml下，找到" class="headerlink" title="在NexT\languages\zh-Hans.yml下，找到"></a>在NexT\languages\zh-Hans.yml下，找到</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: 首页</span><br><span class="line">  archives: 归档</span><br><span class="line">  categories: 分类</span><br><span class="line">  tags: 标签</span><br><span class="line">  about: 关于</span><br><span class="line">  guestbook: 给我留言</span><br></pre></td></tr></table></figure>
<h2 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h2><p>hexo new page “guestbook”</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>首页文章隐藏</title>
    <url>/2022/03/14/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E9%A6%96%E9%A1%B5%E6%96%87%E7%AB%A0%E9%9A%90%E8%97%8F/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="首页文章隐藏"><a href="#首页文章隐藏" class="headerlink" title="首页文章隐藏"></a>首页文章隐藏</h1><ol>
<li>Hexo\themes\next\layout\index.swig中添加 if post.notshow != true<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% block content %&#125;</span><br><span class="line">  &lt;section id&#x3D;&quot;posts&quot; class&#x3D;&quot;posts-expand&quot;&gt;</span><br><span class="line">    &#123;% for post in page.posts %&#125;</span><br><span class="line">        &#123;% if post.notshow !&#x3D; true %&#125;</span><br><span class="line">            &#123;&#123; post_template.render(post, true) &#125;&#125;</span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">  &lt;&#x2F;section&gt;</span><br><span class="line"></span><br><span class="line">  &#123;% include &#39;_partials&#x2F;pagination.swig&#39; %&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></li>
<li>在文章标题中添加如下<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &quot;首页文章隐藏&quot;</span><br><span class="line">date: 2022-03-14</span><br><span class="line">comments: true</span><br><span class="line">share: true</span><br><span class="line">toc: true</span><br><span class="line">notshow: true</span><br><span class="line">categories:</span><br><span class="line">  - hexo</span><br><span class="line">  - 笔记</span><br><span class="line">tags:</span><br><span class="line">  - hexo</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h2 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h2>hexo new page “guestbook”</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>自动分类和生成文章标题</title>
    <url>/2022/03/13/hexo-%E6%8F%92%E4%BB%B6-%E8%87%AA%E5%8A%A8%E5%88%86%E7%B1%BB%E5%92%8C%E7%94%9F%E6%88%90%E6%96%87%E7%AB%A0%E6%A0%87%E9%A2%98/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="自动分类和生成文章标题"><a href="#自动分类和生成文章标题" class="headerlink" title="自动分类和生成文章标题"></a>自动分类和生成文章标题</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>npm install hexo-enhancer –save</p>
<h2 id="自动生成时间和标题"><a href="#自动生成时间和标题" class="headerlink" title="自动生成时间和标题"></a>自动生成时间和标题</h2><ol>
<li>将date和title放入在文件名中，通过正则解析生成文章的标题和时间  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;^.?(\d&#123;4&#125;)[-_]?(\d&#123;2&#125;)[-_]?(\d&#123;2&#125;).?[-_.@# ]*(.*)$&#x2F;</span><br></pre></td></tr></table></figure>
以下格式均支持：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">20091010-Title.md</span><br><span class="line">2009-10-10_Title.md</span><br><span class="line">2009-10-10-Title.md</span><br><span class="line">2009&#x2F;10&#x2F;10#Title.md</span><br><span class="line">2009&#x2F;10&#x2F;10@Title.md</span><br><span class="line">[20091010]-Title.md</span><br><span class="line">【20091010】Title.md</span><br><span class="line">「20091010」-Title.md</span><br></pre></td></tr></table></figure></li>
<li>hexo-enhancer 会将以上文件名全部解析为（最终结果不会回写入.md文件中）：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#---</span><br><span class="line">#title: Title</span><br><span class="line">#date: 2009-10-10</span><br><span class="line">#---</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="自动分类（categories）"><a href="#自动分类（categories）" class="headerlink" title="自动分类（categories）"></a>自动分类（categories）</h2><p>hexo-enhancer 会将.md文件所在目录及父目录的名称添加入categories属性中，<br>因此你应该按照文章分类放置.md文件</p>
<p>比如 _posts/区块链/比特币/20091010-比特币简介.md 文章将自动获得下面的categories属性：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#---</span><br><span class="line">#title: 比特币简介</span><br><span class="line">#date: 2009-10-10</span><br><span class="line">#categories: [区块链, 比特币]</span><br><span class="line">#---</span><br></pre></td></tr></table></figure></p>
<h2 id="自动标签（tags）"><a href="#自动标签（tags）" class="headerlink" title="自动标签（tags）"></a>自动标签（tags）</h2><p>hexo-enhancer的做法是这样，启动后扫描_config.yml中的keywords与tags属性收集全局标签候选词，然后给每一篇文章自动扫描tags。<br>例如，_config.yml配置的标签可以是这样的:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">keywords: HTML, JavaScript, Hexo</span><br><span class="line">tags: Java, Golang, React, Vue</span><br></pre></td></tr></table></figure><br>hexo-enhancer会扫描您的.md文章，如果文章内出现以上关键词，则自动将其分配如文章的tags属性中。<br>需要特别指出的是，keywords是标准配置，它最终会出现在网页meta中，而tags是自定义的属性，只会被本插件使用。</p>
<h2 id="abbrlink"><a href="#abbrlink" class="headerlink" title="abbrlink"></a>abbrlink</h2><p>hexo-enhancer使用 base32(crc32(title)) 算法为每一篇文章分配abbrlink属性，您可以在permlink中使用它们:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">permalink: :year&#x2F;:abbrlink.html</span><br><span class="line"># permalink: :year&#x2F;:abbrlink</span><br><span class="line"># permalink: posts&#x2F;:abbrlink.html</span><br><span class="line"># permalink: :year&#x2F;:month&#x2F;:day&#x2F;:abbrlink.html</span><br></pre></td></tr></table></figure><br>使用abbrlink之后，文章的url就会变得非常简洁，例如 <a href="https://sulin.me/2018/3055NXV.html" target="_blank" rel="noopener">https://sulin.me/2018/3055NXV.html</a></p>
<h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>plugin</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>next集成chatra</title>
    <url>/2022/03/12/hexo-%E6%8F%92%E4%BB%B6-20220312-next%E9%9B%86%E6%88%90Chatra/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="next集成Chatra"><a href="#next集成Chatra" class="headerlink" title="next集成Chatra"></a>next集成Chatra</h1><h2 id="首先-https-app-chatra-io-注册账号"><a href="#首先-https-app-chatra-io-注册账号" class="headerlink" title="首先 https://app.chatra.io/ 注册账号"></a>首先 <a href="https://app.chatra.io/" target="_blank" rel="noopener">https://app.chatra.io/</a> 注册账号</h2><h2 id="获取chat脚本"><a href="#获取chat脚本" class="headerlink" title="获取chat脚本"></a>获取chat脚本</h2><p>settings -&gt; Chatra widget -&gt; show setup instructions，获取脚本<br><img src="images/获取chatra脚本.png" alt=""></p>
<h2 id="添加chatra启动按钮"><a href="#添加chatra启动按钮" class="headerlink" title="添加chatra启动按钮"></a>添加chatra启动按钮</h2><p>themes/next/layout/_macro/sidebar.swig中，将原本的RSS隐藏或替换成 chatra<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.rss %&#125;</span><br><span class="line">&lt;div class&#x3D;&quot;feed-link motion-element&quot;&gt;</span><br><span class="line">  &lt;a href&#x3D;&quot;&#123;&#123; url_for(theme.rss) &#125;&#125;&quot; rel&#x3D;&quot;alternate&quot;&gt;</span><br><span class="line">    &lt;i class&#x3D;&quot;fa fa-rss&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">    RSS</span><br><span class="line">  &lt;&#x2F;a&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if theme.chatra %&#125;</span><br><span class="line">&lt;div class&#x3D;&quot;chat motion-element&quot;&gt;</span><br><span class="line">  &lt;a onclick&#x3D;&quot;Chatra(&#39;openChat&#39;, true)&quot;&gt;</span><br><span class="line">  &lt;i class&#x3D;&quot;fa fa-comment&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">      Chat</span><br><span class="line">    &lt;&#x2F;a&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>此处我直接使用的复写一个类似的，覆盖掉RSS，在themes/next/_config.yml中配置如下：<br>rss: false<br>chatra: true</p>
<h2 id="设置chatra按钮样式"><a href="#设置chatra按钮样式" class="headerlink" title="设置chatra按钮样式"></a>设置chatra按钮样式</h2><p>\themes\next6\source\css_schemes\Pisces_sidebar.styl<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; chat</span><br><span class="line">.feed-link, .chat &#123;</span><br><span class="line">  border-top: 1px dotted #ccc;</span><br><span class="line">  border-bottom: 1px dotted #ccc;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">.feed-link a, .chat a &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  color: #fc6423;</span><br><span class="line">  border: none !important;</span><br><span class="line">&#125;</span><br><span class="line">.feed-link a, .chat a &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  padding: 0 15px;</span><br><span class="line">  color: #fc6423;</span><br><span class="line">  &#x2F;&#x2F;border: 1px solid #fc6423 !important;</span><br><span class="line">  border-radius: 4px;</span><br><span class="line">&#125;</span><br><span class="line">.feed-link a i, .chat a i &#123;</span><br><span class="line">  color: #fc6423;</span><br><span class="line">  font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line">.fa &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  font: normal normal normal 14px&#x2F;1 FontAwesome;</span><br><span class="line">  font-size: inherit;</span><br><span class="line">  text-rendering: auto;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">&#125;</span><br><span class="line">.use-motion .sidebar .motion-element &#123;</span><br><span class="line">  opacity: 1;</span><br><span class="line">&#125;</span><br><span class="line">.feed-link, .chat &#123;</span><br><span class="line">  margin-top: 10px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="放置chatra脚本"><a href="#放置chatra脚本" class="headerlink" title="放置chatra脚本"></a>放置chatra脚本</h2><p>\themes\next6\layout_layout.swig，建议放置在主布局的header前<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html class&#x3D;&quot;&#123;&#123; html_class | lower &#125;&#125;&quot; lang&#x3D;&quot;&#123;&#123; config.language &#125;&#125;&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Chatra &#123;literal&#125; --&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    (function(d, w, c) &#123;</span><br><span class="line">        w.ChatraID &#x3D; &#39;密钥xxxxyyyyy&#39;;</span><br><span class="line">        var s &#x3D; d.createElement(&#39;script&#39;);</span><br><span class="line">        w[c] &#x3D; w[c] || function() &#123;</span><br><span class="line">            (w[c].q &#x3D; w[c].q || []).push(arguments);</span><br><span class="line">        &#125;;</span><br><span class="line">        s.async &#x3D; true;</span><br><span class="line">        s.src &#x3D; &#39;https:&#x2F;&#x2F;call.chatra.io&#x2F;chatra.js&#39;;</span><br><span class="line">        if (d.head) d.head.appendChild(s);</span><br><span class="line">    &#125;)(document, window, &#39;Chatra&#39;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;!-- &#x2F;Chatra &#123;&#x2F;literal&#125; --&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &#123;&#123; partial(&#39;_partials&#x2F;head&#x2F;head.swig&#39;, &#123;&#125;, &#123;cache: theme.cache.enable&#125;) &#125;&#125;</span><br><span class="line">  &#123;% include &#39;_partials&#x2F;head&#x2F;head-unique.swig&#39; %&#125;</span><br><span class="line">  &lt;title&gt;&#123;% block title %&#125;&#123;% endblock %&#125;&lt;&#x2F;title&gt;</span><br><span class="line">  &#123;% include &#39;_third-party&#x2F;analytics&#x2F;index.swig&#39; %&#125;</span><br><span class="line">  &#123;% include &#39;_scripts&#x2F;noscript.swig&#39; %&#125;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="重启即可"><a href="#重启即可" class="headerlink" title="重启即可"></a>重启即可</h2><p>生效</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>plugin</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>使用教程</title>
    <url>/2022/03/09/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-0/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="node"><a href="#node" class="headerlink" title="node"></a>node</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">➜  ~ npm -v</span><br><span class="line">8.15.0</span><br><span class="line">➜  ~ node -v</span><br><span class="line">v16.17.0</span><br></pre></td></tr></table></figure>
<h1 id="hexo安装启动"><a href="#hexo安装启动" class="headerlink" title="hexo安装启动"></a>hexo安装启动</h1><ol>
<li>首先在项目目录下安装 npm install hexo<blockquote>
<p>管理员模式下，全局安装hexo: npm install -g hexo</p>
</blockquote>
</li>
<li>hexo s -p 5000<br>换成5000端口，果断可以访问。</li>
<li>mac电脑使用 6001 端口</li>
</ol>
<h1 id="文档连接"><a href="#文档连接" class="headerlink" title="文档连接"></a>文档连接</h1><p><a href="https://www.cnblogs.com/curedfisher/p/12247766.html" target="_blank" rel="noopener">nodejs 指定全局安装路径和缓存路径</a><br><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo官方文档</a><br><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">安装next</a><br><a href="https://blog.csdn.net/u011475210/article/details/79023429" target="_blank" rel="noopener">hexo - next教程大全</a></p>
<h1 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h1><p>hexo clean &amp;&amp; hexo deploy</p>
<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p><a href="https://blog.csdn.net/u012246342/article/details/51543370?_t_t_t=0.3913191087191581" target="_blank" rel="noopener">hexo安装成功，并且正确运行，但是localhost:4000不能访问</a><br>启动hexo s 的时候，用这个命令，换一个端口。</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo和next升级</title>
    <url>/2022/03/09/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-hexo%E5%92%8Cnext%E5%8D%87%E7%BA%A7/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="next-gt-next6"><a href="#next-gt-next6" class="headerlink" title="next -&gt; next6"></a>next -&gt; next6</h1><h1 id="hexo-3-9-0-gt-hexo-4-2"><a href="#hexo-3-9-0-gt-hexo-4-2" class="headerlink" title="hexo-3.9.0 -&gt; hexo-4.2"></a>hexo-3.9.0 -&gt; hexo-4.2</h1><ol>
<li>卸载原有的hexo<br>进入项目根目录，hexo uninstall hexo</li>
<li>查找hexo和nodejs匹配的版本<br><a href="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85-Hexo" target="_blank" rel="noopener">hexo安装说明</a><br>|—-|—-|<br>Hexo 版本    最低兼容 Node.js 版本<br>6.0+        12.13.0<br>5.0+        10.13.0<br>4.1 - 4.2    8.10<br>4.0            8.6<br>3.3 - 3.9    6.9<br>3.2 - 3.3    0.12<br>3.0 - 3.1    0.10 or iojs<br>0.0.1 - 2.8    0.10</li>
<li>执行安装指定版本<br>npm install hexo@4.2</li>
<li>安装过程<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code&gt;npm uninstall hexo</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted &#123;&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;&#125; (current: &#123;&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;&#125;)</span><br><span class="line"></span><br><span class="line">audited 498 packages in 3.182s</span><br><span class="line"></span><br><span class="line">3 packages are looking for funding</span><br><span class="line">  run &#96;npm fund&#96; for details</span><br><span class="line"></span><br><span class="line">found 53 vulnerabilities (11 low, 23 moderate, 16 high, 3 critical)</span><br><span class="line">  run &#96;npm audit fix&#96; to fix them, or &#96;npm audit&#96; for details</span><br><span class="line"></span><br><span class="line">E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code&gt;clear</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code&gt;npm install hexo@4.2</span><br><span class="line">npm WARN deprecated hexo-bunyan@2.0.0: Please see https:&#x2F;&#x2F;github.com&#x2F;hexojs&#x2F;hexo-bunyan&#x2F;issues&#x2F;17</span><br><span class="line">npm WARN deprecated highlight.js@9.18.5: Support has ended for 9.x series. Upgrade to @latest</span><br><span class="line">npm WARN deprecated chokidar@2.1.8: Chokidar 2 does not receive security updates since 2019. Upgrade to chokidar 3 with 15x fewer dependencies</span><br><span class="line">npm WARN deprecated source-map-resolve@0.5.3: See https:&#x2F;&#x2F;github.com&#x2F;lydell&#x2F;source-map-resolve#deprecated</span><br><span class="line">npm WARN deprecated resolve-url@0.2.1: https:&#x2F;&#x2F;github.com&#x2F;lydell&#x2F;resolve-url#deprecated</span><br><span class="line">npm WARN deprecated source-map-url@0.4.1: See https:&#x2F;&#x2F;github.com&#x2F;lydell&#x2F;source-map-url#deprecated</span><br><span class="line">npm WARN deprecated urix@0.1.0: Please see https:&#x2F;&#x2F;github.com&#x2F;lydell&#x2F;urix#deprecated</span><br><span class="line">npm WARN deprecated hexo-bunyan@1.0.0: Please see https:&#x2F;&#x2F;github.com&#x2F;hexojs&#x2F;hexo-bunyan&#x2F;issues&#x2F;17</span><br><span class="line">npm WARN deprecated core-js@1.2.7: core-js@&lt;3.4 is no longer maintained and not recommended for usage due to the number of issues. Because of the V8 engine whims, feature detection in old core-js versions could cause a slowdown up to 100x even if nothing is polyfilled. Please, upgrade your dependencies to the actual version of core-js.</span><br><span class="line"></span><br><span class="line">&gt; highlight.js@9.18.5 postinstall E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\node_modules\hexo\node_modules\highlight.js</span><br><span class="line">&gt; node deprecated.js</span><br><span class="line"></span><br><span class="line">-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*</span><br><span class="line"></span><br><span class="line">  Verion 9 of Highlight.js has reached EOL.  It will no longer</span><br><span class="line">  be supported or receive security updates in the future.</span><br><span class="line">  Please upgrade to version 10 or encourage your indirect</span><br><span class="line">  dependencies to do so.</span><br><span class="line"></span><br><span class="line">  For more info:</span><br><span class="line"></span><br><span class="line">  https:&#x2F;&#x2F;github.com&#x2F;highlightjs&#x2F;highlight.js&#x2F;issues&#x2F;2877</span><br><span class="line">  https:&#x2F;&#x2F;github.com&#x2F;highlightjs&#x2F;highlight.js&#x2F;blob&#x2F;master&#x2F;VERSION_10_UPGRADE.md</span><br><span class="line"></span><br><span class="line">-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules\hexo\node_modules\chokidar\node_modules\fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted &#123;&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;&#125; (current: &#123;&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;&#125;)</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted &#123;&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;&#125; (current: &#123;&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;&#125;)</span><br><span class="line"></span><br><span class="line">+ hexo@4.2.1</span><br><span class="line">added 590 packages from 581 contributors and audited 591 packages in 134.722s</span><br><span class="line"></span><br><span class="line">11 packages are looking for funding</span><br><span class="line">  run &#96;npm fund&#96; for details</span><br><span class="line"></span><br><span class="line">found 57 vulnerabilities (11 low, 27 moderate, 16 high, 3 critical)</span><br><span class="line">  run &#96;npm audit fix&#96; to fix them, or &#96;npm audit&#96; for details</span><br><span class="line"></span><br><span class="line">E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code&gt;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="hexo-g-异常"><a href="#hexo-g-异常" class="headerlink" title="hexo g 异常"></a>hexo g 异常</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code&gt;hexo g</span><br><span class="line">INFO  Start processing</span><br><span class="line">Version 9 of Highlight.js has reached EOL and is no longer supported.</span><br><span class="line">Please upgrade or ask whatever dependency you are using to upgrade.</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;highlightjs&#x2F;highlight.js&#x2F;issues&#x2F;2877</span><br><span class="line">INFO  Files loaded in 523 ms</span><br><span class="line">ERROR (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\themes\next6\layout\page.swig)</span><br><span class="line">  Template render error: (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\themes\next6\layout\page.swig)</span><br><span class="line">  Template render error: (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\themes\next6\layout\page.swig) [Line 8, Column 10]</span><br><span class="line">  Template render error: (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\themes\next6\layout\page.swig)</span><br><span class="line">  Template render error: (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\themes\next6\layout\_partials\head\head-unique.swig) [Line 10, Column 21]</span><br><span class="line">  Template render error: (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\themes\next6\layout\page.swig)</span><br><span class="line">  Template render error: (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\themes\next6\layout\page.swig)</span><br><span class="line">  Template render error: (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\themes\next6\layout\_partials\header\index.swig) [Line 2, Column 8]</span><br><span class="line">  Template render error: (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\themes\next6\layout\_partials\header\menu.swig) [Line 20, Column 26]</span><br><span class="line">  Template render error: (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\themes\next6\layout\_partials\header\menu.swig) [Line 29, Column 13]</span><br><span class="line">  TypeError: str.replace is not a function</span><br><span class="line">Template render error: (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\themes\next6\layout\page.swig)</span><br><span class="line">  Template render error: (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\themes\next6\layout\page.swig)</span><br><span class="line">  Template render error: (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\themes\next6\layout\page.swig) [Line 8, Column 10]</span><br><span class="line">  Template render error: (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\themes\next6\layout\page.swig)</span><br><span class="line">  Template render error: (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\themes\next6\layout\_partials\head\head-unique.swig) [Line 10, Column 21]</span><br><span class="line">  Template render error: (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\themes\next6\layout\page.swig)</span><br><span class="line">  Template render error: (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\themes\next6\layout\page.swig)</span><br><span class="line">  Template render error: (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\themes\next6\layout\_partials\header\index.swig) [Line 2, Column 8]</span><br><span class="line">  Template render error: (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\themes\next6\layout\_partials\header\menu.swig) [Line 20, Column 26]</span><br><span class="line">  Template render error: (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\themes\next6\layout\_partials\header\menu.swig) [Line 29, Column 13]</span><br><span class="line">  TypeError: str.replace is not a function</span><br><span class="line">    at Object.exports.prettifyError (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\node_modules\nunjucks\src\lib.js:34:15)</span><br><span class="line">    at E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\node_modules\nunjucks\src\environment.js:486:31</span><br><span class="line">    at new_cls.root [as rootRenderFunc] (eval at _compile (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\node_modules\nunjucks\src\environment.js:565:24), &lt;anonymous&gt;:43:3)</span><br><span class="line">    at new_cls.render (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\node_modules\nunjucks\src\environment.js:479:15)</span><br><span class="line">    at E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\themes\next6\scripts\renderer.js:32:29</span><br><span class="line">    at viewFn._compiled (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\node_modules\hexo\lib\theme\view.js:136:48)</span><br><span class="line">    at viewFn.View.render (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\node_modules\hexo\lib\theme\view.js:41:15)</span><br><span class="line">    at E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\node_modules\hexo\lib\hexo\index.js:61:21</span><br><span class="line">    at tryCatcher (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\node_modules\hexo\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\node_modules\hexo\node_modules\bluebird\js\release\method.js:15:34</span><br><span class="line">    at RouteStream._read (E:\workspace-all\workspace-github\blog-projects\diabolo-hub-source-code\node_modules\hexo\lib\hexo\router.js:126:3)</span><br><span class="line">    at RouteStream.Readable.read (_stream_readable.js:478:10)</span><br><span class="line">    at resume_ (_stream_readable.js:965:12)</span><br><span class="line">    at processTicksAndRejections (internal&#x2F;process&#x2F;task_queues.js:84:21)</span><br></pre></td></tr></table></figure>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><ol>
<li>我们发现hexo已经升级到4.2.1</li>
<li>从 git@github.com:theme-next/hexo-theme-next.git 克隆下来的next6<br>只能是next6有问题，发现_config.yml中没有next的版本号，于是从github上单独下载next6的内容:<br><a href="https://github.com/theme-next/hexo-theme-next/releases/tag/v6.0.3" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next/releases/tag/v6.0.3</a></li>
<li>再次 hexo g，正常。。。</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>不蒜子统计</title>
    <url>/2022/03/09/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E4%B8%8D%E8%92%9C%E5%AD%90%E7%BB%9F%E8%AE%A1/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>不蒜子官网：<a href="http://busuanzi.ibruce.info/?spm=a2c4e.11153940.blogcont648357.6.109231cbqdGC8o" target="_blank" rel="noopener">http://busuanzi.ibruce.info/?spm=a2c4e.11153940.blogcont648357.6.109231cbqdGC8o</a></strong></li>
</ul>
<hr>
<h1 id="不蒜子统计"><a href="#不蒜子统计" class="headerlink" title="不蒜子统计"></a>不蒜子统计</h1><ol>
<li>themes/next6/_config.yml<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 用busuanzi显示网站页面的PV&#x2F;UV。</span><br><span class="line"># Get more information on http:&#x2F;&#x2F;ibruce.info&#x2F;2015&#x2F;04&#x2F;04&#x2F;busuanzi&#x2F;</span><br><span class="line">busuanzi_count:</span><br><span class="line">  # count values only if the other configs are false</span><br><span class="line">  enable: true</span><br><span class="line">  # custom uv span for the whole site</span><br><span class="line">  site_uv: true</span><br><span class="line">  site_uv_header: &lt;i class&#x3D;&quot;fa fa-user&quot;&gt;&lt;&#x2F;i&gt; 总访问数</span><br><span class="line">  site_uv_footer: 人</span><br><span class="line">  # custom pv span for the whole site</span><br><span class="line">  site_pv: true</span><br><span class="line">  site_pv_header: &lt;i class&#x3D;&quot;fa fa-eye&quot;&gt;&lt;&#x2F;i&gt; 总访问量</span><br><span class="line">  site_pv_footer: 次</span><br><span class="line">  # custom pv span for one page only</span><br><span class="line">  page_pv: true</span><br><span class="line">  page_pv_header: &lt;i class&#x3D;&quot;fa fa-file-o&quot;&gt;&lt;&#x2F;i&gt; 总阅读量</span><br><span class="line">  page_pv_footer: 次</span><br></pre></td></tr></table></figure></li>
<li>不蒜子是一个极简的网页计数器，可以统计：</li>
</ol>
<ul>
<li>文章的阅读量；</li>
<li>站点访问量；</li>
<li>站点访问人数；</li>
</ul>
<h1 id="不统计数量异常"><a href="#不统计数量异常" class="headerlink" title="不统计数量异常"></a>不统计数量异常</h1><p>修改不蒜子js，themes\next\layout_third-party\analytics\busuanzi-counter.swig<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.busuanzi_count.enable %&#125;</span><br><span class="line">&lt;div class&#x3D;&quot;busuanzi-count&quot;&gt;</span><br><span class="line">  &lt;!-- &lt;script async src&#x3D;&quot;https:&#x2F;&#x2F;dn-lbstatics.qbox.me&#x2F;busuanzi&#x2F;2.3&#x2F;busuanzi.pure.mini.js&quot;&gt;&lt;&#x2F;script&gt; --&gt;</span><br><span class="line">  &lt;script async src&#x3D;&quot;https:&#x2F;&#x2F;busuanzi.ibruce.info&#x2F;busuanzi&#x2F;2.3&#x2F;busuanzi.pure.mini.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">  &#123;% if theme.busuanzi_count.site_uv %&#125;</span><br><span class="line">    &lt;span class&#x3D;&quot;site-uv&quot;&gt;</span><br><span class="line">      &#123;&#123; theme.busuanzi_count.site_uv_header &#125;&#125;</span><br><span class="line">      &lt;span class&#x3D;&quot;busuanzi-value&quot; id&#x3D;&quot;busuanzi_value_site_uv&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">      &#123;&#123; theme.busuanzi_count.site_uv_footer &#125;&#125;</span><br><span class="line">    &lt;&#x2F;span&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;% if theme.busuanzi_count.site_pv %&#125;</span><br><span class="line">    &lt;span class&#x3D;&quot;site-pv&quot;&gt;</span><br><span class="line">      &#123;&#123; theme.busuanzi_count.site_pv_header &#125;&#125;</span><br><span class="line">      &lt;span class&#x3D;&quot;busuanzi-value&quot; id&#x3D;&quot;busuanzi_value_site_pv&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">      &#123;&#123; theme.busuanzi_count.site_pv_footer &#125;&#125;</span><br><span class="line">    &lt;&#x2F;span&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="不蒜子官方代码"><a href="#不蒜子官方代码" class="headerlink" title="不蒜子官方代码"></a>不蒜子官方代码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;script async src&#x3D;&quot;&#x2F;&#x2F;busuanzi.ibruce.info&#x2F;busuanzi&#x2F;2.3&#x2F;busuanzi.pure.mini.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;span id&#x3D;&quot;busuanzi_container_site_pv&quot;&gt;本站总访问量&lt;span id&#x3D;&quot;busuanzi_value_site_pv&quot;&gt;&lt;&#x2F;span&gt;次&lt;&#x2F;span&gt;</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>代码高亮</title>
    <url>/2022/03/09/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h1><ol>
<li>代码块的行号显示在上面已经介绍了，位于站点配置文件，对于代码块的主题我么还能设置其背景，增加复制按钮等，可修改主题配置(blog/themes/next/_config.yml)文件如下：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"># 代码高亮主题</span><br><span class="line"># Available value:</span><br><span class="line"><span class="meta">#    normal | night | night eighties | night blue | night bright</span></span><br><span class="line"><span class="meta"># https:<span class="comment">//github.com/chriskempson/tomorrow-theme</span></span></span><br><span class="line">highlight_theme: night</span><br><span class="line">codeblock:</span><br><span class="line">  # Manual define the border radius in codeblock</span><br><span class="line">  # Leave it empty <span class="keyword">for</span> the <span class="keyword">default</span> <span class="number">1</span></span><br><span class="line">  border_radius:</span><br><span class="line">  # Add copy button on codeblock</span><br><span class="line">  copy_button:</span><br><span class="line">    enable: <span class="literal">true</span></span><br><span class="line">    # Show <span class="built_in">text</span> copy result</span><br><span class="line">    show_result: <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>修改文章链接样式</title>
    <url>/2022/03/09/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E4%BF%AE%E6%94%B9%E6%96%87%E7%AB%A0%E9%93%BE%E6%8E%A5%E6%A0%B7%E5%BC%8F/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="修改文章链接样式"><a href="#修改文章链接样式" class="headerlink" title="修改文章链接样式"></a>修改文章链接样式</h1><ol>
<li>修改文件 themes\next\source\css_common\components\post\post.styl，在末尾添加如下css样式，：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 文章内链接文本样式</span></span><br><span class="line">.post-body p a&#123;</span><br><span class="line">  color: #<span class="number">0593</span>d3;</span><br><span class="line">  border-bottom: none;</span><br><span class="line">  border-bottom: <span class="number">1</span>px solid #<span class="number">0593</span>d3;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: #fc6423;</span><br><span class="line">    border-bottom: none;</span><br><span class="line">    border-bottom: <span class="number">1</span>px solid #fc6423;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>作者信息及侧边栏</title>
    <url>/2022/03/09/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E4%BD%9C%E8%80%85%E5%8F%8A%E5%B7%A6%E4%BE%A7%E6%A0%8F/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="作者信息及侧边栏"><a href="#作者信息及侧边栏" class="headerlink" title="作者信息及侧边栏"></a>作者信息及侧边栏</h1><ol>
<li>blog/themes/next/_config.yml<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Sidebar Settings （侧边栏设置）</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Social Links.</span><br><span class="line"># Usage: `Key: permalink || icon`</span><br><span class="line"># Key is the link label showing to <span class="built_in">end</span> users.</span><br><span class="line"># Value before `||` delimeter is the target permalink.</span><br><span class="line"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.</span><br><span class="line">social:</span><br><span class="line">  GitHub: https:<span class="comment">//github.com/diabolo-hub  || github</span></span><br><span class="line">  Gitee: https:<span class="comment">//gitee.com/diabolo-hub || glide</span></span><br><span class="line">  E-Mail: mailto:yourname @gmail.com || envelope</span><br><span class="line">  Google: https:<span class="comment">//plus.google.com/ || google</span></span><br><span class="line">  CSDN: https:<span class="comment">//blog.csdn.net/nightmare_dimple || crosshairs</span></span><br><span class="line">  #Twitter: https:<span class="comment">//twitter.com/yourname || twitter</span></span><br><span class="line">  #FB Page: https:<span class="comment">//www.facebook.com/ || facebook</span></span><br><span class="line">  #VK Group: https:<span class="comment">//vk.com/yourname || vk</span></span><br><span class="line">  #StackOverflow: https:<span class="comment">//stackoverflow.com/yourname || stack-overflow</span></span><br><span class="line">  #YouTube: https:<span class="comment">//youtube.com/yourname || youtube</span></span><br><span class="line">  #Instagram: https:<span class="comment">//instagram.com/yourname || instagram</span></span><br><span class="line">  #Skype: skype:yourname?call|chat || skype</span><br><span class="line">  微博: https:<span class="comment">//www.weibo.com/ || weibo</span></span><br><span class="line">  知乎: https:<span class="comment">//www.zhihu.com/people/yourname  || bell</span></span><br><span class="line"></span><br><span class="line">social_icons:</span><br><span class="line">  enable: <span class="literal">true</span> #是否显示社交图标</span><br><span class="line">  icons_only: <span class="literal">false</span> #是否仅显示社交图标</span><br><span class="line">  transition: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">github_banner: https:<span class="comment">//github.com/nightmaredimple || Follow me on GitHub #添加右上角github绑带</span></span><br><span class="line"></span><br><span class="line"># Blog rolls</span><br><span class="line">links_icon: link</span><br><span class="line">links_title: 友情链接</span><br><span class="line"># links_layout: block</span><br><span class="line">links_layout: <span class="keyword">inline</span></span><br><span class="line">links:</span><br><span class="line">  CSDN博客主页: <span class="number">000</span></span><br><span class="line">  中国站主页: https:<span class="comment">//diabolo-hub.gitee.io</span></span><br><span class="line">  全球站主页: https:<span class="comment">//diabolo-hub.github.io</span></span><br><span class="line"></span><br><span class="line"># 侧边栏头像</span><br><span class="line"><span class="meta"># in theme directory(source/images): /images/avatar.jpg</span></span><br><span class="line"><span class="meta"># in site  directory(source/uploads): /uploads/avatar.jpg</span></span><br><span class="line">avatar: /images/avatar.jpg</span><br><span class="line"></span><br><span class="line"># 侧边栏中的目录</span><br><span class="line">toc:</span><br><span class="line">  enable: <span class="literal">true</span> #是否自动生成目录</span><br><span class="line">  # Automatically add <span class="built_in">list</span> number to toc.</span><br><span class="line">  number: <span class="literal">true</span> #目录是否自动产生编号</span><br><span class="line">  # If <span class="literal">true</span>, all words will placed on next lines <span class="keyword">if</span> header <span class="built_in">width</span> longer then sidebar <span class="built_in">width</span>.</span><br><span class="line">  wrap: <span class="literal">false</span> #标题过长是否换行</span><br><span class="line">  max_depth: <span class="number">6</span> #最大标题深度</span><br><span class="line"></span><br><span class="line"># Creative Commons <span class="number">4.0</span> International License.</span><br><span class="line"><span class="meta"># http:<span class="comment">//creativecommons.org/</span></span></span><br><span class="line"># Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span><br><span class="line">#creative_commons: by-nc-sa</span><br><span class="line">#creative_commons:</span><br><span class="line"></span><br><span class="line"># 目前仅 Pisces Scheme 支持 <span class="built_in">position</span> 配置。影响版本<span class="number">5.0</span><span class="number">.0</span>及更低版本。</span><br><span class="line">sidebar:</span><br><span class="line">  # Sidebar Position, <span class="built_in">available</span> value: left | right (only <span class="keyword">for</span> Pisces | Gemini).</span><br><span class="line">  <span class="built_in">position</span>: left #侧边栏位置</span><br><span class="line">  <span class="meta">#position: right</span></span><br><span class="line"></span><br><span class="line">  # Sidebar Display, <span class="function"><span class="built_in">available</span> <span class="title">value</span> <span class="params">(only <span class="keyword">for</span> Muse | Mist)</span>:</span></span><br><span class="line">  # 已知侧栏在 use motion: false 的情况下不会展示。 影响版本5.0.0及更低版本。</span><br><span class="line">  #  - post    自动展开帖子。默认。 post - 默认行为，在文章页面（拥有目录列表）时显示</span><br><span class="line">  #  - always  自动展开所有页面 | 在所有页面中都显示</span><br><span class="line">  #  - hide    仅在单击侧边栏切换图标时展开。 | hide - 在所有页面中都隐藏（可以手动展开）</span><br><span class="line">  #  - <span class="built_in">remove</span>  Totally <span class="built_in">remove</span> sidebar including sidebar toggle.  | <span class="built_in">remove</span> - 完全移除</span><br><span class="line">  <span class="built_in">display</span>: post</span><br><span class="line">  <span class="meta">#display: always</span></span><br><span class="line">  <span class="meta">#display: hide</span></span><br><span class="line">  <span class="meta">#display: remove</span></span><br><span class="line"></span><br><span class="line">  # Sidebar offset from top menubar in pixels (only for Pisces | Gemini).</span><br><span class="line">  offset: <span class="number">12</span> #侧边栏相对主菜单像素距离</span><br><span class="line">  # Back to top in sidebar (only for Pisces | Gemini).</span><br><span class="line">  b2t: <span class="literal">false</span> #是否提供一键置顶</span><br><span class="line">  # Scroll percent label in b2t button</span><br><span class="line">  scrollpercent: <span class="literal">true</span> #是否显示当前阅读进度</span><br><span class="line">  # Enable sidebar on narrow view (only for Muse | Mist).</span><br><span class="line">  onmobile: <span class="literal">true</span> #手机上是否显示侧边栏</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="作者及左侧栏样式"><a href="#作者及左侧栏样式" class="headerlink" title="作者及左侧栏样式"></a>作者及左侧栏样式</h1><ol>
<li>左侧栏样式(Pisces)<br>next6/source/css/_schemes/Pisces/_sidebar.styl<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.sidebar a &#123;</span><br><span class="line">  &#x2F;&#x2F; 个人信息界面，强制使用 #555</span><br><span class="line">  color: $black-light !important;</span><br><span class="line"></span><br><span class="line">  &amp;:hover &#123; color: $black-deep; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>需要使用 !important; 强制使用此颜色</p>
</blockquote>
</li>
<li>作者及文章总览样式（Pisces)（头像下面的）<br>themes/next6/source/css/_custom/custom.styl  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#sidebar &#123;</span><br><span class="line">  background:url(&#x2F;images&#x2F;sidebar-1.jpg);</span><br><span class="line">  background-size: cover;</span><br><span class="line">  background-position:center;</span><br><span class="line">  background-repeat:no-repeat;</span><br><span class="line">  &#x2F;&#x2F;p,span,a &#123;color: rgba(255, 255, 255, 1);&#125;</span><br><span class="line">  p,span,a &#123;color: #555;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>该 p,span,a {} 会覆盖 _sidebar.styl 中的配置，除非使用强制符号 !important</p>
</blockquote>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>博客底部布局</title>
    <url>/2022/03/09/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E5%8D%9A%E5%AE%A2%E5%BA%95%E9%83%A8%E5%B8%83%E5%B1%80/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="博客底部布局"><a href="#博客底部布局" class="headerlink" title="博客底部布局"></a>博客底部布局</h1><ol>
<li>这一部分对应主题配置文件中的：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"># 博客底部布局</span><br><span class="line">footer:</span><br><span class="line">  # Specify the date when the site was <span class="built_in">setup</span>.</span><br><span class="line">  # If <span class="keyword">not</span> defined, current year will be used.</span><br><span class="line">  since: <span class="number">2017</span> #建站时间</span><br><span class="line"></span><br><span class="line">  # Icon between year <span class="keyword">and</span> copyright info.</span><br><span class="line"><span class="meta">#  icon: user</span></span><br><span class="line">  icon:</span><br><span class="line">    # Icon name in fontawesome, see: https:<span class="comment">//fontawesome.com/v4.7.0/icons/</span></span><br><span class="line">    # `heart` is recommended with animation in red (#ff0000).</span><br><span class="line">    name: heart  #作者图标（默认是author人像)</span><br><span class="line">    # If you want to animate the icon, <span class="built_in">set</span> it to <span class="literal">true</span>.</span><br><span class="line">    animated: <span class="literal">true</span> #图标是否闪动</span><br><span class="line">    # Change the color of icon, <span class="keyword">using</span> Hex Code.</span><br><span class="line">    color: <span class="string">"#808080"</span> #图标颜色</span><br><span class="line">  # If <span class="keyword">not</span> defined, will be used `author` from Hexo main <span class="built_in">config</span>.</span><br><span class="line">  copyright: 空竹 #别填<span class="keyword">bool</span>型，最后显示的东西是copyright || author，即左边没有设置的话就显示作者</span><br><span class="line">  # -------------------------------------------------------------</span><br><span class="line">  # Hexo link (Powered by Hexo).</span><br><span class="line">  powered: <span class="literal">false</span> #是否显示 Powered by hexo</span><br><span class="line">  theme:</span><br><span class="line">    # Theme &amp; scheme info link (Theme - NexT.scheme).</span><br><span class="line">    enable: <span class="literal">true</span> #是否显示主题信息</span><br><span class="line">    # Version info of NexT after scheme info (vX.X.X).</span><br><span class="line">    version: <span class="literal">false</span>  #是否显示主题版本</span><br><span class="line">  # -------------------------------------------------------------</span><br><span class="line">  # Any custom <span class="built_in">text</span> can be defined here.</span><br><span class="line">  #custom_text: Hosted by &lt;a target=<span class="string">"_blank"</span> href=<span class="string">"https://pages.github.com"</span>&gt;GitHub Pages&lt;/a&gt;</span><br><span class="line">  beian:</span><br><span class="line">    enable: <span class="literal">false</span>  #是否显示网站备案信息</span><br><span class="line">    icp:</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>博客摘要显示</title>
    <url>/2022/03/09/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E5%8D%9A%E5%AE%A2%E6%91%98%E8%A6%81%E6%98%BE%E7%A4%BA/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="博客摘要显示"><a href="#博客摘要显示" class="headerlink" title="博客摘要显示"></a>博客摘要显示</h1><ol>
<li>于摘要显示，首先我们需要开启摘要功能，修改主题配置（blog/themes/next/_config.yml）文件：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Post Settings（摘要设置）</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Automatically scroll page to section which is under &lt;!-- more --&gt; mark.</span><br><span class="line">scroll_to_more: <span class="literal">true</span> #选取博客正文&lt;!--more--&gt;前的内容</span><br><span class="line"># Automatically saving scroll <span class="built_in">position</span> on each post/page in cookies.</span><br><span class="line">save_scroll: <span class="literal">true</span></span><br><span class="line"># Automatically excerpt description in homepage as preamble <span class="built_in">text</span>.</span><br><span class="line">excerpt_description: <span class="literal">true</span> #自动截取摘要</span><br><span class="line"></span><br><span class="line"># Automatically Excerpt. Not recommend.</span><br><span class="line"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: <span class="literal">true</span> #自动截取一定程度的摘要</span><br><span class="line">  length: <span class="number">150</span></span><br><span class="line"># Read more button</span><br><span class="line"># If <span class="literal">true</span>, the <span class="built_in">read</span> more button would be displayed in excerpt section.</span><br><span class="line">read_more_btn: <span class="literal">true</span> #显示阅读全文按钮</span><br></pre></td></tr></table></figure>
<a id="more"></a>
</li>
</ol>
<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>取 <!-- more --> 之前的文本作为摘要</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>阅读次数/时长和访客数【载】</title>
    <url>/2022/03/09/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E5%A2%9E%E5%8A%A0%E9%98%85%E8%AF%BB%E6%AC%A1%E6%95%B0%E5%92%8C%E6%97%B6%E9%95%BF%E5%92%8C%E8%AE%BF%E5%AE%A2%E6%95%B0/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/Coder_Jeremy/article/details/83588674" target="_blank" rel="noopener">NexT 6 添加字数和阅读时间统计</a></p>
<h1 id="阅读次数-时长和访客数"><a href="#阅读次数-时长和访客数" class="headerlink" title="阅读次数/时长和访客数"></a>阅读次数/时长和访客数</h1><ol>
<li><p>Next6版本集成了多种相关功能，除了已有的<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">busuanzi</a>，目前又加入了<a href="https://github.com/theme-next/hexo-symbols-count-time" target="_blank" rel="noopener">symbols-count-time</a>，二者在主题配置文件中的相关设置方法如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"># Post wordcount <span class="built_in">display</span> settings</span><br><span class="line"># Dependencies: https:<span class="comment">//github.com/theme-next/hexo-symbols-count-time</span></span><br><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: <span class="literal">true</span> #分隔符|</span><br><span class="line">  item_text_post: <span class="literal">true</span> #是否统计站点总字数</span><br><span class="line">  item_text_total: <span class="literal">true</span> #是否同级文章总字数</span><br><span class="line">  awl: <span class="number">2</span> #平均每个字符的长度</span><br><span class="line">  wpm: <span class="number">300</span> <span class="meta">#words per minute</span></span><br><span class="line"> </span><br><span class="line">busuanzi_count:</span><br><span class="line">  enable: <span class="literal">true</span>  #是否开启不蒜子统计功能</span><br><span class="line">  total_visitors: <span class="literal">true</span> #是否统计总访客数</span><br><span class="line">  total_visitors_icon: user #访客数图标为人像</span><br><span class="line">  total_views: <span class="literal">true</span> #是否同级总访问数</span><br><span class="line">  total_views_icon: eye #访问数图标为眼睛</span><br><span class="line">  post_views: <span class="literal">true</span> #是否统计文章访问数</span><br><span class="line">  post_views_icon: eye #访问数图标为眼睛</span><br></pre></td></tr></table></figure>
</li>
<li><p>其中前者还需在站点配置文件中加入：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: <span class="literal">true</span> #是否统计字数</span><br><span class="line">  time: <span class="literal">false</span> #是否统计阅读时长</span><br><span class="line">  total_symbols: <span class="literal">true</span> #是否统计总字数</span><br><span class="line">  total_time: <span class="literal">false</span> #是否统计总阅读时长</span><br></pre></td></tr></table></figure>
</li>
<li><p>相关依赖如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure>
</li>
<li><p>不过symbols-count-time的数字经常不显示，不知道是不是我配置的问题，不过不担心，因为busuanzi自带了这些功能（除了阅读时长，不过这个意义不大），只需要修改next/layout/_partials/footer.swig文件如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">&lt;script async src=<span class="string">"https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">  &#123;% <span class="keyword">if</span> <span class="built_in">config</span>.symbols_count_time.total_symbols %&#125;</span><br><span class="line">    &lt;span class=<span class="string">"post-meta-divider"</span>&gt;|&lt;/span&gt;</span><br><span class="line">    &lt;span class=<span class="string">"post-meta-item-icon"</span>&gt;</span><br><span class="line">      &lt;i class=<span class="string">"fa fa-area-chart"</span>&gt;&lt;/i&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">    &#123;% <span class="keyword">if</span> theme.symbols_count_time.item_text_total %&#125;</span><br><span class="line">      &lt;span class="post-meta-item-text"&gt;&#123;&#123; __('symbols_count_time.count_total') + __('symbol.colon') &#125;&#125;&lt;/span&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">	&lt;span title=<span class="string">"&#123;&#123; __('post.totalcount') &#125;&#125;"</span>&gt;</span><br><span class="line">     &#123;&#123; totalcount(site, '0,0.0a') &#125;&#125;字 &lt;/span&gt;</span><br><span class="line">    &lt;!--&lt;span title=<span class="string">"&#123;&#123; __('symbols_count_time.count_total') &#125;&#125;"</span>&gt;&#123;&#123;symbolsCountTotal(site)&#125;&#125;&lt;/span&gt;--&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>以及修改next/layout/_macro/post.swig文件中的symbol部分：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">     &#123;% <span class="keyword">if</span> <span class="built_in">config</span>.symbols_count_time.symbols <span class="keyword">or</span> <span class="built_in">config</span>.symbols_count_time.time %&#125;</span><br><span class="line">       &lt;div <span class="class"><span class="keyword">class</span>="<span class="title">post</span>-<span class="title">symbolscount</span>"&gt;</span></span><br><span class="line"><span class="class">         &#123;</span>% <span class="keyword">if</span> <span class="keyword">not</span> theme.symbols_count_time.separated_meta %&#125;</span><br><span class="line">           &lt;span <span class="class"><span class="keyword">class</span>="<span class="title">post</span>-<span class="title">meta</span>-<span class="title">divider</span>"&gt;|&lt;/span&gt;</span></span><br><span class="line"><span class="class">         &#123;</span>% endif %&#125;</span><br><span class="line"></span><br><span class="line">         &#123;% <span class="keyword">if</span> <span class="built_in">config</span>.symbols_count_time.symbols %&#125;</span><br><span class="line">           &lt;span <span class="class"><span class="keyword">class</span>="<span class="title">post</span>-<span class="title">meta</span>-<span class="title">item</span>-<span class="title">icon</span>"&gt;</span></span><br><span class="line"><span class="class">             &lt;i class="fa fa-file-word-o"&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="class">           &lt;/span&gt;</span></span><br><span class="line"><span class="class">           &#123;</span>% <span class="keyword">if</span> theme.symbols_count_time.item_text_post %&#125;</span><br><span class="line">             &lt;span class="post-meta-item-text"&gt;&#123;&#123; __('symbols_count_time.count') + __('symbol.colon') &#125;&#125;&lt;/span&gt;</span><br><span class="line">           &#123;% endif %&#125;</span><br><span class="line">           &lt;!-- &lt;span title=<span class="string">"&#123;&#123; __('symbols_count_time.count') &#125;&#125;"</span>&gt;&#123;#</span><br><span class="line">           #&#125;&#123;&#123; symbolsCount(post.content) &#125;&#125;&#123;#</span><br><span class="line">         #&#125;&lt;/span&gt; --&gt;</span><br><span class="line">&lt;span title=<span class="string">"&#123;&#123; __('symbols_count_time.count') &#125;&#125;"</span>&gt;</span><br><span class="line">             &#123;&#123; wordcount(post.content) &#125;&#125;字</span><br><span class="line">           &lt;/span&gt;</span><br><span class="line">         &#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>常用命令</title>
    <url>/2022/03/09/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/commands.html</a></p>
<ol>
<li>hexo n(new) fileName  # 新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new &quot;post title with whitespace&quot;</span><br></pre></td></tr></table></figure>
hexo g(generate)      # 生成网页<br>hexo s(server)        # 启动服务器<br>hexo d(deploy)        # 部署到线上<br>hexo p(publish)       # 发表草稿。<br>hexo version          # 显示hexo版本<br>hexo –debug          # 调试模式，在终端中显示调试信息并记录到 debug.log<br>hexo server –config custom.yml     # 使用 custom.yml 代替默认的 _config.yml<br>hexo clean            # 清除缓存文件 (db.json) 和已生成的静态文件 (public)。 在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。<br>hexo –draft          # 显示 source/_drafts 文件夹中的草稿文章。<br>hexo generate –config custom.yml,custom2.json,custom3.yml  # 使用 custom.yml, custom2.json 和 custom3.yml，其中 custom3.yml 优先级最高，其次是 custom2.json                        </li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>文章版权信息</title>
    <url>/2022/03/09/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E6%96%87%E7%AB%A0%E7%89%88%E6%9D%83%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="文章版权信息"><a href="#文章版权信息" class="headerlink" title="文章版权信息"></a>文章版权信息</h1><ol>
<li>要想开启博客的版权功能，需要设置主题配置文件：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">creative_commons:</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  sidebar: <span class="literal">true</span></span><br><span class="line">  post: <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>文章结束语[载]</title>
    <url>/2022/03/09/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E6%96%87%E7%AB%A0%E7%BB%93%E6%9D%9F%E8%AF%AD/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<h2 id="文章结束语：https-blog-csdn-net-nightmare-dimple-article-details-86661502"><a href="#文章结束语：https-blog-csdn-net-nightmare-dimple-article-details-86661502" class="headerlink" title="- 文章结束语：https://blog.csdn.net/nightmare_dimple/article/details/86661502"></a>- <strong>文章结束语：<a href="https://blog.csdn.net/nightmare_dimple/article/details/86661502" target="_blank" rel="noopener">https://blog.csdn.net/nightmare_dimple/article/details/86661502</a></strong></h2><h1 id="文章结束标志"><a href="#文章结束标志" class="headerlink" title="文章结束标志"></a>文章结束标志</h1><ol>
<li><p>在路径 \themes\next\layout_macro 中新建 passage-end-tag.swig 文件,并添加以下内容：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% <span class="keyword">if</span> <span class="keyword">not</span> is_index %&#125;</span><br><span class="line">        &lt;div style=<span class="string">"text-align:center;color: #ccc;font-size:14px;"</span>&gt;-------------本文结束&lt;i class=<span class="string">"fa fa-paw"</span>&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>接着打开\themes\next\layout_macro\post.swig文件，在post-body 之后(END POST BODY)， post-footer 之前添加如代码：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &#123;% <span class="keyword">if</span> <span class="keyword">not</span> is_index %&#125;</span><br><span class="line">    &#123;% include 'passage-end-tag.swig' %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>然后打开主题配置文件（_config.yml),在末尾添加：</p>
</li>
</ol>
<h1 id="文章末尾添加“本文结束”标记"><a href="#文章末尾添加“本文结束”标记" class="headerlink" title="文章末尾添加“本文结束”标记"></a>文章末尾添加“本文结束”标记</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">passage_end_tag:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>作者信息及侧边栏</title>
    <url>/2022/03/09/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E6%96%87%E7%AB%A0%E9%98%B4%E5%BD%B1%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="作者信息及侧边栏"><a href="#作者信息及侧边栏" class="headerlink" title="作者信息及侧边栏"></a>作者信息及侧边栏</h1><ol>
<li>\themes\next\source\css_custom\custom.styl,向里面加入：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 主页文章添加阴影效果</span></span><br><span class="line"> .post &#123;</span><br><span class="line">   margin-top: <span class="number">60</span>px;</span><br><span class="line">   margin-bottom: <span class="number">60</span>px;</span><br><span class="line">   padding: <span class="number">25</span>px;</span><br><span class="line">   -webkit-box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">5</span><span class="function">px <span class="title">rgba</span><span class="params">(<span class="number">202</span>, <span class="number">203</span>, <span class="number">203</span>, <span class="number">.5</span>)</span></span>;</span><br><span class="line">   -moz-box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">5</span><span class="function">px <span class="title">rgba</span><span class="params">(<span class="number">202</span>, <span class="number">203</span>, <span class="number">204</span>, <span class="number">.5</span>)</span></span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>添加打赏</title>
    <url>/2022/03/09/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E6%B7%BB%E5%8A%A0%E6%89%93%E8%B5%8F/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="添加打赏"><a href="#添加打赏" class="headerlink" title="添加打赏"></a>添加打赏</h1><ol>
<li>在主题配置文件中设置如下：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">reward:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  comment: 坚持原创技术分享，您的支持将鼓励我继续创作！</span><br><span class="line">  wechatpay: /images/wechatpay.jpg</span><br><span class="line">  alipay: /images/alipay.jpg</span><br><span class="line">  <span class="meta">#bitcoin: /images/bitcoin.jpg</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>添加导航标签</title>
    <url>/2022/03/09/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E6%B7%BB%E5%8A%A0%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="next-config-yml"><a href="#next-config-yml" class="headerlink" title="next/_config.yml"></a>next/_config.yml</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:  #设置博客各个页面的相对路径，默认根路径是blog&#x2F;source</span><br><span class="line">  home: &#x2F; || home</span><br><span class="line">  categories: &#x2F;categories || th</span><br><span class="line">  tags: &#x2F;tags || tags</span><br><span class="line">  archives: &#x2F;archives || archive</span><br><span class="line">  about: &#x2F;about || user</span><br><span class="line">  commonweal: &#x2F;404.html || heartbeat</span><br><span class="line">  something: &#x2F;something || th</span><br><span class="line">  design: &#x2F;design || tags</span><br><span class="line">#  schedule: &#x2F;schedule || schedule</span><br><span class="line">#  sitemap: &#x2F;sitemap.xml || sitemap</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Enable&#x2F;Disable menu icons.</span><br><span class="line">menu_icons:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>
<h1 id="zh-Hans-yml-zh-CH-yml"><a href="#zh-Hans-yml-zh-CH-yml" class="headerlink" title="zh-Hans.yml / zh-CH.yml"></a>zh-Hans.yml / zh-CH.yml</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: 首页</span><br><span class="line">  archives: 归档</span><br><span class="line">  categories: 分类</span><br><span class="line">  tags: 标签</span><br><span class="line">  about: 关于</span><br><span class="line">  search: 搜索</span><br><span class="line">  schedule: 日程表</span><br><span class="line">  sitemap: 站点地图</span><br><span class="line">  commonweal: 公益404</span><br><span class="line">  something: 有料</span><br><span class="line">  design: 设计</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>音乐外链</title>
    <url>/2022/03/09/hexo-%E7%AC%94%E8%AE%B0-hexo%E7%AC%94%E8%AE%B0-%E9%9F%B3%E4%B9%90%E5%A4%96%E9%93%BE/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="音乐外链"><a href="#音乐外链" class="headerlink" title="音乐外链"></a>音乐外链</h1><h2 id="download"><a href="#download" class="headerlink" title="download"></a>download</h2><p>点击访问<a href="https://github.com/DIYgod/APlayer" target="_blank" rel="noopener">Aplayer</a> 源码：GitHub Aplayer。下载到本地，解压后将dist文件夹复制到themes\next\source文件夹下。</p>
<h1 id="music-js"><a href="#music-js" class="headerlink" title="music.js"></a>music.js</h1><p>  新建themes\next\source\dist\music.js文件，添加内容：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const ap &#x3D; new APlayer(&#123;</span><br><span class="line">    container: document.getElementById(&#39;aplayer&#39;),</span><br><span class="line">    fixed: true,</span><br><span class="line">    autoplay: false,</span><br><span class="line">    audio: [</span><br><span class="line">      &#123;</span><br><span class="line">        name: &quot;PDD洪荒之力&quot;,</span><br><span class="line">        artist: &#39;徐梦圆&#39;,</span><br><span class="line">        url: &#39;http:&#x2F;&#x2F;up.mcyt.net&#x2F;?down&#x2F;39868.mp3&#39;,</span><br><span class="line">        cover: &#39;http:&#x2F;&#x2F;oeff2vktt.bkt.clouddn.com&#x2F;image&#x2F;84.jpg&#39;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: &#39;9420&#39;,</span><br><span class="line">        artist: &#39;麦小兜&#39;,</span><br><span class="line">        url: &#39;http:&#x2F;&#x2F;up.mcyt.net&#x2F;?down&#x2F;45967.mp3&#39;,</span><br><span class="line">        cover: &#39;http:&#x2F;&#x2F;oeff2vktt.bkt.clouddn.com&#x2F;image&#x2F;8.jpg&#39;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: &#39;风筝误&#39;,</span><br><span class="line">        artist: &#39;刘珂矣&#39;,</span><br><span class="line">        url: &#39;http:&#x2F;&#x2F;up.mcyt.net&#x2F;?down&#x2F;46644.mp3&#39;,</span><br><span class="line">        cover: &#39;http:&#x2F;&#x2F;oeff2vktt.bkt.clouddn.com&#x2F;image&#x2F;96.jpg&#39;,</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br>源码中对应的参数解释，这边都有： <a href="https://aplayer.js.org/#/zh-Hans/" target="_blank" rel="noopener">Aplayer 中文文档</a></p>
<p>audio对应的便是音频文件，所以音乐播放器需要播放的音乐是需要自己进行相关信息（如歌曲链接、歌词、封面等）的配置。这里放一个mp3音乐外链网站：<a href="http://up.mcyt.net/" target="_blank" rel="noopener">http://up.mcyt.net/</a> ，搜索对应的音乐，然后复制url和右击封面图片链接粘贴到对应的位置上就行了。</p>
<p>注：由于该外链网站没有歌词链接，我这边没有进行配置，所以播放器在播放音乐时点击歌词是没有显示的。</p>
<h2 id="layout-swig"><a href="#layout-swig" class="headerlink" title="_layout.swig"></a>_layout.swig</h2><p>打开themes\next\layout_layout.swig文件，将<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&#x2F;dist&#x2F;APlayer.min.css&quot;&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;aplayer&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;dist&#x2F;APlayer.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;dist&#x2F;music.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></p>
<p>添加到<body itemscope ...>后面就行，即在<body></body>里面。</p>
<p>重新生成，访问页面，就能看到左下角的音乐播放器了。</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>迭代器</title>
    <url>/2022/02/13/python-notes-course-1-15-%E8%BF%AD%E4%BB%A3%E5%99%A8/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h1><p>迭代器，迭代器是一个可以记住遍历的位置的对象<br>两种迭代器： iter() 和 next(),且字符串<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"># <span class="number">1</span>、字符创创建迭代器对象</span><br><span class="line">str1 = 'liangdianshui' </span><br><span class="line">iter1 = iter ( str1 )</span><br><span class="line"></span><br><span class="line"># <span class="number">2</span>、<span class="built_in">list</span>对象创建迭代器</span><br><span class="line">list1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">iter2 = iter ( list1 )</span><br><span class="line"></span><br><span class="line"># <span class="number">3</span>、tuple(元祖) 对象创建迭代器</span><br><span class="line">tuple1 = ( <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span> )</span><br><span class="line">iter3 = iter ( tuple1 )</span><br><span class="line"></span><br><span class="line"># <span class="keyword">for</span> 循环遍历迭代器对象</span><br><span class="line"><span class="keyword">for</span> x in iter1 :</span><br><span class="line">    <span class="built_in">print</span> ( x , <span class="built_in">end</span> = <span class="string">' '</span> )</span><br><span class="line"></span><br><span class="line">print('\n------------------------')</span><br><span class="line"></span><br><span class="line"><span class="meta"># next() 函数遍历迭代器</span></span><br><span class="line"><span class="keyword">while</span> True :</span><br><span class="line">    <span class="keyword">try</span> :</span><br><span class="line">        <span class="built_in">print</span> ( next ( iter3 ) )</span><br><span class="line">    except StopIteration :</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><br>结果：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">l i a n g d i a n s h u i </span><br><span class="line">------------------------</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>py</category>
      </categories>
      <tags>
        <tag>py</tag>
      </tags>
  </entry>
  <entry>
    <title>windows下docker镜像迁移</title>
    <url>/2021/09/19/depth-docker-config-2-windows%E4%B8%8Bdocker%E9%95%9C%E5%83%8F%E8%BF%81%E7%A7%BB/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="使用WSL修改docker文件存储位置"><a href="#使用WSL修改docker文件存储位置" class="headerlink" title="使用WSL修改docker文件存储位置"></a>使用WSL修改docker文件存储位置</h1><p>docker-desktop-data磁盘映像通常位于以下位置：C:\Users\86180\AppData\Local\Docker\wsl\data</p>
<ol>
<li>首先退出Docker桌面应用</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2. 查看运行状态</span><br><span class="line">C:\Users\zhangdaiyin&gt;wsl --list -v</span><br><span class="line">  NAME                   STATE           VERSION</span><br><span class="line">* Ubuntu-18.04           Running         2</span><br><span class="line">  docker-desktop         Running         2</span><br><span class="line">  docker-desktop-data    Running         2</span><br><span class="line"></span><br><span class="line">C:\Users\zhangdaiyin&gt;wsl --list -v</span><br><span class="line">  NAME                   STATE           VERSION</span><br><span class="line">* Ubuntu-18.04           Running         2</span><br><span class="line">  docker-desktop         Stopped         2</span><br><span class="line">  docker-desktop-data    Stopped         2</span><br><span class="line"></span><br><span class="line">3. 导出本地已有数据</span><br><span class="line">C:\Users\zhangdaiyin&gt;wsl --list -v</span><br><span class="line">  NAME                   STATE           VERSION</span><br><span class="line">* Ubuntu-18.04           Running         2</span><br><span class="line">  docker-desktop         Stopped         2</span><br><span class="line">  docker-desktop-data    Stopped         2</span><br><span class="line"></span><br><span class="line">4. 删除本地数据</span><br><span class="line">C:\Users\zhangdaiyin&gt;wsl --export docker-desktop-data &quot;E:\\docker-desktop-data.tar&quot;</span><br><span class="line"></span><br><span class="line">C:\Users\zhangdaiyin&gt;wsl --unregister docker-desktop-data</span><br><span class="line">正在注销...</span><br><span class="line"></span><br><span class="line">C:\Users\zhangdaiyin&gt;wsl --list -v</span><br><span class="line">  NAME              STATE           VERSION</span><br><span class="line">* Ubuntu-18.04      Stopped         2</span><br><span class="line">  docker-desktop    Stopped         2</span><br><span class="line"></span><br><span class="line">5. 导入数据到新盘，设置路径，这里我设置的路径为D:\\Download\\Docker\\wsl</span><br><span class="line">C:\Users\zhangdaiyin&gt;wsl --import docker-desktop-data &quot;E:\workspace-all\workspace-docker\wsl&quot; &quot;E:\workspace-all\workspace-docker\docker-desktop-data.tar&quot; --version 2</span><br><span class="line"></span><br><span class="line">6. 再次查看状态</span><br><span class="line">C:\Users\zhangdaiyin&gt;wsl --list -v</span><br><span class="line">  NAME                   STATE           VERSION</span><br><span class="line">* Ubuntu-18.04           Stopped         2</span><br><span class="line">  docker-desktop-data    Stopped         2</span><br><span class="line">  docker-desktop         Stopped         2</span><br></pre></td></tr></table></figure>
<h2 id="以上是迁移-data，以下是-docker-desktop迁移"><a href="#以上是迁移-data，以下是-docker-desktop迁移" class="headerlink" title="以上是迁移 data，以下是 docker-desktop迁移"></a>以上是迁移 data，以下是 docker-desktop迁移</h2><p>docker-desktop迁移如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wsl --export docker-desktop E:\workspace-all\workspace-docker\docker-desktop.tar</span><br><span class="line"></span><br><span class="line">wsl --unregister docker-desktop</span><br><span class="line"></span><br><span class="line">wsl --import docker-desktop E:\workspace-all\workspace-docker\wsl\desktop E:\workspace-all\workspace-docker\docker-desktop.tar --version 2</span><br></pre></td></tr></table></figure></p>
<h1 id="迁移之后启动报错"><a href="#迁移之后启动报错" class="headerlink" title="迁移之后启动报错"></a>迁移之后启动报错</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">System.InvalidOperationException:</span><br><span class="line">distro stopped unexpectedly</span><br><span class="line">   在 Docker.Engines.LinuxkitDaemonStartup.&lt;WaitAsync&gt;d__5.MoveNext() 位置 C:\workspaces\PR-17739\src\github.com\docker\pinata\win\src\Docker.Engines\LinuxkitDaemonStartup.cs:行号 60</span><br><span class="line">--- 引发异常的上一位置中堆栈跟踪的末尾 ---</span><br><span class="line">   在 System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()</span><br><span class="line">   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)</span><br><span class="line">   在 Docker.Engines.WSL2.LinuxWSL2Engine.&lt;DoStartAsync&gt;d__28.MoveNext() 位置 C:\workspaces\PR-17739\src\github.com\docker\pinata\win\src\Docker.Engines\WSL2\LinuxWSL2Engine.cs:行号 177</span><br><span class="line">--- 引发异常的上一位置中堆栈跟踪的末尾 ---</span><br><span class="line">   在 System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()</span><br><span class="line">   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)</span><br><span class="line">   在 Docker.ApiServices.StateMachines.TaskExtensions.&lt;WrapAsyncInCancellationException&gt;d__0.MoveNext() 位置 C:\workspaces\PR-17739\src\github.com\docker\pinata\win\src\Docker.ApiServices\StateMachines\TaskExtensions.cs:行号 29</span><br><span class="line">--- 引发异常的上一位置中堆栈跟踪的末尾 ---</span><br><span class="line">   在 System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()</span><br><span class="line">   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)</span><br><span class="line">   在 Docker.ApiServices.StateMachines.StartTransition.&lt;DoRunAsync&gt;d__5.MoveNext() 位置 C:\workspaces\PR-17739\src\github.com\docker\pinata\win\src\Docker.ApiServices\StateMachines\StartTransition.cs:行号 67</span><br><span class="line">--- 引发异常的上一位置中堆栈跟踪的末尾 ---</span><br><span class="line">   在 System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()</span><br><span class="line">   在 Docker.ApiServices.StateMachines.StartTransition.&lt;DoRunAsync&gt;d__5.MoveNext() 位置 C:\workspaces\PR-17739\src\github.com\docker\pinata\win\src\Docker.ApiServices\StateMachines\StartTransition.cs:行号 92</span><br><span class="line">--- 引发异常的上一位置中堆栈跟踪的末尾 ---</span><br><span class="line">   在 System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()</span><br><span class="line">   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)</span><br><span class="line">   在 Docker.ApiServices.StateMachines.EngineStateMachine.&lt;StartAsync&gt;d__14.MoveNext() 位置 C:\workspaces\PR-17739\src\github.com\docker\pinata\win\src\Docker.ApiServices\StateMachines\EngineStateMachine.cs:行号 69</span><br><span class="line">--- 引发异常的上一位置中堆栈跟踪的末尾 ---</span><br><span class="line">   在 System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()</span><br><span class="line">   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)</span><br><span class="line">   在 Docker.Engines.Engines.&lt;StartAsync&gt;d__22.MoveNext() 位置 C:\workspaces\PR-17739\src\github.com\docker\pinata\win\src\Docker.Engines\Engines.cs:行号 108</span><br></pre></td></tr></table></figure>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ol>
<li>netsh winsock reset ：<br>winsock是Windows网络编程接口，winsock工作在应用层，它提供与底层传输协议无关的高层数据传输编程接口 netsh winsock reset 是把它恢复到默认状态。</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>ideal docker configurations</title>
    <url>/2021/09/18/depth-docker-config-1-ideal-docker-configurations/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="ideal-docker-configurations（windows）"><a href="#ideal-docker-configurations（windows）" class="headerlink" title="ideal docker configurations（windows）"></a>ideal docker configurations（windows）</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 连接配置</span><br><span class="line">Docker for Mac：如果你本地安装了 Docker for macOS，则推荐此连接选项。</span><br><span class="line">Unix socket： 如果你使用 Linux 系统，并在本地安装了 Docker，则推荐此连接选项。</span><br><span class="line">如果出现权限被拒绝错误，请将当前用户添加到计算机上的 docker 组，然后注销，重新登录。</span><br><span class="line">Docker Machine：如果您使用的是Docker Toolbox for Windows，建议使用此选项连接Docker API。</span><br><span class="line">TCP socket： 如果你使用的是Docker for Windows，则这是常用的连接选项。此选项也适用于Linux、Docker for macOS和Docker Toolbox。如果你本地并未安装任何 Docker 程序也可以使用此选项来连接远程主机上的 Docker 守护进程 （见下文，但是某些操作是不支持的）。</span><br><span class="line">    Engine API URL：取决于Docker版本和操作系统：</span><br><span class="line">        Docker for Windows: tcp:&#x2F;&#x2F;localhost:2375 。注意：需要事先在Docker设置的 General 部分，启用 Expose daemon on tcp:&#x2F;&#x2F;localhost:2375 without TLS 选项（其作用是：将docker与本地的连接设置为不需要TLS加密）。</span><br><span class="line">        Docker for macOS 或 Linux: unix:&#x2F;&#x2F;&#x2F;var&#x2F;run&#x2F;docker.sock</span><br><span class="line">        Docker Toolbox for Windows 或 macOS: https:&#x2F;&#x2F;192.168.99.100:2376</span><br><span class="line">    Certificates folder ： 证书文件夹的路径 （一般留空）。取决于你的Docker版本和操作系统：</span><br><span class="line">        Docker for Windows, macOS 或 Linux: 留空即可</span><br><span class="line">        Docker Toolbox for Windows： %HOMEPATH%.dockermachinemachinesdefault</span><br><span class="line"></span><br><span class="line"># 配置 Path mappings （路径映射） ：</span><br><span class="line">对于Windows和macOS：指定可以在主机和容器之间共享的文件夹的映射。</span><br><span class="line">    Local path: 用于（volume binding）卷绑定的本地文件夹的路径。</span><br><span class="line">    Virtual machine path: Docker虚拟机文件系统中的相应目录路径。</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>virtualBox与本地挂载共享文件夹</title>
    <url>/2021/06/12/tool-linux-VM-VirtualBox-0-virtualBox%E4%B8%8E%E6%9C%AC%E5%9C%B0%E6%8C%82%E8%BD%BD%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/yaolong336/article/details/78030500" target="_blank" rel="noopener">参考: VirtualBox 安装增强功能 ubuntu server版</a><br><a href="https://www.cnblogs.com/jerryzh/p/11091304.html" target="_blank" rel="noopener">VirtualBox mount报错：/sbin/mount.vboxsf: mounting failed with the error: No such device</a></p>
<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><ol>
<li>virtualBox虚拟机，Ubuntu Server服务器，win10专业版（本地）</li>
<li>通过虚拟机的”设备“去安装增强功能一直无法成功，不论是安装增强，还是”溢出虚拟盘“</li>
<li>所以考虑通过命令的形式执行增强挂载（共享文件夹）</li>
</ol>
<h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><ol>
<li>确保当前使用的账号有root权限，即可以执行sudo</li>
<li>更新apt-get，请执行 sudo apt-get update，以及 sudo apt-get upgrade</li>
<li>安装依赖工具，sudo apt-get install dkms， sudo apt-get install build-essential</li>
<li>重启， sudo reboot now，如果命令无效或有执行错误，也可以使用外面的virtualbox的重启按钮</li>
<li>挂载cdrom， sudo mount /dev/cdrom /mnt/<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* 如果挂载失败，则需检查设备-&gt;分配光驱下是否包含了VBoxGuestAdditions.iso这个镜像</span><br><span class="line">* 如果有请选择它</span><br><span class="line">* 如果没有，请点击选择虚拟盘，然后在C:\Program Files\Oracle\VirtualBox 下找到它</span><br><span class="line">* 最后再执行上述命令，成功后的截图如下：</span><br><span class="line">sudo mount &#x2F;dev&#x2F;cdrom &#x2F;mnt&#x2F;</span><br><span class="line">mount: &#x2F;dev&#x2F;sr0 is write-protected,mounting read-only</span><br><span class="line">&gt; 自己执行挂载时，显示的时mounted（第一次没注意，第二次执行显示已挂载）</span><br></pre></td></tr></table></figure></li>
<li>执行安装命令，sudo /mnt/VBoxLinuxAdditions.run（挂载之后自动生成的文件）， 不同版本的.run文件名可能有区别</li>
<li>此时，我们需要 设备-&gt;共享文件夹-&gt;共享文件夹，请添加一个共享文件夹，一般会勾选自动挂载和固定分配两项，<br>共享文件夹路径以及名称，最好都不要出现中文。<br>请记下共享文件夹名称，且在共享文件夹中放入一个test.txt作为测试使用。<br>截图如下:<br><img src="0-virtualBox与本地挂载共享文件夹/共享文件夹界面.png" alt=""><br><img src="0-virtualBox与本地挂载共享文件夹/本地电脑创建的共享文件夹.png" alt="">  </li>
<li>执行共享文件夹的挂载命令：<br>sudo mount -t vboxsf shared /home/share/<br>shared，为共享文件夹界面定义的共享文件夹名称<br>/home/share/，为Ubuntu中共享文件夹路径，需提前创建；当然该路径可以填/mnt/share，也许提前创建  </li>
<li>当我们执行第7步时，报错如下：<br>/sbin/mount.vboxsf: mounting failed with the error: No such device<br>解决办法：  <figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">cd /opt/VBoxGuestAdditions-*/init  </span><br><span class="line">./vboxadd setup</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>
<blockquote>
<p>再次执行第7步，即可成功</p>
</blockquote>
</li>
<li>然后再/home/share/文件夹下即可找到本地电脑workspace-shared文件夹中的test.txt</li>
<li>卸载， sudo umount /mnt/   (卸载命令未测试）(安装命令，sudo /mnt/VBoxLinuxAdditions.run)</li>
</ol>
<h1 id="重启电脑后，挂载需要重新执行-挂载需要时间，可以等待，不用执行下面的命令"><a href="#重启电脑后，挂载需要重新执行-挂载需要时间，可以等待，不用执行下面的命令" class="headerlink" title="重启电脑后，挂载需要重新执行(挂载需要时间，可以等待，不用执行下面的命令)"></a>重启电脑后，挂载需要重新执行(挂载需要时间，可以等待，不用执行下面的命令)</h1><p>sudo mount /dev/cdrom /mnt/</p>
<ol>
<li>sudo /mnt/VBoxLinuxAdditions.run</li>
<li>ls</li>
<li>sudo mount -t vboxsf shared /home/share/  </li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>linux</category>
        <category>vm</category>
      </categories>
      <tags>
        <tag>vm</tag>
      </tags>
  </entry>
  <entry>
    <title>网卡配置</title>
    <url>/2021/06/12/tool-linux-VM-VirtualBox-3-%E7%BD%91%E5%8D%A1%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="查看-eth0及eth1等是否被rename"><a href="#查看-eth0及eth1等是否被rename" class="headerlink" title="查看 eth0及eth1等是否被rename"></a>查看 eth0及eth1等是否被rename</h1><p>dmesg | grep eth </p>
<h2 id="如下方式，是被enp0s3重命名"><a href="#如下方式，是被enp0s3重命名" class="headerlink" title="如下方式，是被enp0s3重命名"></a>如下方式，是被enp0s3重命名</h2><h1 id="ubuntu16-04永久修改有线接口名称-enp0s3-gt-eth0"><a href="#ubuntu16-04永久修改有线接口名称-enp0s3-gt-eth0" class="headerlink" title="ubuntu16.04永久修改有线接口名称(enp0s3-&gt;eth0)"></a>ubuntu16.04永久修改有线接口名称(enp0s3-&gt;eth0)</h1><p>sudo nano /etc/default/grub<br>找到GRUB_CMDLINE_LINUX=””<br>改为GRUB_CMDLINE_LINUX=”net.ifnames=0 biosdevname=0”<br>然后sudo grub-mkconfig -o /boot/grub/grub.cfg</p>
<blockquote>
<p> 此操作之后，enp0s3消失</p>
</blockquote>
<h1 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h1><ol>
<li>使用ifconfig<br>只出现 docker0 和 lo<br>而使用 ifconfig -a，则eth0 和 eth1 均出现</li>
<li>使用如下命令启用eth0 和 eth1<br>sudo ifconfig eth0 up<br>sudo ifconfig eth1 up<blockquote>
<p><a href="https://blog.csdn.net/u012789986/article/details/54178263" target="_blank" rel="noopener">参考</a></p>
</blockquote>
</li>
</ol>
<h1 id="后续-1"><a href="#后续-1" class="headerlink" title="后续"></a>后续</h1><p>但是发现 eth0 和 eth1 中都没有 inet，也就是 ipv4<br><a href="https://blog.csdn.net/u014439239/article/details/79914614" target="_blank" rel="noopener">linux中eth0中没有inet addr - 没验证，虚拟机的Ubuntu中反正是不行</a><br><a href="https://blog.csdn.net/yueyeqingshan/article/details/52805546" target="_blank" rel="noopener">虚拟机安装红帽的eth0没有inet addr的解决方案- 虚拟机+Ubuntu已验证，可行</a></p>
<h2 id="使用dhclient-eth0命令"><a href="#使用dhclient-eth0命令" class="headerlink" title="使用dhclient eth0命令"></a>使用dhclient eth0命令</h2><p>输入 dhclient eth0 命令来获取IP地址<br>再输入ifconfig命令，就能看到eth0已经有IP地址了  </p>
<blockquote>
<p>但是有一个问题：每次重启系统之后，使用ifconfig命令又看不到IP地址了，必须每次都使用 dhclient eth0 命令重新分配，很不方便  </p>
<h3 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h3><p>此时我们通过shell只能访问eth1，不能访问eth0<br>因为我们在virtualBox的网络-&gt;网卡设置中，对于网卡1的混杂模式为：拒绝，网卡2的混杂模式为：全部允许</p>
</blockquote>
<h2 id="方法二，但是Ubuntu中没有sysconfig-network-scripts-ifcfg-eth0"><a href="#方法二，但是Ubuntu中没有sysconfig-network-scripts-ifcfg-eth0" class="headerlink" title="方法二，但是Ubuntu中没有sysconfig/network-scripts/ifcfg-eth0"></a>方法二，但是Ubuntu中没有sysconfig/network-scripts/ifcfg-eth0</h2><p>vim /etc/sysconfig/network-scripts/ifcfg-eth0<br>将里面的ONBOOT属性设置为 yes<br>在执行service network restart 命令，就可以通过 ifconfig 查看eth0 的IP地址了</p>
<blockquote>
<p>重点是这样以后每次系统重启之后，都能自动获取IP 地址。所以问题解决了。</p>
</blockquote>
<h1 id="总结（需执行如下）"><a href="#总结（需执行如下）" class="headerlink" title="总结（需执行如下）"></a>总结（需执行如下）</h1><ol>
<li>启动eth0和eth1<br>sudo ifconfig eth0 up<br>sudo ifconfig eth1 up</li>
<li>显示ipv4<br> sudo dhclient eth0<br> sudo dhclient eth1</li>
<li>查看网卡配置<br> ifconfig<blockquote>
<p>/etc/network/interfaces中不能配置网卡，否则ifconfig显示正常，但是shell无法连接</p>
</blockquote>
</li>
</ol>
<h1 id="20220512"><a href="#20220512" class="headerlink" title="20220512"></a>20220512</h1><p>若还是不行，可尝试如下设置，之后再重启服务重试:<br>更改VirtualBox上的网络设置，将连接方式改为桥接网卡<br><img src="3-网卡配置/virtualBox%20网卡-桥接模式.png" alt="">  </p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>linux</category>
        <category>vm</category>
      </categories>
      <tags>
        <tag>vm</tag>
      </tags>
  </entry>
  <entry>
    <title>vm虚拟机显示鼠标</title>
    <url>/2021/06/12/tool-linux-VM-VirtualBox-1-vm%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%98%BE%E7%A4%BA%E9%BC%A0%E6%A0%87/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ol>
<li>转到机器设置-&gt;系统-&gt;主板。</li>
<li>选择PS / 2鼠标作为定位设备。</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>linux</category>
        <category>vm</category>
      </categories>
      <tags>
        <tag>vm</tag>
      </tags>
  </entry>
  <entry>
    <title>增强扩展包安装</title>
    <url>/2021/06/12/tool-linux-VM-VirtualBox-2-%E5%A2%9E%E5%BC%BA%E6%89%A9%E5%B1%95%E5%8C%85%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ol>
<li>官方下载对应版本的增强扩展包</li>
<li>“管理”-&gt; “全局设置“-&gt; “扩展”-&gt; 右侧扩展界面中，靠右方的 + 号，添加扩展包</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>linux</category>
        <category>vm</category>
      </categories>
      <tags>
        <tag>vm</tag>
      </tags>
  </entry>
  <entry>
    <title>自定义网卡</title>
    <url>/2021/06/12/tool-linux-VM-VirtualBox-3-2-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BD%91%E5%8D%A1/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="网卡配置模板"><a href="#网卡配置模板" class="headerlink" title="网卡配置模板"></a>网卡配置模板</h1><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">auto eth0</span></span><br><span class="line"><span class="meta">#</span><span class="bash">iface eth0 inet dhcp <span class="comment">#自动获取IP(默认)</span></span></span><br><span class="line">auto eth0</span><br><span class="line">iface eth0 inet static #设置静态IP</span><br><span class="line">address 10.0.10.200 #设置IP地址</span><br><span class="line">netmask 255.255.255.0 #设置子网掩码(根据实际情况计算)</span><br><span class="line">gateway 10.0.10.1 #设置网关</span><br><span class="line">dns-nameservers 10.0.10.1 1.2.4.8 #比如这里就设置了两个DNS</span><br></pre></td></tr></table></figure>
<h1 id="ubuntu网卡配置地址"><a href="#ubuntu网卡配置地址" class="headerlink" title="ubuntu网卡配置地址"></a>ubuntu网卡配置地址</h1><p>/etc/network/interfaces</p>
<p># </p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>linux</category>
        <category>vm</category>
      </categories>
      <tags>
        <tag>vm</tag>
      </tags>
  </entry>
  <entry>
    <title>删除停用多余虚拟网卡</title>
    <url>/2021/06/12/tool-linux-VM-VirtualBox-4-%E5%88%A0%E9%99%A4%E5%81%9C%E7%94%A8%E5%A4%9A%E4%BD%99%E8%99%9A%E6%8B%9F%E7%BD%91%E5%8D%A1/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>sudo apt install uml-utilities</p>
<h1 id="查看网卡信息"><a href="#查看网卡信息" class="headerlink" title="查看网卡信息"></a>查看网卡信息</h1><p>ifconfig </p>
<h1 id="查看所有网桥"><a href="#查看所有网桥" class="headerlink" title="查看所有网桥"></a>查看所有网桥</h1><p>ifconfig -a</p>
<h1 id="删除虚拟网卡"><a href="#删除虚拟网卡" class="headerlink" title="删除虚拟网卡"></a>删除虚拟网卡</h1><p>tunctl -d 网卡名</p>
<h1 id="删除虚拟网桥"><a href="#删除虚拟网桥" class="headerlink" title="删除虚拟网桥"></a>删除虚拟网桥</h1><p>ifconfig &lt;网桥名&gt; down –停用网桥<br>brctl delbr &lt;网桥名&gt; –删除</p>
<p>can’t delete bridge vethee863c1: Operation not permitted</p>
<h1 id="将网卡tvethee863c1-移出bridge-br0-执行失败"><a href="#将网卡tvethee863c1-移出bridge-br0-执行失败" class="headerlink" title="将网卡tvethee863c1 移出bridge(br0) (执行失败)"></a>将网卡tvethee863c1 移出bridge(br0) (执行失败)</h1><p>brctl delif br0 vethee863c1</p>
<h1 id="重启网卡时-出现-RTNETLINK-answers-File-exists-提示"><a href="#重启网卡时-出现-RTNETLINK-answers-File-exists-提示" class="headerlink" title="重启网卡时 出现 :RTNETLINK answers: File exists  提示"></a>重启网卡时 出现 :RTNETLINK answers: File exists  提示</h1><p>删除多余无用网卡vethee863c1</p>
<h1 id="查看指定网卡（查看指定网桥）"><a href="#查看指定网卡（查看指定网桥）" class="headerlink" title="查看指定网卡（查看指定网桥）"></a>查看指定网卡（查看指定网桥）</h1><p>sudo ifconfig eth1</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>linux</category>
        <category>vm</category>
      </categories>
      <tags>
        <tag>vm</tag>
      </tags>
  </entry>
  <entry>
    <title>百度统计服务</title>
    <url>/2021/05/04/hexo-%E6%8F%92%E4%BB%B6-hexo%E7%AC%94%E8%AE%B0-%E7%99%BE%E5%BA%A6%E7%BB%9F%E8%AE%A1%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="百度统计服务"><a href="#百度统计服务" class="headerlink" title="百度统计服务"></a>百度统计服务</h1><ol>
<li><a href="https://tongji.baidu.com/" target="_blank" rel="noopener">https://tongji.baidu.com/</a> 注册登录</li>
<li>顶部“管理” –&gt; 左侧 “代码管理”/“代码获取” –&gt; 右侧 hm.src=”xxx/hm.js?yyyyy”， 取 yyyy<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">var _hmt &#x3D; _hmt || [];</span><br><span class="line">(function() &#123;</span><br><span class="line">  var hm &#x3D; document.createElement(&quot;script&quot;);</span><br><span class="line">  hm.src &#x3D; &quot;https:&#x2F;&#x2F;hm.baidu.com&#x2F;hm.js?yyyyy&quot;;</span><br><span class="line">  var s &#x3D; document.getElementsByTagName(&quot;script&quot;)[0];</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>plugin</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>百度分享服务</title>
    <url>/2021/05/03/hexo-%E6%8F%92%E4%BB%B6-hexo%E7%AC%94%E8%AE%B0-%E7%99%BE%E5%BA%A6%E5%88%86%E4%BA%AB%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>百度分享不支持Https的解决方案：<a href="https://github.com/hrwhisper/baiduShare" target="_blank" rel="noopener">https://github.com/hrwhisper/baiduShare</a></strong></li>
</ul>
<hr>
<h1 id="百度分享服务"><a href="#百度分享服务" class="headerlink" title="百度分享服务"></a>百度分享服务</h1><ol>
<li>\themes\next6\layout_partials\share\baidushare.swig<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.baidushare.type &#x3D;&#x3D;&#x3D; &quot;button&quot; %&#125;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">&#123;% elseif theme.baidushare.type &#x3D;&#x3D;&#x3D; &quot;slide&quot; %&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li>
<li>themes/next6/_config.yml<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Baidu Share </span><br><span class="line"># Available value:</span><br><span class="line">#    button | slide</span><br><span class="line"># Warning: Baidu Share does not support https.</span><br><span class="line">baidushare:</span><br><span class="line">  type: slide</span><br><span class="line">#  type: button</span><br></pre></td></tr></table></figure></li>
<li>github是https开头，百度分享不支持https，所以需要调整配置</li>
</ol>
<ul>
<li>下载百度分享解决包/static/api/….，放置在themes/next6/source/下</li>
<li>更改baidushare.swig配置<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  &lt;!-- 原配置 with(document)0[(getElementsByTagName(&#39;head&#39;)[0]||body).appendChild(createElement(&#39;script&#39;)).src&#x3D;&#39;&#x2F;&#x2F;bdimg.share.baidu.com&#x2F;static&#x2F;api&#x2F;js&#x2F;share.js?cdnversion&#x3D;&#39;+~(-new Date()&#x2F;36e5)]; --&gt;</span><br><span class="line">  with(document)0[(getElementsByTagName(&#39;head&#39;)[0]||body).appendChild(createElement(&#39;script&#39;)).src&#x3D;&#39;&#x2F;static&#x2F;api&#x2F;js&#x2F;share.js?cdnversion&#x3D;&#39;+~(-new Date()&#x2F;36e5)];</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>需要在具体的文章阅读时，左侧显示分享服务</p>
</blockquote>
</li>
</ul>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>plugin</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>本地搜索</title>
    <url>/2021/05/02/hexo-%E6%8F%92%E4%BB%B6-hexo%E7%AC%94%E8%AE%B0-%E6%9C%AC%E5%9C%B0%E6%90%9C%E7%B4%A2/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h1><ol>
<li>npm install hexo-generator-searchdb –save</li>
<li>站点/_config.yml<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 本地搜索服务</span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure></li>
<li>themes/next6/_config.yml<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Local search（本地搜索服务）</span><br><span class="line"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-generator-searchdb</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # 如果是自动，则通过更改输入触发搜索</span><br><span class="line">  # 如果是手动的，按回车键或搜索按钮触发搜索</span><br><span class="line">  trigger: auto</span><br><span class="line">  # 显示每篇文章的前 n 个结果，通过设置为 -1 显示所有结果</span><br><span class="line">  top_n_per_article: 1</span><br><span class="line">  # 将 html 字符串转义为可读的字符串</span><br><span class="line">  unescape: false</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>plugin</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>wsl安装Ubuntu</title>
    <url>/2021/04/12/tool-wsl-1-wsl%E5%AE%89%E8%A3%85Ubuntu/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/luobing4365/article/details/105752549" target="_blank" rel="noopener">参考文档：</a><br><a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-manual#installing-your-distro" target="_blank" rel="noopener">Ubuntu官方下载-很慢</a><br><a href="https://aka.ms/wsl-ubuntu-1804" target="_blank" rel="noopener">下载地址-很快</a><br><a href="https://blog.csdn.net/luobing4365/article/details/105752549" target="_blank" rel="noopener">wsl安装Ubuntu-下载源地址</a></p>
<p><a href="https://aka.ms/wsl-ubuntu-1804" target="_blank" rel="noopener">Ubuntu 18.04：https://aka.ms/wsl-ubuntu-1804</a></p>
<p><a href="https://aka.ms/wsl-ubuntu-1804-arm" target="_blank" rel="noopener">Ubuntu 18.04 ARM：https://aka.ms/wsl-ubuntu-1804-arm</a></p>
<p><a href="https://aka.ms/wsl-ubuntu-1604" target="_blank" rel="noopener">Ubuntu 16.04：https://aka.ms/wsl-ubuntu-1604</a></p>
<p><a href="https://aka.ms/wsl-debian-gnulinux" target="_blank" rel="noopener">Debian GNU/Linux：https://aka.ms/wsl-debian-gnulinux</a></p>
<p><a href="https://aka.ms/wsl-kali-linux" target="_blank" rel="noopener">Kali Linux：https://aka.ms/wsl-kali-linux</a></p>
<p><a href="https://aka.ms/wsl-opensuse-42" target="_blank" rel="noopener">OpenSUSE：https://aka.ms/wsl-opensuse-42</a></p>
<p><a href="https://aka.ms/wsl-sles-12" target="_blank" rel="noopener">SLES：https://aka.ms/wsl-sles-12</a></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>wsl</category>
        <category>wsl</category>
      </categories>
      <tags>
        <tag>wsl</tag>
      </tags>
  </entry>
  <entry>
    <title>wsl常用命令</title>
    <url>/2021/04/12/tool-wsl-2-wsl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="wsl常用命令"><a href="#wsl常用命令" class="headerlink" title="wsl常用命令"></a>wsl常用命令</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">列出分发版</span><br><span class="line">wsl -l , wsl --list</span><br><span class="line">wsl --list --all</span><br><span class="line">wsl --list --running</span><br><span class="line">设置默认分发版</span><br><span class="line">wsl -s Ubuntu</span><br><span class="line">取消注册和重新安装分发版</span><br><span class="line">注销后，与该分发关联的所有数据、设置和软件都将永久丢失。 从 Store 重新安装会安装分发版的干净副本。</span><br><span class="line">wsl --unregister &lt;DistributionName&gt;</span><br><span class="line">wsl --unregister Ubuntu</span><br><span class="line">将 WSL 2 设置为默认版本</span><br><span class="line">wsl --set-default-version 2</span><br><span class="line">用于管理适用于 Linux 的 Windows 子系统的参数</span><br><span class="line">--export &lt;分发版&gt; &lt;文件名&gt;  将分发版导出到 tar 文件</span><br><span class="line">--import &lt;分发版&gt; &lt;安装位置&gt; &lt;文件名&gt;  导入指定的 tar 文件作为新的分发版</span><br><span class="line">--list、-l [选项]  列出分发版</span><br><span class="line"></span><br><span class="line">wsl --shutdown</span><br><span class="line">立即终止所有正在运行的发行版和 WSL 2 轻量级实用程序虚拟机</span><br><span class="line">wsl --terminate Ubuntu 关闭ubuntu</span><br><span class="line"></span><br><span class="line">service docker status&#x2F;start&#x2F;restart</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>wsl</category>
        <category>wsl</category>
      </categories>
      <tags>
        <tag>wsl</tag>
      </tags>
  </entry>
  <entry>
    <title>wsl操作记录</title>
    <url>/2021/04/12/tool-wsl-3-wsl%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="查看wsl版本"><a href="#查看wsl版本" class="headerlink" title="查看wsl版本"></a>查看wsl版本</h1><p>wsl -l -v</p>
<h1 id="cmd命令窗口打开Ubuntu"><a href="#cmd命令窗口打开Ubuntu" class="headerlink" title="cmd命令窗口打开Ubuntu"></a>cmd命令窗口打开Ubuntu</h1><p>bash</p>
<h1 id="重启、停止、启动windows子系统"><a href="#重启、停止、启动windows子系统" class="headerlink" title="重启、停止、启动windows子系统"></a>重启、停止、启动windows子系统</h1><p>services.msc<br>服务选项： LxssManager 服务</p>
<h1 id="Ubuntu本地路径"><a href="#Ubuntu本地路径" class="headerlink" title="Ubuntu本地路径"></a>Ubuntu本地路径</h1><p><a href="https://zhuanlan.zhihu.com/p/110890854" target="_blank" rel="noopener">Ubuntu本地路径参考文档</a><br>C:\Users\zhangdaiyin\AppData\Local\Packages\CanonicalGroupLimited.Ubuntu18.04onWindows_79rhkp1fndgsc\LocalState\rootfs</p>
<p>#<br><a href="https://blog.csdn.net/weixin_44546992/article/details/110630417" target="_blank" rel="noopener">IDEA连接wsl内docker的spark集群（scala版）</a></p>
<h1 id="安装wsl，需要先安装以下两个"><a href="#安装wsl，需要先安装以下两个" class="headerlink" title="安装wsl，需要先安装以下两个"></a>安装wsl，需要先安装以下两个</h1><ol>
<li>适用于Linux的Windows子系统</li>
<li>虚拟机平台</li>
</ol>
<h1 id="列出当前系统上已经安装的-Linux-子系统名称"><a href="#列出当前系统上已经安装的-Linux-子系统名称" class="headerlink" title="列出当前系统上已经安装的 Linux 子系统名称"></a>列出当前系统上已经安装的 Linux 子系统名称</h1><p>wsl -l</p>
<h1 id="设置一个-Linux-发行版的-WSL-版本"><a href="#设置一个-Linux-发行版的-WSL-版本" class="headerlink" title="设置一个 Linux 发行版的 WSL 版本"></a>设置一个 Linux 发行版的 WSL 版本</h1><p>wsl –set-version <Distro> 2<br>例： wsl –set-version Ubuntu&gt; 2<br>说明：使用 wsl –set-version <Distro> 2 命令可以设置一个 Linux 发行版的 WSL 版本。命令中 <Distro> 替换为你安装的 Linux 发型版本的名称，也就是前面通过 wsl -l 查询到的名称。</p>
<h2 id="当然，使用以下命令可以在以后安装-Linux-的时候默认启用-WSL2："><a href="#当然，使用以下命令可以在以后安装-Linux-的时候默认启用-WSL2：" class="headerlink" title="当然，使用以下命令可以在以后安装 Linux 的时候默认启用 WSL2："></a>当然，使用以下命令可以在以后安装 Linux 的时候默认启用 WSL2：</h2><p>wsl –set-default-version 2</p>
<h1 id="WSL1中安装Docker"><a href="#WSL1中安装Docker" class="headerlink" title="WSL1中安装Docker"></a>WSL1中安装Docker</h1><p><a href="https://www.cnblogs.com/talentzemin/p/12544273.html" target="_blank" rel="noopener">WSL1中安装Docker</a></p>
<h1 id="关闭wsl"><a href="#关闭wsl" class="headerlink" title="关闭wsl"></a>关闭wsl</h1><p>wsl –shutdown &lt;分发版名称&gt;</p>
<h1 id="在window上找到wsl2的文件夹目录"><a href="#在window上找到wsl2的文件夹目录" class="headerlink" title="在window上找到wsl2的文件夹目录"></a>在window上找到wsl2的文件夹目录</h1><p>在文件窗口运行 \wsl$</p>
<p>/etc/wsl.conf</p>
<p>/mnt/e/G-工作文档/doc-cic/G-公共技术/arthas</p>
<p>linux复制不是copy，而是cp</p>
<p>sudo cp /mnt/e/G-工作文档/doc-cic/G-公共技术/arthas/arthas-tunnel-server-3.5.2-fatjar.jar /home/arthas/arthas-tunnel-server.jar<br>sudo cp /mnt/e/G-工作文档/doc-cic/G-公共技术/arthas/entrypoint.sh /home/arthas/entrypoint.sh<br>sudo cp /mnt/e/G-工作文档/doc-cic/G-公共技术/arthas/Arthas-Dockerfile /home/arthas/Dockerfile</p>
<p>打包镜像：sudo docker build -f Dockerfile -t shwz_app_image . (也可以su root 进入root 用户，这样就可以不使用sudo 命令)</p>
<p>sudo docker build -f Dockerfile -t arthas_image_2 . </p>
<h1 id="查看用户"><a href="#查看用户" class="headerlink" title="查看用户"></a>查看用户</h1><p>cat /etc/passwd</p>
<h1 id="查看组"><a href="#查看组" class="headerlink" title="查看组"></a>查看组</h1><p>cat /etc/group</p>
<p>sudo groups 查看当前用户下的所有组<br>whoami        查看当前登录用户名</p>
<h1 id="删除容器和镜像"><a href="#删除容器和镜像" class="headerlink" title="删除容器和镜像"></a>删除容器和镜像</h1><p>docker rmi 镜像ID<br>docker rm 容器id</p>
<h1 id="查看java进程"><a href="#查看java进程" class="headerlink" title="查看java进程"></a>查看java进程</h1><p>ps -ef | grep java</p>
<h1 id="wsl2中启动springboot程序"><a href="#wsl2中启动springboot程序" class="headerlink" title="wsl2中启动springboot程序"></a>wsl2中启动springboot程序</h1><ol>
<li>安装jdk8<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install openjdk-8-jre-headless</span><br></pre></td></tr></table></figure></li>
<li>下载(wget)或拷贝(cp)springboot.jar</li>
<li>后台指定编码和端口运行<br>java -Dfile.encoding=utf-8 -jar xxx.jar –server.port=8080 &amp;</li>
</ol>
<h1 id="删除none"><a href="#删除none" class="headerlink" title="删除none"></a>删除none</h1><p>sudo docker rmi $(docker iamges -f dangling=true -q)<br>或<br>docker image prune</p>
<h1 id="运行镜像"><a href="#运行镜像" class="headerlink" title="运行镜像"></a>运行镜像</h1><p>sudo docker run -p 8080:8080 arthas_image_2</p>
<p>/home/admin/arthas-tunnel-server.jar</p>
<p>netstat -ntpl (TCP类型的端口)</p>
<p>whereis iptables #查看系统是否安装防火墙</p>
<p>which iptable  # 显示路径</p>
<p><a href="https://blog.csdn.net/weixin_39509073/article/details/113250690" target="_blank" rel="noopener">https://blog.csdn.net/weixin_39509073/article/details/113250690</a></p>
<h1 id="TCP类型的端口"><a href="#TCP类型的端口" class="headerlink" title="(TCP类型的端口)"></a>(TCP类型的端口)</h1><p>netstat -ntpl</p>
<h1 id="Ubuntu-下查看哪些端口是开放的，分别是什么进程在监听"><a href="#Ubuntu-下查看哪些端口是开放的，分别是什么进程在监听" class="headerlink" title="Ubuntu 下查看哪些端口是开放的，分别是什么进程在监听"></a>Ubuntu 下查看哪些端口是开放的，分别是什么进程在监听</h1><p>sudo netstat -tlpn</p>
<h1 id="运行镜像-1"><a href="#运行镜像-1" class="headerlink" title="运行镜像"></a>运行镜像</h1><p>sudo docker run -p 8080:8080 -p 7777:7777 arthas_image_2</p>
<h1 id="镜像分类描述"><a href="#镜像分类描述" class="headerlink" title="镜像分类描述"></a>镜像分类描述</h1><p>arthas_image   此镜像日志打印在控制台<br>arthas_image_2 此镜像日志打印在log.file中</p>
<p>java -Dfile.encoding=utf-8 -jar arthas-tunnel-server-3.5.2-fatjar.jar –server.port=8080 &gt; log.file 2&gt;&amp;1 &amp;</p>
<p>sudo docker exec -it 639a7daf2a9b /bin/sh</p>
<p>docker attach 容器ID</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>wsl</category>
        <category>wsl</category>
      </categories>
      <tags>
        <tag>wsl</tag>
      </tags>
  </entry>
  <entry>
    <title>wsl启动暂停ubuntu</title>
    <url>/2021/04/12/tool-wsl-4-wsl%E5%90%AF%E5%8A%A8%E6%9A%82%E5%81%9Cubuntu/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="以管理员身份运行cmd"><a href="#以管理员身份运行cmd" class="headerlink" title="以管理员身份运行cmd"></a>以管理员身份运行cmd</h1><h2 id="启动ubuntu"><a href="#启动ubuntu" class="headerlink" title="启动ubuntu"></a>启动ubuntu</h2><p>net start LxssManager</p>
<h2 id="暂停ubuntu"><a href="#暂停ubuntu" class="headerlink" title="暂停ubuntu"></a>暂停ubuntu</h2><p>net stop LxssManager</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>wsl</category>
        <category>wsl</category>
      </categories>
      <tags>
        <tag>wsl</tag>
      </tags>
  </entry>
  <entry>
    <title>wsl2 设置端口映射</title>
    <url>/2021/04/12/tool-wsl-6-wsl2-%E8%AE%BE%E7%BD%AE%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<pre><code>wsl2 设置端口映射: https://blog.csdn.net/keyiis_sh/article/details/113819244?spm=1001.2101.3001.6650.4&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-4-113819244-blog-104491807.pc_relevant_paycolumn_v3&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-4-113819244-blog-104491807.pc_relevant_paycolumn_v3&amp;utm_relevant_index=9
</code></pre><hr>
<h1 id="wsl2-设置端口映射"><a href="#wsl2-设置端口映射" class="headerlink" title="wsl2 设置端口映射"></a>wsl2 设置端口映射</h1><ol>
<li>管理员启动cmd，获取虚拟机内ubuntu的ip地址<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wsl -- ifconfig eth0</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Users\zhangdaiyin&gt;wsl -- ifconfig eth0</span><br><span class="line">eth0: flags&#x3D;4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.23.229.221  netmask 255.255.240.0  broadcast 172.23.239.255</span><br><span class="line">        inet6 fe80::215:5dff:fe00:4d72  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 00:15:5d:00:4d:72  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 8553  bytes 873694 (873.6 KB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 1433  bytes 121685 (121.6 KB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure></li>
<li>将ip地址的对应的端口映射到宿主win10对应的端口<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># netsh interface portproxy add v4tov4 listenport&#x3D;[win10端口] listenaddress&#x3D;0.0.0.0 connectport&#x3D;[虚拟机的端口] connectaddress&#x3D;[虚拟机的ip]</span><br><span class="line">netsh interface portproxy add v4tov4 listenport&#x3D;8081 listenaddress&#x3D;0.0.0.0 connectport&#x3D;8081 connectaddress&#x3D;172.23.229.221</span><br></pre></td></tr></table></figure></li>
<li>检测是否设置成功<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netsh interface portproxy show all</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\WINDOWS\system32&gt;netsh interface portproxy show all</span><br><span class="line"></span><br><span class="line">侦听 ipv4:                 连接到 ipv4:</span><br><span class="line"></span><br><span class="line">地址            端口        地址            端口</span><br><span class="line">--------------- ----------  --------------- ----------</span><br><span class="line">0.0.0.0         8081        172.23.229.221  8081</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>若还是不行，关闭你本机的防火墙</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>wsl</category>
        <category>wsl</category>
      </categories>
      <tags>
        <tag>wsl</tag>
      </tags>
  </entry>
  <entry>
    <title>wsl的ubuntu移动到其他磁盘</title>
    <url>/2021/04/12/tool-wsl-5-wsl%E7%9A%84ubuntu%E7%A7%BB%E5%8A%A8%E5%88%B0%E5%85%B6%E4%BB%96%E7%A3%81%E7%9B%98/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/x356982611/article/details/108641601?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-4.baidujs&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-4.baidujs" target="_blank" rel="noopener">wsl的ubuntu移动到其他磁盘</a></p>
<h1 id="导出系统-wsl-–export"><a href="#导出系统-wsl-–export" class="headerlink" title="导出系统 wsl –export  "></a>导出系统 wsl –export <DistroName> <PathToTarArchive></h1><p>wsl –export Ubuntu-18.04  E:\workspace-all\workspace-wsl\ubuntu18.04.tar</p>
<h1 id="删除系统-wsl-–unregister"><a href="#删除系统-wsl-–unregister" class="headerlink" title="删除系统 wsl –unregister "></a>删除系统 wsl –unregister <DistroName></h1><p>wsl –unregister Ubuntu-18.04</p>
<h1 id="导入系统-指定新的位置-wsl-–import"><a href="#导入系统-指定新的位置-wsl-–import" class="headerlink" title="导入系统 指定新的位置 wsl –import   "></a>导入系统 指定新的位置 wsl –import <DistroName> <PathToDistroNewDirectory> <PathToTarArchive></h1><p>wsl –import Ubuntu-18.04 E:\workspace-all\workspace-wsl\Ubuntu-WSL2 E:\workspace-all\workspace-wsl\ubuntu18.04.tar<br>wsl -l -v</p>
<h1 id="设置默认用户（设置之后，启动启动running）"><a href="#设置默认用户（设置之后，启动启动running）" class="headerlink" title="设置默认用户（设置之后，启动启动running）"></a>设置默认用户（设置之后，启动启动running）</h1><p>ubuntu1804.exe config –default-user zhangdaiyin</p>
<h1 id="以管理员身份运行cmd"><a href="#以管理员身份运行cmd" class="headerlink" title="以管理员身份运行cmd"></a>以管理员身份运行cmd</h1><h2 id="启动ubuntu"><a href="#启动ubuntu" class="headerlink" title="启动ubuntu"></a>启动ubuntu</h2><p>net start LxssManager</p>
<h2 id="暂停ubuntu"><a href="#暂停ubuntu" class="headerlink" title="暂停ubuntu"></a>暂停ubuntu</h2><p>net stop LxssManager</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>wsl</category>
        <category>wsl</category>
      </categories>
      <tags>
        <tag>wsl</tag>
      </tags>
  </entry>
  <entry>
    <title>no source files were specified</title>
    <url>/2021/04/12/depth-docker-excp-1-no-source-files-were-specified/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><ol>
<li>Configurations配置<br>Dockerfile: xxx/Dockerfile<br>Context folder: </li>
<li>Dockerfile<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FROM java:8</span><br><span class="line">ADD &#x2F;*.jar app.jar</span><br><span class="line">EXPOSE 8080</span><br><span class="line">ENTRYPOINT [&quot;java&quot;,&quot;-jar&quot;,&quot;&#x2F;app.jar&quot;]</span><br></pre></td></tr></table></figure></li>
<li>执行 run/debug 报错如下</li>
</ol>
<h1 id="no-source-files-were-specified"><a href="#no-source-files-were-specified" class="headerlink" title="no source files were specified"></a>no source files were specified</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Digest: sha256:c1ff613e8ba25833d2e1940da0940c3824f03f802c449f3d1815a66b7f8c0e9d</span><br><span class="line">Status: Downloaded newer image for java:8</span><br><span class="line"> ---&gt; d23bdf5b1b1b</span><br><span class="line">Step 2&#x2F;4 : ADD &#x2F;*.jar app.jar</span><br><span class="line">Error response from daemon: ADD failed: no source files were specified</span><br><span class="line">Failed to deploy &#39;app-image:1.0 Dockerfile: Dockerfile&#39;: Can&#39;t retrieve image ID from build stream</span><br></pre></td></tr></table></figure>
<blockquote>
<p>添加源文件失败。</p>
</blockquote>
<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><ol>
<li>未对项目进行打包 package，未生产出 target/…/项目名称-版本号.jar<br>在 idea Run/Debug Configurations里配置Dockerfile 路径的时候，Context folder路径指定为空，<br>然后在Dockerfile中 ADD /<em>.jar app.jar，结合来看是查找根目录下的 </em>.jar，当然找不到，因为 *.jar 在target目录下</li>
<li>所以修改如下：<br>configurations的Context folder配置为空不变，表示根目录，<br>Dockerfile里的 ADD /<em>.jar 调整为 ADD /target/</em>.jar<br>即可执行成功</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>excp</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Hardware assisted virtualization and data execution protection must be enabled in the BIOS</title>
    <url>/2021/04/12/depth-docker-excp-2-Hardware-assisted-virtualization-and-data-execution-protection-must-be-enabled-in-the-BIOS/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Hardware-assisted-virtualization-and-data-execution-protection-must-be-enabled-in-the-BIOS"><a href="#Hardware-assisted-virtualization-and-data-execution-protection-must-be-enabled-in-the-BIOS" class="headerlink" title="Hardware assisted virtualization and data execution protection must be enabled in the BIOS"></a>Hardware assisted virtualization and data execution protection must be enabled in the BIOS</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Hardware assisted virtualization and data execution protection must be enabled in the BIOS. </span><br><span class="line">See https:&#x2F;&#x2F;docs.docker.com&#x2F;desktop&#x2F;windows&#x2F;troubleshoot&#x2F;#virtualization</span><br></pre></td></tr></table></figure>
<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>安装了Docker的同时也安装了电脑版的安卓模拟器</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>Hyper-V异常导致<br>安卓模拟器 一些手游模拟器，会自动关闭HyperV的功能，导致Docker一直报错</p>
<h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><h2 id="启用-安卓模拟器，关闭-docker虚拟化"><a href="#启用-安卓模拟器，关闭-docker虚拟化" class="headerlink" title="启用 安卓模拟器，关闭 docker虚拟化"></a>启用 安卓模拟器，关闭 docker虚拟化</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bcdedit &#x2F;set hypervisorlaunchtype off</span><br></pre></td></tr></table></figure>
<h2 id="关闭-安卓模拟器，启用-docker虚拟化"><a href="#关闭-安卓模拟器，启用-docker虚拟化" class="headerlink" title="关闭 安卓模拟器，启用 docker虚拟化"></a>关闭 安卓模拟器，启用 docker虚拟化</h2><p>重启 Hyper-V 服务<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bcdedit &#x2F;set hypervisorlaunchtype auto</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>excp</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker删除镜像和容器</title>
    <url>/2021/04/12/depth-docker-notes-2-Docker%E5%88%A0%E9%99%A4%E9%95%9C%E5%83%8F%E5%92%8C%E5%AE%B9%E5%99%A8/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Docker删除镜像和容器"><a href="#Docker删除镜像和容器" class="headerlink" title="Docker删除镜像和容器"></a>Docker删除镜像和容器</h1><p>一、删除容器<br>首先需要停止所有的容器（只停止单个时把后面的变量改为image id即可）<br>docker stop $(docker ps -a -q)<br>删除所有的容器（只删除单个时把后面的变量改为image id即可）<br>docker rm $(docker ps -a -q)<br>二、删除镜像<br>查看host中的镜像<br>docker images<br>删除指定id的镜像<br>docker rmi <image id><br>想要删除untagged images，也就是那些id为的image的话可以用<br>docker rmi $(docker images | grep “^” | awk “{print $3}”)<br>删除全部的images<br>docker rmi $(docker images -q)</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>访问wsl中docker容器的应用</title>
    <url>/2021/04/12/depth-docker-notes-1-%E8%AE%BF%E9%97%AEwsl%E4%B8%ADdocker%E5%AE%B9%E5%99%A8%E7%9A%84%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="访问wsl中docker容器的应用"><a href="#访问wsl中docker容器的应用" class="headerlink" title="访问wsl中docker容器的应用"></a>访问wsl中docker容器的应用</h1><ol>
<li>正常查看linux网址，ip addr, eth0那个网址就是wsl的网址.</li>
</ol>
<p><a href="./source/_posts/工作工具/wsl/6-wsl2%20设置端口映射.md">6-wsl2 设置端口映射</a></p>
<ol>
<li>使用docker for windows 不做任何设置的启动容器<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zhangdaiyin@LAPTOP-BKST47D9:~$ docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE           COMMAND                CREATED        STATUS          PORTS      NAMES</span><br><span class="line">1a0f932f54a9   app-image:1.0   &quot;java -jar &#x2F;app.jar&quot;   46 hours ago   Up 21 minutes   8081&#x2F;tcp   suspicious_lovelace</span><br></pre></td></tr></table></figure>
<blockquote>
<p>此时无法被本机通过wsl的地址和端口访问  </p>
</blockquote>
</li>
<li>通过docker run命令启动<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zhangdaiyin@LAPTOP-BKST47D9:~$ sudo docker run -p 8081:8081 app-image:1.0</span><br><span class="line"></span><br><span class="line">zhangdaiyin@LAPTOP-BKST47D9:~$ docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE           COMMAND                CREATED         STATUS                       PORTS                    NAMES</span><br><span class="line">53e1da743cbe   app-image:1.0   &quot;java -jar &#x2F;app.jar&quot;   4 minutes ago   Up 4 minutes                 0.0.0.0:8081-&gt;8081&#x2F;tcp   flamboyant_napier</span><br><span class="line">1a0f932f54a9   app-image:1.0   &quot;java -jar &#x2F;app.jar&quot;   46 hours ago    Exited (143) 6 minutes ago                            suspicious_lovelace</span><br></pre></td></tr></table></figure>
<blockquote>
<p>通过命令的方式启动可以正常被访问</p>
</blockquote>
</li>
<li><p>通过对比发现，通过命令启动的时候，在PORTS中多了 0.0.0.0<br>分析原因是在通过docker for window启动时没有设置本机端口映射:<br><img src="1-访问wsl中docker容器的应用/docker for window启动端口映射.png" alt=""><br>设置后启动结果如下（test）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Users\zhangdaiyin&gt;docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE           COMMAND                CREATED          STATUS                        PORTS                    NAMES</span><br><span class="line">e54bb915b322   app-image:1.0   &quot;java -jar &#x2F;app.jar&quot;   20 seconds ago   Up 18 seconds                 0.0.0.0:8081-&gt;8081&#x2F;tcp   test</span><br><span class="line">53e1da743cbe   app-image:1.0   &quot;java -jar &#x2F;app.jar&quot;   28 minutes ago   Exited (129) 9 minutes ago                             flamboyant_napier</span><br><span class="line">1a0f932f54a9   app-image:1.0   &quot;java -jar &#x2F;app.jar&quot;   46 hours ago     Exited (143) 11 seconds ago                            suspicious_lovelace</span><br></pre></td></tr></table></figure>
</li>
<li><p>访问</p>
</li>
</ol>
<ul>
<li>通过 ifconfig eth0 的inet访问</li>
<li>通过 127.0.0.1 或 localhost 访问</li>
</ul>
<h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>需要开启映射</p>
<ol>
<li>将ip地址的对应的端口映射到宿主win10对应的端口<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># netsh interface portproxy add v4tov4 listenport&#x3D;[win10端口] listenaddress&#x3D;0.0.0.0 connectport&#x3D;[虚拟机的端口] connectaddress&#x3D;[虚拟机的ip]</span><br><span class="line">netsh interface portproxy add v4tov4 listenport&#x3D;8081 listenaddress&#x3D;0.0.0.0 connectport&#x3D;8081 connectaddress&#x3D;172.23.229.221</span><br></pre></td></tr></table></figure></li>
<li>检测是否设置成功<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netsh interface portproxy show all</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>查看docker使用情况和释放内存</title>
    <url>/2021/04/12/depth-docker-notes-3-%E6%9F%A5%E7%9C%8Bdocker%E4%BD%BF%E7%94%A8%E6%83%85%E5%86%B5%E5%92%8C%E9%87%8A%E6%94%BE%E5%86%85%E5%AD%98/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>可以使用docker system df查看磁盘使用情况，可以使用docker system prune释放空间。</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker容器时间与容器内应用日志时间不一致</title>
    <url>/2021/04/12/depth-docker-notes-5-Docker%E5%AE%B9%E5%99%A8%E6%97%B6%E9%97%B4%E4%B8%8E%E5%AE%B9%E5%99%A8%E5%86%85%E5%BA%94%E7%94%A8%E6%97%A5%E5%BF%97%E6%97%B6%E9%97%B4%E4%B8%8D%E4%B8%80%E8%87%B4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Docker容器时间与容器内应用日志时间不一致"><a href="#Docker容器时间与容器内应用日志时间不一致" class="headerlink" title="Docker容器时间与容器内应用日志时间不一致"></a>Docker容器时间与容器内应用日志时间不一致</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FROM java:8</span><br><span class="line">ADD &#x2F;target&#x2F;*.jar app.jar</span><br><span class="line">EXPOSE 8082</span><br><span class="line">#ENTRYPOINT [&quot;java&quot;,&quot;-jar&quot;,&quot;&#x2F;app.jar&quot;]</span><br><span class="line">ENTRYPOINT [&quot;java&quot;,&quot;-jar&quot;,&quot;-Duser.timezone&#x3D;GMT+08&quot;,&quot;&#x2F;app.jar&quot;]</span><br></pre></td></tr></table></figure>
<blockquote>
<p>使用 -Duser.timezone=GMT+08 参数即可保证一致</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker 容器时间与本地时间不一致的问题</title>
    <url>/2021/04/12/depth-docker-notes-4-Docker-%E5%AE%B9%E5%99%A8%E6%97%B6%E9%97%B4%E4%B8%8E%E6%9C%AC%E5%9C%B0%E6%97%B6%E9%97%B4%E4%B8%8D%E4%B8%80%E8%87%B4%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Docker-容器时间与本地时间不一致的问题"><a href="#Docker-容器时间与本地时间不一致的问题" class="headerlink" title="Docker 容器时间与本地时间不一致的问题"></a>Docker 容器时间与本地时间不一致的问题</h1><p>1.进入容器：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker exec -t -i c360cc412528 &#x2F;bin&#x2F;bash    &#x2F;&#x2F; c360cc412528 为容器id</span><br></pre></td></tr></table></figure></p>
<ol>
<li><p>在 /usr/share/zoneinfo 目录下找上海时区</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd  &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;Asia</span><br></pre></td></tr></table></figure>
</li>
<li><p>复制上海时区到 /etc 重命名 localtime 文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp -i Shanghai &#x2F;etc&#x2F;localtime</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>如得到提示 cp: overwrite ‘/etc/localtime’? ，则输入 yes 后按下回车键即可。</p>
<ol>
<li>完成，输入 Date 命令查看系统时间，得到如下结果：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root@52127e6f4c47:&#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;Asia# date</span><br><span class="line">Mon Aug 26 12:27:34 CST 2019</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>我们看到时间已经从 UTC 转为了 CST 时区，时间也已经显示正常，搞定。</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker ip地址0.0.0.0和127.0.0.1的区别</title>
    <url>/2021/04/12/depth-docker-notes-6-docker-ip%E5%9C%B0%E5%9D%800-0-0-0%E5%92%8C127-0-0-1%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="docker-ip地址0-0-0-0和127-0-0-1的区别"><a href="#docker-ip地址0-0-0-0和127-0-0-1的区别" class="headerlink" title="docker ip地址0.0.0.0和127.0.0.1的区别"></a>docker ip地址0.0.0.0和127.0.0.1的区别</h1><p><a href="https://blog.csdn.net/yz18931904/article/details/106440444" target="_blank" rel="noopener">https://blog.csdn.net/yz18931904/article/details/106440444</a></p>
<p>0.0.0.0，localhost和127.0.0.1的区别</p>
<p>在服务器中，0.0.0.0指的是本机上的所有IPV4地址，是真正表示“本网络中的本机”。 一般我们在服务端绑定端口的时候可以选择绑定到0.0.0.0，这样我的服务访问方就可以通过我的多个ip地址访问我的服务。<br>在路由中，0.0.0.0表示的是默认路由，即当路由表中没有找到完全匹配的路由的时候所对应的路由。<br>而127.0.0.1是本地回环地址中的一个，大多数windows和Linux电脑上都将localhost指向了127.0.0.1这个地址，相当于是本机地址。<br>localhost是一个域名，可以用它来获取运行在本机上的网络服务。<br>在大多数系统中，localhost被指向了IPV4的127.0.0.1和IPV6的::1。</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>depth</category>
        <category>docker</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>System has not been booted with systemd as init system (PID 1). Can‘t operate.问题解决方法</title>
    <url>/2021/04/12/tool-wsl-excp-System-has-not-been-booted-with-systemd-as-init-system-PID-1-Can%E2%80%98t-operate-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/qq_43685040/article/details/112056242" target="_blank" rel="noopener">System has not been booted with systemd as init system (PID 1). Can‘t operate.问题解决方法</a></p>
<p>#<br><img src="systemctl和system参考图.png" alt=""></p>
<h1 id="用window10下WSL使用Ubuntu来用Docker"><a href="#用window10下WSL使用Ubuntu来用Docker" class="headerlink" title="用window10下WSL使用Ubuntu来用Docker"></a>用window10下WSL使用Ubuntu来用Docker</h1><p>当我使用命令sudo systemctl start docker的时候报错：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">System has not been booted with systemd as init system (PID 1). Can&#39;t operate.</span><br></pre></td></tr></table></figure></p>
<h1 id="查了原因："><a href="#查了原因：" class="headerlink" title="查了原因："></a>查了原因：</h1><p>如果是一般的Linux操作系统，可能是因为Linux中没有使用systemd，想用systemd命令来管理Linux上的服务，因此会报错，很可能是使用的是经典的SysV init（sysvinit）系统。<br>但我这个是window10下WSL的Ubuntu，就会使SysV init而不是systemd。</p>
<h1 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h1><p>更换命令，用SysV init的命令代替systemd的<br><img src="Sysv init和Systemctl命令图.png" alt=""></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>wsl</category>
        <category>excp</category>
      </categories>
      <tags>
        <tag>wsl</tag>
      </tags>
  </entry>
  <entry>
    <title>在Windows 10下打开带管理员权限的PowerShell的5种方式</title>
    <url>/2021/04/12/tool-wsl-wsl-2-2-%E5%9C%A8Windows-10%E4%B8%8B%E6%89%93%E5%BC%80%E5%B8%A6%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E7%9A%84PowerShell%E7%9A%845%E7%A7%8D%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/kenzo2017/article/details/79518540" target="_blank" rel="noopener">在Windows 10下打开带管理员权限的PowerShell的5种方式</a></p>
<p>通过cmd将powerShell转为root启动，升级权限:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Start-Process powershell -Verb runAs</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>wsl</category>
        <category>wsl2</category>
      </categories>
      <tags>
        <tag>wsl2</tag>
      </tags>
  </entry>
  <entry>
    <title>xshell连接wsl2</title>
    <url>/2021/04/12/tool-wsl-wsl-2-3-xshell%E8%BF%9E%E6%8E%A5wsl2/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/weixin_34789114/article/details/114443658" target="_blank" rel="noopener">记录一次使用ssh成功连接wsl2的Ubuntu</a><br><a href="http://blog.chinaunix.net/uid-26168435-id-5732463.html" target="_blank" rel="noopener">启动sshd时，报“Could not load host key: /etc/ssh/ssh_host_rsa_key”错</a></p>
<blockquote>
<p>首先可使用 sudo service ssh status 查看ssh是否启用</p>
</blockquote>
<h1 id="检查使用版本"><a href="#检查使用版本" class="headerlink" title="检查使用版本"></a>检查使用版本</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Users\Fa&gt; wsl -l -v</span><br><span class="line">  NAME            STATE           VERSION</span><br><span class="line">* Ubuntu-20.04    Running         2</span><br></pre></td></tr></table></figure>
<h1 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h1><ol>
<li>修改sshd_config配置<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;ssh&#x2F;sshd_config</span><br></pre></td></tr></table></figure>
修改内容如下：  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Port &#x3D; 22 # 去掉#，代表启用端口号22</span><br><span class="line">ListenAddress 0.0.0.0 # 去掉#，代表监听所有地址</span><br><span class="line">PasswordAuthentication yes，# 将no改成yes，用于使用账号密码的登录</span><br><span class="line"></span><br><span class="line">PermitRootLogin prohibit-password # 去掉#，并将值改成yes，则支持root用户密码登录了（我是直接去掉#）</span><br><span class="line"># vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config 修改 permitrootlogin yes，另外一种说法（我是直接去掉#）</span><br></pre></td></tr></table></figure></li>
<li>重启ssh服务<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo service ssh restart</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="配置ssh过程中的问题"><a href="#配置ssh过程中的问题" class="headerlink" title="配置ssh过程中的问题"></a>配置ssh过程中的问题</h1><ol>
<li>sshd: no hostkeys available – exiting<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PS: 如果重启ssh服务出现</span><br><span class="line">sshd: no hostkeys available -- exiting</span><br><span class="line">则执行如下操作:</span><br><span class="line">1. ssh-keygen -A</span><br><span class="line">2. &#x2F;etc&#x2F;init.d&#x2F;ssh start</span><br></pre></td></tr></table></figure></li>
<li>Could not load host key: /etc/ssh/ssh_host_rsa_key<ul>
<li>检查是否所有配置齐全<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@aefe8007a17d ~]# ll &#x2F;etc&#x2F;ssh&#x2F;</span><br><span class="line">total 252</span><br><span class="line">-rw-r--r-- 1 root root 242153 Mar 21 22:18 moduli</span><br><span class="line">-rw-r--r-- 1 root root 2208 Mar 21 22:18 ssh_config</span><br><span class="line">-rw------- 1 root root 4361 Mar 21 22:18 sshd_config</span><br></pre></td></tr></table></figure></li>
<li>重新生成主机密钥文件：</li>
</ul>
</li>
<li><p>生成rsa_key (-t表示生成的密钥所使用的加密类型；-f项后接要生成的密钥文件名)；</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@aefe8007a17d ~]# ssh-keygen -t rsa -f &#x2F;etc&#x2F;ssh&#x2F;ssh_host_rsa_key</span><br><span class="line">Generating public&#x2F;private rsa key pair.</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved in &#x2F;etc&#x2F;ssh&#x2F;ssh_host_rsa_key.</span><br><span class="line">Your public key has been saved in &#x2F;etc&#x2F;ssh&#x2F;ssh_host_rsa_key.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">5e:2d:19:51:b1:e3:e0:60:65:53:e4:14:f8:d8:38:af root@aefe8007a17d</span><br><span class="line">The key&#39;s randomart image is:</span><br><span class="line">+--[ RSA 2048]----+</span><br><span class="line">| &#x3D;&#x3D;Bo |</span><br><span class="line">| o.&#x3D; . |</span><br><span class="line">| o o&#x3D;+ |</span><br><span class="line">| . o+*o. |</span><br><span class="line">| S &#x3D;oo |</span><br><span class="line">| . . .. |</span><br><span class="line">| . . |</span><br><span class="line">| E |</span><br><span class="line">| |</span><br><span class="line">+-----------------+</span><br><span class="line">[root@aefe8007a17d ~]# ssh-keygen -t ecdsa -f &#x2F;etc&#x2F;ssh&#x2F;ssh_host_ecdsa_key</span><br></pre></td></tr></table></figure>
</li>
<li><p>生成ecdsa_key；</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@aefe8007a17d ~]# ssh-keygen -t ecdsa -f &#x2F;etc&#x2F;ssh&#x2F;ssh_host_ecdsa_key</span><br></pre></td></tr></table></figure>
</li>
<li><p>生成ed25519_key。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@aefe8007a17d ~]# ssh-keygen -t ed25519 -f &#x2F;etc&#x2F;ssh&#x2F;ssh_host_ed25519_key</span><br></pre></td></tr></table></figure>
<p>再次检查密钥文件是否存在且合规，可以看到已生成相应主机密钥文件(实际上主机密钥文件为私钥，.pub文件为公钥)：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@aefe8007a17d ~]# ll &#x2F;etc&#x2F;ssh&#x2F;</span><br><span class="line">total 276</span><br><span class="line">-rw-r--r-- 1 root root 242153 Mar 21 22:18 moduli</span><br><span class="line">-rw-r--r-- 1 root root 2208 Mar 21 22:18 ssh_config</span><br><span class="line">-rw------- 1 root root 227 May 22 16:48 ssh_host_ecdsa_key</span><br><span class="line">-rw-r--r-- 1 root root 179 May 22 16:48 ssh_host_ecdsa_key.pub</span><br><span class="line">-rw------- 1 root root 411 May 22 16:48 ssh_host_ed25519_key</span><br><span class="line">-rw-r--r-- 1 root root 99 May 22 16:48 ssh_host_ed25519_key.pub</span><br><span class="line">-rw------- 1 root root 1679 May 22 16:48 ssh_host_rsa_key</span><br><span class="line">-rw-r--r-- 1 root root 399 May 22 16:48 ssh_host_rsa_key.pub</span><br><span class="line">-rw------- 1 root root 4361 Mar 21 22:18 sshd_config</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>此时客户端可ssh连接上sshd服务器端：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# ssh 172.17.0.2</span><br><span class="line">The authenticity of host &#39;172.17.0.2 (172.17.0.2)&#39; can&#39;t be established.</span><br><span class="line">ECDSA key fingerprint is 37:2a:69:46:c4:bd:92:b2:43:b4:cc:42:41:8e:12:2e.</span><br><span class="line">Are you sure you want to continue connecting (yes&#x2F;no)?</span><br></pre></td></tr></table></figure></p>
<h1 id="情况2"><a href="#情况2" class="headerlink" title="情况2"></a>情况2</h1><ol>
<li>配置正常</li>
<li>ssh重启正常</li>
<li>执行如下：  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo ssh-keygen -A</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;ssh start</span><br></pre></td></tr></table></figure></li>
<li>重新通过finalShell连接成功</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>wsl</category>
        <category>wsl2</category>
      </categories>
      <tags>
        <tag>wsl2</tag>
      </tags>
  </entry>
  <entry>
    <title>WSL1 升级为 WSL2</title>
    <url>/2021/04/12/tool-wsl-wsl-2-1-WSL1-%E5%8D%87%E7%BA%A7%E4%B8%BA-WSL2/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.cnblogs.com/stulzq/p/13926936.html" target="_blank" rel="noopener">WSL1 升级为 WSL2</a></p>
<h1 id="WSL2-是-WSL-1-的升级版，带来的主要优势："><a href="#WSL2-是-WSL-1-的升级版，带来的主要优势：" class="headerlink" title="WSL2 是 WSL 1 的升级版，带来的主要优势："></a>WSL2 是 WSL 1 的升级版，带来的主要优势：</h1><ul>
<li>提高文件系统性能</li>
<li>支持完全的系统调用兼容性<br>WSL2 使用了 hyper-v 虚拟化技术，它就是一个你感知不到的虚拟机（VM），比以前的版本性能更高。举个栗子，我在WSL里面安装 nodejs, 采用源码编译方式安装，在 WSL1 下整整编译了100分钟，实在是太慢了。</li>
</ul>
<p>更纤细的介绍请参阅官方文档：<a href="https://docs.microsoft.com/zh-cn/windows/wsl/compare-versions?WT.mc_id=DT-MVP-5003133" target="_blank" rel="noopener">比较 WSL 1 和 WSL 2</a></p>
<p>执行命令 [wsl -l -v] 可以看到WSL版本号是 1，需要执行升级，才能到2</p>
<ol>
<li><p>启用虚拟机功能<br>使用 PowerShell 以管理员身份运行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dism.exe &#x2F;online &#x2F;enable-feature &#x2F;featurename:VirtualMachinePlatform &#x2F;all &#x2F;norestart</span><br></pre></td></tr></table></figure>
<blockquote>
<p>然后重启电脑</p>
</blockquote>
</li>
<li><p>下载 Linux 内核更新包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x64: https:&#x2F;&#x2F;wslstorestorage.blob.core.windows.net&#x2F;wslblob&#x2F;wsl_update_x64.msi</span><br><span class="line">arm64: https:&#x2F;&#x2F;wslstorestorage.blob.core.windows.net&#x2F;wslblob&#x2F;wsl_update_arm64.msi</span><br></pre></td></tr></table></figure>
</li>
<li><p>设置分发版版本<br>执行命令：[wsl –set-version &lt;分发版名称&gt; &lt;版本号&gt;]<br>如：将 Ubuntu18.04 设置为WSL2的命令为 [wsl –set-version Ubuntu-18.04 2]<br>这一步比较耗时，执行完成后通过命令 [wsl -l -v] 来查询升级是否成功<br><img src="是否升级成功图.png" alt=""></p>
</li>
</ol>
<p>使用分享：<br>WSL2 是基于虚拟机的，所以可以在后台运行各种任务，比如 Docker 等等，但是带来的相应问题就是会占用一部分内存，<br>使用 [wsl –shutdown &lt;分发版名称&gt;] 可以再不使用的时候停止它，以节约资源</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>wsl</category>
        <category>wsl2</category>
      </categories>
      <tags>
        <tag>wsl2</tag>
      </tags>
  </entry>
  <entry>
    <title>wsl-1安装docker</title>
    <url>/2021/04/12/tool-wsl-wsl-1-1-wsl-1%E5%AE%89%E8%A3%85docker/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="WSL1中安装Docker"><a href="#WSL1中安装Docker" class="headerlink" title="WSL1中安装Docker"></a>WSL1中安装Docker</h1><p><a href="https://www.cnblogs.com/talentzemin/p/12544273.html" target="_blank" rel="noopener">WSL1中安装Docker</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># step 0: clear</span><br><span class="line"># sudo apt-get remove docker docker-engine docker-ce docker.io</span><br><span class="line"></span><br><span class="line"># step 1: 安装必要的一些系统工具sudo apt-get update</span><br><span class="line">#sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common</span><br><span class="line"># step 2: 安装GPG证书</span><br><span class="line"># curl -fsSL https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu&#x2F;gpg | sudo apt-key add -    &#x2F;&#x2F;官方</span><br><span class="line"># curl -fsSL https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;ubuntu&#x2F;gpg | sudo apt-key add -   &#x2F;&#x2F;阿里云</span><br><span class="line"></span><br><span class="line"># Step 3: 写入软件源信息</span><br><span class="line"># sudo add-apt-repository &quot;deb [arch&#x3D;amd64] https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu $(lsb_release -cs) stable&quot;  &#x2F;&#x2F;官方</span><br><span class="line"># sudo add-apt-repository &quot;deb [arch&#x3D;amd64] https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;ubuntu $(lsb_release -cs) stable&quot;  &#x2F;&#x2F;阿里云</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Step 4: 更新并安装Docker-CE</span><br><span class="line"># sudo apt-get -y update</span><br><span class="line"># sudo apt-get -y install docker-ce</span><br><span class="line"># 此处默认安装的是docker最新版本，但由于WSL的问题，可能会存在问题，会在拉取镜像的时候出现错误：Error response from daemon: OCI runtime create failed context canceled</span><br><span class="line"># 所以我们安装指定的docker版本，见4.1，我安装的是18.03.1-ce</span><br><span class="line"></span><br><span class="line"># Step 4.1 安装指定版本的Docker-CE:</span><br><span class="line"># Step 4.11: 查找Docker-CE的版本:</span><br><span class="line"># apt-cache madison docker-ce</span><br><span class="line">#   docker-ce | 17.03.1~ce-0~ubuntu-xenial | https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;ubuntu xenial&#x2F;stable amd64 Packages</span><br><span class="line">#   docker-ce | 17.03.0~ce-0~ubuntu-xenial | https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;ubuntu xenial&#x2F;stable amd64 Packages</span><br><span class="line"># Step 4.1.2: 安装指定版本的Docker-CE: (VERSION例如上面的17.03.1~ce-0~ubuntu-xenial)</span><br><span class="line"># sudo apt-get -y install docker-ce&#x3D;[VERSION]</span><br><span class="line"></span><br><span class="line"># Step 5: 查看docker的版本</span><br><span class="line"># docker -v</span><br><span class="line"></span><br><span class="line"># Step 6: 查看docker的启动状态</span><br><span class="line"># sudo service docker status</span><br><span class="line"></span><br><span class="line"># Step 7：启动docker</span><br><span class="line"># sudo service docker start  &#x2F;&#x2F;备注：WSL目前是WSL1，所以linux的发行版本部分命令还不能使用，比如systemctl命令。此处启动docker可以使用：sudo systemctl start docker</span><br><span class="line"></span><br><span class="line"># Step 8：拉取hello-world镜像，验证docker是否正常</span><br><span class="line"># docker run hello-world</span><br><span class="line"># 输出：</span><br><span class="line"># Hello from Docker!</span><br><span class="line"># This message shows that your installation appears to be working correctly.</span><br><span class="line"># ......</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>wsl</category>
        <category>wsl1</category>
      </categories>
      <tags>
        <tag>wsl1</tag>
      </tags>
  </entry>
  <entry>
    <title>wsl2中启动springboot程序</title>
    <url>/2021/04/12/tool-wsl-wsl-2-5-wsl2%E4%B8%AD%E5%90%AF%E5%8A%A8springboot%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="wsl2中启动springboot程序"><a href="#wsl2中启动springboot程序" class="headerlink" title="wsl2中启动springboot程序"></a>wsl2中启动springboot程序</h1><ol>
<li>安装jdk8<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install openjdk-8-jre-headless</span><br></pre></td></tr></table></figure></li>
<li>下载(wget)或拷贝(cp)springboot.jar</li>
<li>后台指定编码和端口运行<br>java -Dfile.encoding=utf-8 -jar xxx.jar –server.port=8080 &amp;</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>wsl</category>
        <category>wsl2</category>
      </categories>
      <tags>
        <tag>wsl2</tag>
      </tags>
  </entry>
  <entry>
    <title>查询java进程</title>
    <url>/2021/04/12/tool-wsl-wsl-2-6-%E6%9F%A5%E8%AF%A2java%E8%BF%9B%E7%A8%8B/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>ps -ef | grep java</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>wsl</category>
        <category>wsl2</category>
      </categories>
      <tags>
        <tag>wsl2</tag>
      </tags>
  </entry>
  <entry>
    <title>在window上找到wsl2的文件夹目录</title>
    <url>/2021/04/12/tool-wsl-wsl-2-7-%E5%9C%A8window%E4%B8%8A%E6%89%BE%E5%88%B0wsl2%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9B%AE%E5%BD%95/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="在window上找到wsl2的文件夹目录"><a href="#在window上找到wsl2的文件夹目录" class="headerlink" title="在window上找到wsl2的文件夹目录"></a>在window上找到wsl2的文件夹目录</h1><p>在文件窗口运行 \wsl$</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>wsl</category>
        <category>wsl2</category>
      </categories>
      <tags>
        <tag>wsl2</tag>
      </tags>
  </entry>
  <entry>
    <title>chown命令</title>
    <url>/2021/04/12/tool-wsl-wsl-2-4-chown%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.cnblogs.com/qiyebao/p/4320440.html" target="_blank" rel="noopener">chown参考</a></p>
<h1 id="改变指定目录以及其子目录下的所有文件的拥有者和群组"><a href="#改变指定目录以及其子目录下的所有文件的拥有者和群组" class="headerlink" title="改变指定目录以及其子目录下的所有文件的拥有者和群组"></a>改变指定目录以及其子目录下的所有文件的拥有者和群组</h1><p>chown -R -v root:mail test6</p>
<h1 id="改变文件群组"><a href="#改变文件群组" class="headerlink" title="改变文件群组"></a>改变文件群组</h1><p>chown :mail log2012.log</p>
<h1 id="改变文件拥有者和群组"><a href="#改变文件拥有者和群组" class="headerlink" title="改变文件拥有者和群组"></a>改变文件拥有者和群组</h1><p>chown root: log2012.log</p>
<h1 id="改变拥有者和群组"><a href="#改变拥有者和群组" class="headerlink" title="改变拥有者和群组"></a>改变拥有者和群组</h1><p>chown mail:mail log2012.log</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>wsl</category>
        <category>wsl2</category>
      </categories>
      <tags>
        <tag>wsl2</tag>
      </tags>
  </entry>
  <entry>
    <title>使用cp文件复制到wsl</title>
    <url>/2021/04/12/tool-wsl-wsl%E5%92%8Cwin%E7%9A%84%E6%96%87%E4%BB%B6%E4%BA%92%E8%AE%BF-2-%E4%BD%BF%E7%94%A8cp%E6%96%87%E4%BB%B6%E5%A4%8D%E5%88%B6%E5%88%B0wsl/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>linux复制不是copy，而是cp</p>
<p>sudo cp /mnt/e/G-工作文档/doc-cic/G-公共技术/arthas/arthas-tunnel-server-3.5.2-fatjar.jar /home/arthas/arthas-tunnel-server.jar<br>sudo cp /mnt/e/G-工作文档/doc-cic/G-公共技术/arthas/entrypoint.sh /home/arthas/entrypoint.sh<br>sudo cp /mnt/e/G-工作文档/doc-cic/G-公共技术/arthas/Arthas-Dockerfile /home/arthas/Dockerfile</p>
<h1 id="复制invoice-war"><a href="#复制invoice-war" class="headerlink" title="复制invoice war"></a>复制invoice war</h1><p>sudo cp /mnt/e/G-工作文档/doc-cic/F-new-发票中心/第三方税控平台文档/1.32生产环境/前置应用_V1.32程序包/程序包/einvoicejr.war /home/war/einvoicejr.war</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>wsl</category>
        <category>wsl</category>
      </categories>
      <tags>
        <tag>wsl</tag>
      </tags>
  </entry>
  <entry>
    <title>win10和wsl的文件互访</title>
    <url>/2021/04/12/tool-wsl-wsl%E5%92%8Cwin%E7%9A%84%E6%96%87%E4%BB%B6%E4%BA%92%E8%AE%BF-1-win10%E5%92%8Cwsl%E7%9A%84%E6%96%87%E4%BB%B6%E4%BA%92%E8%AE%BF/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://www.cnblogs.com/InitRain/p/12361617.html" target="_blank" rel="noopener">Windows10 与 WSL（Ubuntu）的文件互访</a></p>
<p>从WSL访问win10的文件</p>
<blockquote>
<p>cd /mnt</p>
</blockquote>
<p>从win10访问WSL的文件</p>
<p>打开Ubuntu</p>
<blockquote>
<p>explorer.exe .</p>
</blockquote>
<p>（后面的点不要漏掉）</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>tool</category>
        <category>wsl</category>
        <category>wsl</category>
      </categories>
      <tags>
        <tag>wsl</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis--无底洞--含义、原因、解决方案</title>
    <url>/2021/03/13/redis-interview-Redis-%E6%97%A0%E5%BA%95%E6%B4%9E-%E5%90%AB%E4%B9%89%E3%80%81%E5%8E%9F%E5%9B%A0%E3%80%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/feiying0canglang/article/details/122836824" target="_blank" rel="noopener">Redis–无底洞–含义/原因/解决方案</a></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>redis</category>
        <category>interview</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>next6上一页下一页错误显示代码</title>
    <url>/2021/03/05/hexo-%E5%BC%82%E5%B8%B8-hexo%E7%AC%94%E8%AE%B0-next6%E9%94%99%E8%AF%AF%E4%B8%8A%E4%B8%80%E9%A1%B5%E4%B8%8B%E4%B8%80%E9%A1%B5%E9%94%99%E8%AF%AF%E6%98%BE%E7%A4%BA%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/weixin_45748734/article/details/106042522" target="_blank" rel="noopener">关于Hexo,Next主题的‘下一页’、‘上一页’按钮错误显示为html代码 <i class="fa fa-angle-right"></i>的解决方法</a></p>
<h1 id="修改方法"><a href="#修改方法" class="headerlink" title="修改方法"></a>修改方法</h1><p>themes/next6/layout/_partials/pagination.swig<br>由：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if page.prev or page.next %&#125;</span><br><span class="line">  &lt;nav class&#x3D;&quot;pagination&quot;&gt;</span><br><span class="line">    &#123;&#123;</span><br><span class="line">      paginator(&#123;</span><br><span class="line">        prev_text: &#39;&lt;i class&#x3D;&quot;fa fa-angle-left&quot;&gt;&lt;&#x2F;i&gt;&#39;,</span><br><span class="line">        next_text: &#39;&lt;i class&#x3D;&quot;fa fa-angle-right&quot;&gt;&lt;&#x2F;i&gt;&#39;,</span><br><span class="line">        mid_size: 1</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;&#125;</span><br><span class="line">  &lt;&#x2F;nav&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><br>改为：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if page.prev or page.next %&#125;</span><br><span class="line">  &lt;nav class&#x3D;&quot;pagination&quot;&gt;</span><br><span class="line">    &#123;&#123;</span><br><span class="line">      paginator(&#123;</span><br><span class="line">        prev_text: &#39;上一页&#39;,</span><br><span class="line">        next_text: &#39;下一页&#39;,</span><br><span class="line">        mid_size: 1</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;&#125;</span><br><span class="line">  &lt;&#x2F;nav&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>异常</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>next6导航目录出现%20</title>
    <url>/2021/03/04/hexo-%E5%BC%82%E5%B8%B8-hexo%E7%AC%94%E8%AE%B0-next6%E5%AF%BC%E8%88%AA%E7%9B%AE%E5%BD%95%E5%87%BA%E7%8E%B0-20/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/qq_41170983/article/details/107229614" target="_blank" rel="noopener">hexo中next主题下创建标签问题 Cannot GET /tags/%20/</a></p>
<p><a href="https://www.cnblogs.com/kobe8/p/4030396.html" target="_blank" rel="noopener">URL编码表%20Base64编码表%20HTTP消息含义</a></p>
<h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>删除导航配置中的空格:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F;|| home</span><br><span class="line">  categories: &#x2F;categories&#x2F;|| th</span><br><span class="line">  tags: &#x2F;tags&#x2F;|| tags</span><br><span class="line">  archives: &#x2F;archives&#x2F;|| archive</span><br><span class="line">  #schedule: &#x2F;schedule&#x2F;|| calendar</span><br><span class="line">  #sitemap: &#x2F;sitemap.xml|| sitemap</span><br><span class="line">  design: &#x2F;design&#x2F;|| tags</span><br><span class="line">  about: &#x2F;about&#x2F;|| user</span><br><span class="line">  commonweal: &#x2F;404&#x2F; || heartbeat</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>删除 /categories/ 和 || th 之间的空格</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>hexo</category>
        <category>异常</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>git merge合并部分文件或部分目录代码到master</title>
    <url>/2020/01/02/git-%E7%AC%94%E8%AE%B0-git-merge%E5%90%88%E5%B9%B6-%E9%83%A8%E5%88%86%E6%96%87%E4%BB%B6-%E6%88%96-%E9%83%A8%E5%88%86%E7%9B%AE%E5%BD%95-%E4%BB%A3%E7%A0%81%E5%88%B0master/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>git合并部分文件到其他分支：<a href="https://blog.csdn.net/zhichaosong/article/details/102833858" target="_blank" rel="noopener">https://blog.csdn.net/zhichaosong/article/details/102833858</a></strong></li>
</ul>
<hr>
<p>branch A 分支上有 a、b 、c、d、e 这 5 个文件与 branch B 分支不同，现在我们只想从 A 到 B 合并 a、b 两个文件：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout B			&#x2F;&#x2F; 首先切换到 B 分支  </span><br><span class="line">git checktou A a b		&#x2F;&#x2F; 然后从 A 中抽取 a、b 两个选定的文件</span><br></pre></td></tr></table></figure></p>
<hr>
<ul>
<li><strong>git合并部分目录到其他分支：<a href="https://www.cnblogs.com/amyleell/p/10919714.html" target="_blank" rel="noopener">https://www.cnblogs.com/amyleell/p/10919714.html</a></strong></li>
</ul>
<hr>
<ol>
<li><p>提交当前分支的内容  </p>
</li>
<li><p>切换到master分支  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout master</span><br></pre></td></tr></table></figure>
</li>
<li><p>拉取最新的代码  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure>
</li>
<li><p>合并目录  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout 分支名 目录&#x2F;**  </span><br><span class="line">git checkout dev check&#x2F;**  </span><br><span class="line">(可能目录下还有多个目录所以用&#x2F;**   不用&#x2F;*)</span><br></pre></td></tr></table></figure>
</li>
<li><p>提交当前master的改变的内容到远程分支  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add *  </span><br><span class="line">git commit -m &quot;merge&quot;  </span><br><span class="line">git push</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>The current branch practicing has no upstream branch</title>
    <url>/2019/11/07/git-%E5%BC%82%E5%B8%B8-The-current-branch-practicing-has-no-upstream-branch/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h1><p>fatal: The current branch practicing has no upstream branch.<br>To push the current branch and set the remote as upstream, use</p>
<pre><code>git push --set-upstream origin practicing
</code></pre><h1 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h1><p>git push –set-upstream origin practicing</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>异常</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git clone --mirror镜像克隆</title>
    <url>/2019/11/07/git-%E7%AC%94%E8%AE%B0-git-clone-mirror%E9%95%9C%E5%83%8F%E5%85%8B%E9%9A%86/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<hr>
<h1 id="git仓库镜像克隆（仓库迁移）"><a href="#git仓库镜像克隆（仓库迁移）" class="headerlink" title="git仓库镜像克隆（仓库迁移）"></a>git仓库镜像克隆（仓库迁移）</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. git clone --mirror  阿里云代码仓库URL</span><br><span class="line">2. cd xxx.git</span><br><span class="line">3. git remote add NEW-REMOTE  专有云代码仓库URL</span><br><span class="line">4. git push NEW-REMOTE --mirror</span><br></pre></td></tr></table></figure>
<h2 id="样例："><a href="#样例：" class="headerlink" title="样例："></a>样例：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. git clone --mirror xxx@code.yyy.com:仓库组&#x2F;仓库名.git</span><br><span class="line">2. cd rpc-myapp-server.git</span><br><span class="line">3. git remote add NEW-REMOTE uuu@code.vvv.com:仓库组&#x2F;仓库名.git</span><br><span class="line">4. git push NEW-REMOTE --mirror</span><br></pre></td></tr></table></figure>
<h1 id="git克隆镜像更新（update）"><a href="#git克隆镜像更新（update）" class="headerlink" title="git克隆镜像更新（update）"></a>git克隆镜像更新（update）</h1><ol>
<li>cd xxx.git</li>
<li>git remote update</li>
<li>git push NEW-REMOTE –mirror</li>
</ol>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>镜像克隆可迁移仓库所有的git分支及提交记录等操作活动</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git cherry-pick与rebase</title>
    <url>/2019/11/07/git-%E7%AC%94%E8%AE%B0-git-cherry-pick%E4%B8%8Erebase/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>git cherry-pick与rebase：<a href="https://www.jianshu.com/p/723ed1326964" target="_blank" rel="noopener">https://www.jianshu.com/p/723ed1326964</a></strong></li>
</ul>
<hr>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git checkout -b branchName</title>
    <url>/2019/09/18/git-%E7%AC%94%E8%AE%B0-git-checkout-b-branchName/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="checkout详情"><a href="#checkout详情" class="headerlink" title="checkout详情"></a>checkout详情</h1><p>git checkout -b branchName<br>等价于<br>创建新分支：git branch branchName<br>切换到新分支：git checkout branchName</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git config --list退出案件</title>
    <url>/2019/09/16/git-%E7%AC%94%E8%AE%B0-git-config-list%E9%80%80%E5%87%BA%E6%A1%88%E4%BB%B6/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="解决输入-git-config-–list-退出的问题"><a href="#解决输入-git-config-–list-退出的问题" class="headerlink" title="解决输入 git config –list 退出的问题"></a>解决输入 git config –list 退出的问题</h1><p>输入git config –list 最后出现一个 (END) ，要等一会才能退出来，这个怎么解决?</p>
<h1 id="原因：-git日志过多最后显示end无法输入命令，打印的信息是全部用户配置的，表示可以用了。"><a href="#原因：-git日志过多最后显示end无法输入命令，打印的信息是全部用户配置的，表示可以用了。" class="headerlink" title="原因： git日志过多最后显示end无法输入命令，打印的信息是全部用户配置的，表示可以用了。"></a>原因： git日志过多最后显示end无法输入命令，打印的信息是全部用户配置的，表示可以用了。</h1><pre><code>直接按 q (或+Enter) ， 即可退出；
    或
退出这个界面重新进入即可。
</code></pre><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git报错锦集</title>
    <url>/2019/08/23/git-%E5%BC%82%E5%B8%B8-git%E6%8A%A5%E9%94%99%E9%94%A6%E9%9B%86/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>#提交github操作如下：<br>echo “# spring-practing” &gt;&gt; README.md<br>git init<br>git add README.md<br>git commit -m “first commit”<br>git remote add origin <a href="https://github.com/YaleZhangdy/spring-practing.git" target="_blank" rel="noopener">https://github.com/YaleZhangdy/spring-practing.git</a><br>git push -u origin master</p>
<p>#设置user和email如下：<br>$ git config –global user.name author #将用户名设为author<br>$ git config –global user.email author@corpmail.com #将用户邮箱设为author@corpmail.com</p>
<p>#git查看commit提交记录详情（只能查看git commit记录，无法查看git add记录）<br>git log 查看所有的commit提交记录<br>git show 查看提交的详情，之后的git show都是基于commit hashID输出的<br>查看指定commit hashID的所有修改：<br>git show commitId<br>3.查看某次commit中具体某个文件的修改：<br>git show commitId fileName</p>
<p>#git push origin与git push -u origin master的区别<br>$ git push origin<br>上面命令表示，将当前分支推送到origin主机的对应分支。<br>如果当前分支只有一个追踪分支，那么主机名都可以省略。<br>$ git push 如果当前分支与多个主机存在追踪关系，那么这个时候-u选项会指定一个默认主机，这样后面就可以不加任何参数使用git push。<br>$ git push -u origin master 上面命令将本地的master分支推送到origin主机，同时指定origin为默认主机，后面就可以不加任何参数使用git push了。<br>不带任何参数的git push，默认只推送当前分支，这叫做simple方式。此外，还有一种matching方式，会推送所有有对应的远程分支的本地分支。Git 2.0版本之前，默认采用matching方法，现在改为默认采用simple方式。</p>
<p>报错如下：<br>1、执行git pull –rebase origin master<br>报错：fatal: Updating an unborn branch with changes added to the index.<br>原因：前面有git add . ，添加文件文件夹到提交目录，此部分需要git commit<br>解决：执行git commit -m “first commit” ，提交git add数据。</p>
<p>2、执行git push -u origin master<br>报错：failed to push some refs to ‘<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a><br>原因：主要原因是github中的README.md文件不在本地代码目录中，就是文件不一致<br>解决：可以通过如下命令进行代码合并【注：pull=fetch+merge]   git pull –rebase origin master</p>
<p>#git push报错： The current branch practicing has no upstream branch.<br>To push the current branch and set the remote as upstream, use<br>git push –set-upstream origin developer<br>标黑的这一部分是重点，这是解决办法，只要执行了这一行代码就解决问题了。<br>出现这个问题的原因可能是(不太确认)：我连接了多个Git账号，当我在当前账号下向服务器端推送代码的时候，出现了身份验证的问题而导致的问题。</p>
<p>#git push报错：fatal: Could not read from remote repository<br>报错详情：<br>E:\development-workspace\myGitHub\spring-practing&gt;git push<br>Connection reset by 13.250.177.223 port 22<br>fatal: Could not read from remote repository.</p>
<p>Please make sure you have the correct access rights<br>and the repository exists.<br>解决办法： <a href="https://blog.csdn.net/Leolu007/article/details/79129446" target="_blank" rel="noopener">https://blog.csdn.net/Leolu007/article/details/79129446</a><br>查看远端地址 git remote –v<br>查看配置 git config –list<br>查看状态 git status<br>发现有文件未提交导致<br>此时将文件添加 git add .<br>再git commit -m “提交”<br>再git push </p>
<p>#git pull 或 git pull master 或 git pull origin/master<br>报错详情：<br>$ git pull master<br>fatal: ‘master’ does not appear to be a git repository<br>fatal: Could not read from remote repository.</p>
<p>Please make sure you have the correct access rights<br>and the repository exists.<br>解决办法：<br>0、未添加开发者权限（access rights：访问权限），或其他权限不满足。2020-01-21 已验证<br>1、添加本地与远程分支地址映射。 <a href="https://www.cnblogs.com/dingxu/p/9032014.html" target="_blank" rel="noopener"> git remote add origin 地址</a><br>2、强制覆盖本地master分支。<a href="https://blog.csdn.net/10km/article/details/84669270" target="_blank" rel="noopener">git pull –force origin master:master</a><br>3、删掉本地代码、关闭IDEA，使用 git fetch master</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>异常</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git merge --no-ff参数详解</title>
    <url>/2019/08/16/git-%E7%AC%94%E8%AE%B0-git-merge-no-ff%E5%8F%82%E6%95%B0%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h1><ol>
<li>使用fast forword，master分支上会显示两次提交记录 A，B。<br>使用no fast forword, master分支上只会显示 C 一次提交记录。<br>no fast forword时master分支提交点更少（如需master上提交记录减少，也就是git commit记录减少，可使用–squash参数）。</li>
<li>使用git reset –hard HEAD^回退上一个版本时，<br>fast forword可以回退到branchA分支的某次提交点，<br>而no fast forword只能回退到master分支merge之前的提交点。</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git check-ignore</title>
    <url>/2019/06/28/git-%E7%AC%94%E8%AE%B0-git-check-ignore/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h1><p>可能是.gitignore写得有问题，需要找出来到底哪个规则写错了，可以用git check-ignore命令检查：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ gitcheck-ignore -v App.class</span><br><span class="line"></span><br><span class="line">.gitignore:3:*.class   App.class</span><br></pre></td></tr></table></figure>
<p>Git会告诉我们，.gitignore的第3行规则忽略了该文件，于是我们就可以知道应该修订哪个规则。</p>
<h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><ul>
<li>忽略某些文件时，需要编写.gitignore；</li>
<li>.gitignore文件本身要放到版本库里，并且可以对.gitignore做版本管理！</li>
</ul>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Microsoft Visual C++ 14.0 or greater is required.</title>
    <url>/2019/06/28/python-excep-Microsoft-Visual-C-14-0-or-greater-is-required/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>Microsoft Visual C++ 14.0 is required解决方法：<a href="https://zhuanlan.zhihu.com/p/126669852" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/126669852</a></strong></li>
</ul>
<hr>
<h1 id="error-Microsoft-Visual-C-14-0-or-greater-is-required"><a href="#error-Microsoft-Visual-C-14-0-or-greater-is-required" class="headerlink" title="error: Microsoft Visual C++ 14.0 or greater is required."></a>error: Microsoft Visual C++ 14.0 or greater is required.</h1><h4 id="安装失败，提示如下："><a href="#安装失败，提示如下：" class="headerlink" title="安装失败，提示如下："></a>安装失败，提示如下：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Microsoft Visual C++ 14.0 or greater is required</span><br></pre></td></tr></table></figure>
<p>通过手动安装build tool验证通过，知乎上已经有大神分享过具体的解决操作方法，工具<a href="https://pan.baidu.com/s/1ytKIVSBXLMQhrXleC_I4dA" target="_blank" rel="noopener">百度网盘地址https://pan.baidu.com/s/1ytK</a> 提取码： 8scp<br>若分享链接已失效，可联系我给予分享</p>
<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>下载到本地后，电脑文件会显示一个镜像<br><img src="images/C++ 14.0镜像路径.png" alt=""><br>进入文件夹后直接点击安装即可<br><img src="images/安装文件.png" alt=""><br>若有需要选择文件时，需要根据本地电脑自行选择<br><img src="images/电脑版本选择.png" alt="">  </p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>py</category>
        <category>excep</category>
      </categories>
      <tags>
        <tag>py</tag>
      </tags>
  </entry>
  <entry>
    <title>This error originates from a subprocess, and is likely not a problem with pip.</title>
    <url>/2019/06/28/python-excep-This-error-originates-from-a-subprocess-and-is-likely-not-a-problem-with-pip/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>python安装pycrypto时报cl.exe错误返回状态2的解决方案：<a href="http://www.javashuo.com/article/p-uyeuckcm-ek.html" target="_blank" rel="noopener">http://www.javashuo.com/article/p-uyeuckcm-ek.html</a></strong></li>
</ul>
<hr>
<h1 id="note-This-error-originates-from-a-subprocess-and-is-likely-not-a-problem-with-pip"><a href="#note-This-error-originates-from-a-subprocess-and-is-likely-not-a-problem-with-pip" class="headerlink" title="note: This error originates from a subprocess, and is likely not a problem with pip."></a>note: This error originates from a subprocess, and is likely not a problem with pip.</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Program Files (x86)\Windows Kits\10\include\10.0.10240.0\ucrt\inttypes.h(95): error C2143: syntax error: missing &#39;&#123;&#39; before &#39;__cdecl&#39;</span><br><span class="line">  error: command &#39;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\x86_amd64\\cl.exe&#39; failed with exit code 2</span><br><span class="line">  [end of output]</span><br><span class="line"></span><br><span class="line"> note: This error originates from a subprocess, and is likely not a problem with pip.</span><br><span class="line">error: legacy-install-failure</span><br><span class="line"></span><br><span class="line">Encountered error while trying to install package.</span><br><span class="line"></span><br><span class="line">pycrypto</span><br><span class="line"></span><br><span class="line">note: This is an issue with the package mentioned above, not pip.</span><br><span class="line">hint: See above for output from the failure.</span><br></pre></td></tr></table></figure>
<h2 id="已成功解决"><a href="#已成功解决" class="headerlink" title="已成功解决"></a>已成功解决</h2><ol>
<li>将 stdint.h 文件 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\stdint.h</span><br></pre></td></tr></table></figure>
copy一份到 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Program Files (x86)\Windows Kits\10\Include\10.0.10240.0\ucrt</span><br></pre></td></tr></table></figure></li>
<li>修改 inttypes.h 文件中的 stdint.h 引用<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Program Files (x86)\Windows Kits\10\Include\10.0.10240.0\ucrt\inttypes.h</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;stdint.h&gt;</span><br><span class="line">改为</span><br><span class="line">#include &quot;stdint.h&quot;</span><br></pre></td></tr></table></figure></li>
<li>然后再去安装 pycrypto 即可成功</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>py</category>
        <category>excep</category>
      </categories>
      <tags>
        <tag>py</tag>
      </tags>
  </entry>
  <entry>
    <title>python3.10.4安装使用</title>
    <url>/2019/06/28/python-notes-python3-10-4%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>python3.10.4下载地址：<a href="https://www.python.org/downloads/release/python-3104/" target="_blank" rel="noopener">https://www.python.org/downloads/release/python-3104/</a></strong></li>
<li><strong>python windows各版本下载地址：<a href="https://www.python.org/downloads/windows/" target="_blank" rel="noopener">https://www.python.org/downloads/windows/</a></strong></li>
</ul>
<hr>
<h1 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h1><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>自带开发工具: IDLE</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>py</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>py</tag>
      </tags>
  </entry>
  <entry>
    <title>py常用命令</title>
    <url>/2019/06/28/python-notes-py%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>python3.10.4下载地址：<a href="https://www.python.org/downloads/release/python-3104/" target="_blank" rel="noopener">https://www.python.org/downloads/release/python-3104/</a></strong></li>
</ul>
<hr>
<h1 id="pip-install-r"><a href="#pip-install-r" class="headerlink" title="pip install -r"></a>pip install -r</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-r：通过requirements文件可控地安装很多依赖。</span><br><span class="line"></span><br><span class="line">pip install -r requirements.txt</span><br><span class="line"></span><br><span class="line">-r, --requirement     Install from the given requirements file. This option can be used multiple times.  </span><br><span class="line"></span><br><span class="line">-t： 安装到指定位置</span><br><span class="line"></span><br><span class="line">-e： 安装可编辑的包。不同项目，但是一个项目依赖时使用</span><br></pre></td></tr></table></figure>
<h1 id="使用python-m-pip-install-和-pip-install-安装包有什么区别？"><a href="#使用python-m-pip-install-和-pip-install-安装包有什么区别？" class="headerlink" title="使用python -m pip install 和 pip install 安装包有什么区别？"></a>使用python -m pip install 和 pip install 安装包有什么区别？</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">如果去看源码的话，你会发现 pip 作为执行文件的入口点是 pip._internal.main。</span><br><span class="line">  </span><br><span class="line">另一方面，pip 作为模块运行时入口是 _main.py，而该模块也只是调用 pip.internal.main。</span><br><span class="line"></span><br><span class="line">所以两种方式本质上是一样的，需要注意的是，如果系统中同时存在多个 python 解释器，最好检查一下 python 和 pip 是不是来自同一个版本。</span><br><span class="line"></span><br><span class="line">如果Python -m pip —version（-V） 和pip —version（-V）如果一致，就没有区别</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>py</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>py</tag>
      </tags>
  </entry>
  <entry>
    <title>py常用命令</title>
    <url>/2019/06/28/python-notes-%E6%9F%A5%E7%9C%8Bwindows%E4%B8%8Bpython%E5%BA%93%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>python3.10.4下载地址：<a href="https://www.python.org/downloads/release/python-3104/" target="_blank" rel="noopener">https://www.python.org/downloads/release/python-3104/</a></strong></li>
</ul>
<hr>
<h1 id="查看windows下python库系统配置"><a href="#查看windows下python库系统配置" class="headerlink" title="查看windows下python库系统配置"></a>查看windows下python库系统配置</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Users\zhangdaiyin&gt;python</span><br><span class="line">Python 3.8.4 (tags&#x2F;v3.8.4:dfa645a, Jul 13 2020, 16:46:45) [MSC v.1924 64 bit (AMD64)] on win32</span><br><span class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</span><br><span class="line">&gt;&gt;&gt; sys.path</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class="line">NameError: name &#39;sys&#39; is not defined</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">&gt;&gt;&gt; import sys</span><br><span class="line">&gt;&gt;&gt; sys.path</span><br><span class="line">[&#39;&#39;, &#39;D:\\developmentUsedSoftAddress\\Python\\Python384\\python38.zip&#39;, &#39;D:\\developmentUsedSoftAddress\\Python\\Python384\\DLLs&#39;, &#39;D:\\developmentUsedSoftAddress\\Python\\Python384\\lib&#39;, &#39;D:\\developmentUsedSoftAddress\\Python\\Python384&#39;, &#39;D:\\developmentUsedSoftAddress\\Python\\Python384\\lib\\site-packages&#39;, &#39;e:\\workspace-all\\workspace-py\\third_package\\python-uncompyle6&#39;]</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>py</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>py</tag>
      </tags>
  </entry>
  <entry>
    <title>清除IDLE控制台内容</title>
    <url>/2019/06/28/python-notes-%E6%B8%85%E9%99%A4IDLE%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%86%85%E5%AE%B9/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>python3.10.4下载地址：<a href="https://www.python.org/downloads/release/python-3104/" target="_blank" rel="noopener">https://www.python.org/downloads/release/python-3104/</a></strong></li>
</ul>
<hr>
<p># </p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>py</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>py</tag>
      </tags>
  </entry>
  <entry>
    <title>反编译exe</title>
    <url>/2019/06/28/python-notes-%E5%8F%8D%E7%BC%96%E8%AF%91exe/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>python windows各版本下载地址：<a href="https://www.python.org/downloads/windows/" target="_blank" rel="noopener">https://www.python.org/downloads/windows/</a></strong></li>
<li><strong>Python3 如何反编译EXE：<a href="https://blog.csdn.net/xuxingzhuang/article/details/117108502" target="_blank" rel="noopener">https://blog.csdn.net/xuxingzhuang/article/details/117108502</a></strong></li>
<li><strong>python-exe-unpacker：<a href="https://github.com/countercept/python-exe-unpacker" target="_blank" rel="noopener">https://github.com/countercept/python-exe-unpacker</a></strong></li>
<li><strong>uncompyle6：<a href="https://github.com/rocky/python-uncompyle6" target="_blank" rel="noopener">https://github.com/rocky/python-uncompyle6</a></strong></li>
</ul>
<hr>
<h1 id="环境背景"><a href="#环境背景" class="headerlink" title="环境背景"></a>环境背景</h1><ol>
<li>python 和 pip<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Users\zhangdaiyin&gt;pip --version</span><br><span class="line">pip 20.1.1 from d:\developmentusedsoftaddress\python\python384\lib\site-packages\pip (python 3.8)</span><br><span class="line"></span><br><span class="line">C:\Users\zhangdaiyin&gt;python --version</span><br><span class="line">Python 3.8.4</span><br></pre></td></tr></table></figure></li>
<li>010Editor（专业的文本编辑器和十六进制编辑器）使用十六进制编辑软件</li>
<li>只支持通过py2exe和pyinstaller 工具编译生成的EXE文件</li>
</ol>
<h1 id="主要步骤"><a href="#主要步骤" class="headerlink" title="主要步骤"></a>主要步骤</h1><ol>
<li>可执行的exe文件（python)</li>
<li>下载反编译程序包</li>
<li>分析exe可执行文件的打包工具（是否为py2exe和pyinstaller）</li>
<li>执行解包操作</li>
<li>执行反编译</li>
</ol>
<h1 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h1><h2 id="获取可执行的exe文件"><a href="#获取可执行的exe文件" class="headerlink" title="获取可执行的exe文件"></a>获取可执行的exe文件</h2><p>在这里，我们一般是已经拥有了可执行的exe文件，且想获取其源码时，才会用到该文章内容</p>
<h2 id="下载反编译程序包"><a href="#下载反编译程序包" class="headerlink" title="下载反编译程序包"></a>下载反编译程序包</h2><p><a href="https://github.com/countercept/python-exe-unpacker" target="_blank" rel="noopener">python-exe-unpacker</a></p>
<h3 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd python-exe-unpacker</span><br><span class="line"></span><br><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure>
<h4 id="安装失败，提示如下："><a href="#安装失败，提示如下：" class="headerlink" title="安装失败，提示如下："></a>安装失败，提示如下：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Microsoft Visual C++ 14.0 or greater is required</span><br></pre></td></tr></table></figure>
<p>通过手动安装build tool验证通过，知乎上已经有大神分享过具体的解决操作方法，工具<a href="https://pan.baidu.com/s/1ytKIVSBXLMQhrXleC_I4dA" target="_blank" rel="noopener">百度网盘地址https://pan.baidu.com/s/1ytK</a> 提取码： 8scp<br>若分享链接已失效，可联系我给予分享<br>具体操作可查看 <a href="source/_posts/python/excep/Microsoft%20Visual%20C++%2014.0%20or%20greater%20is%20required.md"></a></p>
<h4 id="安装失败，提示如下：-1"><a href="#安装失败，提示如下：-1" class="headerlink" title="安装失败，提示如下："></a>安装失败，提示如下：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Program Files (x86)\Windows Kits\10\include\10.0.10240.0\ucrt\inttypes.h(95): error C2143: syntax error: missing &#39;&#123;&#39; before &#39;__cdecl&#39;</span><br><span class="line">  error: command &#39;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\x86_amd64\\cl.exe&#39; failed with exit code 2</span><br><span class="line">  [end of output]</span><br><span class="line"></span><br><span class="line"> note: This error originates from a subprocess, and is likely not a problem with pip.</span><br><span class="line">error: legacy-install-failure</span><br><span class="line"></span><br><span class="line">Encountered error while trying to install package.</span><br><span class="line"></span><br><span class="line">pycrypto</span><br><span class="line"></span><br><span class="line">note: This is an issue with the package mentioned above, not pip.</span><br><span class="line">hint: See above for output from the failure.</span><br></pre></td></tr></table></figure>
<p>解决办法查看 <a href="../excep/This%20error%20originates%20from%20a%20subprocess,%20and%20is%20likely%20not%20a%20problem%20with%20pip.md"></a></p>
<h2 id="分析exe文件属性"><a href="#分析exe文件属性" class="headerlink" title="分析exe文件属性"></a>分析exe文件属性</h2><p>看EXE是否为py2exe及pyinstaller工具打包出来的<br>通过010Edit工具打开EXE文件，找到最后位置的8个字节看看16进制显示的值<br><img src="images/010Edit工具查看exe文件16进制值.png" alt=""><br>通过搜索 “4D 45 49” 发现EXE文件是属于pyinstaller进行打包的</p>
<h2 id="执行解包操作"><a href="#执行解包操作" class="headerlink" title="执行解包操作"></a>执行解包操作</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd python-exe-unpacker</span><br><span class="line"></span><br><span class="line">python python_exe_unpack.py -i &#x2F;Users&#x2F;py-demo.exe</span><br></pre></td></tr></table></figure>
<p>看到成功后，如果没有-o指定输出目录的话，默认会在当前目录输出unpacked/py-demo.exe/目录，此目录下便是解包后的代码，有一堆的文件和一个目录<br>此目录下有一个py-demo的文件（没有后缀），此外PYZ-00.pyz_extracted文件夹是程序依赖库  </p>
<h2 id="执行反编译"><a href="#执行反编译" class="headerlink" title="执行反编译"></a>执行反编译</h2><p>pyc其实是python程序执行过程中产生的缓存文件，我们直接运行python代码时也会看到<br>使用uncompyle6工具来恢复py文件，uncompyle6普通安装，不做过多解释<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 将解压出来的主程序复制一份，后缀为.pyc</span><br><span class="line">cp &#x2F;python-exe-unpacker&#x2F;unpacked&#x2F;py-demo.exe&#x2F;py-demo &#x2F;python-exe-unpacker&#x2F;unpacked&#x2F;py-demo.exe&#x2F;py-demo.pyc</span><br><span class="line"># 执行反编译</span><br><span class="line">uncompyle6 &#x2F;python-exe-unpacker&#x2F;unpacked&#x2F;py-demo.exe&#x2F;py-demo.pyc &gt; &#x2F;python-exe-unpacker&#x2F;unpacked&#x2F;py-demo.exe&#x2F;py-demo.py</span><br></pre></td></tr></table></figure></p>
<h3 id="反编译失败，提示如下："><a href="#反编译失败，提示如下：" class="headerlink" title="反编译失败，提示如下："></a>反编译失败，提示如下：</h3><p>– Unknown magic number 227 in py-demo.pyc<br>因为pyinstaller工具打包的时候，会将代码文件的magic number（python的版本及编译时间）给清除掉，所以反编译时候需要将magic number添加回去才能识别，magic number我们可以通过解压主目录下的struct结构体文件中提取出来（一般是前16个字节，可以对比打包前的源文件），将struct文件体中的前16个字节提取出来，然后在添加到文件中，然后再执行uncompyle6反编译试试</p>
<h4 id="获取struct文件结构体magic-number"><a href="#获取struct文件结构体magic-number" class="headerlink" title="获取struct文件结构体magic number"></a>获取struct文件结构体magic number</h4><ol>
<li>解压出来的文件夹中有一个 struct 文件，使用 010Edit工具打开，发现第二行是E3开通的十六进制代码，第一行即为 magic number<br><img src="images/010Edit查看文件magic number.png" alt="">  <blockquote>
<p>当我们用010Edit查看解压出来的文件夹中的 py-demo（没有后缀）文件时，发现第一行即是E3开头，没有magic number</p>
</blockquote>
</li>
<li>通过python获取magic number<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">In [1]: struct_path &#x3D; &quot;&#x2F;python-exe-unpacker&#x2F;unpacked&#x2F;py-demo.exe&#x2F;struct&quot;</span><br><span class="line"></span><br><span class="line">In [2]: fn &#x3D; open(struct_path, &#39;rb&#39;)   # 以2进制读模式打开文件</span><br><span class="line"></span><br><span class="line">In [3]: fn.seek(0) # 切换指针位置到开头</span><br><span class="line">Out[3]: 0</span><br><span class="line"></span><br><span class="line">In [5]: fn.tell()   # 查看当前指针位置</span><br><span class="line">Out[5]: 0</span><br><span class="line"></span><br><span class="line">In [8]: magic_number &#x3D; fn.read(16)    # 读取文件的前16个字节，从0开始</span><br><span class="line"></span><br><span class="line">In [10]: magic_number</span><br><span class="line">Out[10]: b&#39;U\r\r\n\x00\x00\x00\x00pyi0\x10\x01\x00\x00&#39;    # 因为我们是2进值打开的文件，这里输出的是前16个字节的2进制值</span><br><span class="line"></span><br><span class="line">In [11]: magic_number.hex()</span><br><span class="line">Out[11]: &#39;420d0d0a000000007079693010010000&#39;     # 转换成16进制，是不是和010Editor文件打开的是一致的</span><br><span class="line"></span><br><span class="line">In [12]: fn.tell()     # 获取当前指针位置</span><br><span class="line">Out[12]: 16</span><br><span class="line"></span><br><span class="line">In [13]: fn.read(1)   # 再读取第17个字节，输出值是e3</span><br><span class="line">Out[13]: b&#39;\xe3&#39;</span><br><span class="line"></span><br><span class="line">In [14]: fn.read(1).hex()   # 再读取第17个字节，输出值是e3</span><br><span class="line">Out[14]: &#39;e3&#39;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这时候我们得到magic number = b’U\r\r\n\x00\x00\x00\x00pyi0\x10\x01\x00\x00’</p>
<h4 id="将Magic-number添加到pyc文件"><a href="#将Magic-number添加到pyc文件" class="headerlink" title="将Magic number添加到pyc文件"></a>将Magic number添加到pyc文件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">In [1]: struct_path &#x3D; &quot;&#x2F;python-exe-unpacker&#x2F;unpacked&#x2F;py-demo.exe&#x2F;struct&quot;</span><br><span class="line"></span><br><span class="line">In [2]: add_magic_num_file_name &#x3D; &quot;&#x2F;python-exe-unpacker&#x2F;unpacked&#x2F;py-demo.exe\\py-demo&quot;</span><br><span class="line"></span><br><span class="line">In [3]: MAGIC_NUMBER &#x3D; b&#39;U\r\r\n\x00\x00\x00\x00pyi0\x10\x01\x00\x00&#39;</span><br><span class="line"></span><br><span class="line">In [4]: f &#x3D; open(add_magic_num_file_name, &#39;rb&#39;)</span><br><span class="line"></span><br><span class="line">In [5]: f.seek(0)</span><br><span class="line">Out[5]: 0</span><br><span class="line"></span><br><span class="line">In [6]: f.tell()</span><br><span class="line">Out[6]: 0</span><br><span class="line"></span><br><span class="line">In [7]: new_content &#x3D; f.read()</span><br><span class="line"></span><br><span class="line">In [8]: new_add_magic_number_file_name &#x3D; &quot;&#x2F;python-exe-unpacker&#x2F;unpacked&#x2F;py-demo.exe\\py-demo.pyc&quot;</span><br><span class="line"></span><br><span class="line">In [9]: n_f &#x3D; open(new_add_magic_number_file_name, &quot;wb&quot;)</span><br><span class="line"></span><br><span class="line">In [10]: n_f.seek(0)</span><br><span class="line">Out[10]: 0</span><br><span class="line"></span><br><span class="line">In [11]: n_f.tell()</span><br><span class="line">Out[11]: 0</span><br><span class="line"></span><br><span class="line">In [12]: n_f.write(MAGIC_NUMBER + new_content)</span><br><span class="line">Out[12]: 10972</span><br><span class="line"></span><br><span class="line">In [13]: f.close()</span><br><span class="line"></span><br><span class="line">In [14]: n_f.close()</span><br></pre></td></tr></table></figure>
<h4 id="反编译新添加magic-number的pyc文件"><a href="#反编译新添加magic-number的pyc文件" class="headerlink" title="反编译新添加magic number的pyc文件"></a>反编译新添加magic number的pyc文件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python &#x2F;softAddress&#x2F;uncompyle6 &#x2F;python-exe-unpacker&#x2F;unpacked&#x2F;py-demo.exe&#x2F;py-demo.pyc &gt; &#x2F;python-exe-unpacker&#x2F;unpacked&#x2F;py-demo.exe&#x2F;py-demo.py</span><br><span class="line">或</span><br><span class="line">uncomplyle6 &#x2F;python-exe-unpacker&#x2F;unpacked&#x2F;py-demo.exe&#x2F;py-demo.pyc &gt; &#x2F;python-exe-unpacker&#x2F;unpacked&#x2F;py-demo.exe&#x2F;py-demo.py</span><br></pre></td></tr></table></figure>
<p>通过反编译出来的py文件，我们看到已经可以正常看到代码了，只不过有些中文字符被解析成了Unicode编码，可以再使用相应工具转换即可<br>我们反编译的sms_agent是主目录的主程序文件，其实还有最重要的，我们需要将PYZ-00.pyz_extracted文件夹下的所有pyc文件都进行反编译。<br>至此，我们主程序的反编译已经完成</p>
<h2 id="依赖库反编译"><a href="#依赖库反编译" class="headerlink" title="依赖库反编译"></a>依赖库反编译</h2><p>反编译PYZ-00.pyz_extracted依赖库下的pyc文件<br>这里需要注意下PYZ-00.pyz_extracted目录下的依赖库的pyc文件缺少的字节数与主程序不同，通过010Editor查看，依赖库下面的pyc文件不是缺少了16个字节，而是中间少了4个字节，<br>那么，我们只需要把struct头部的16个字节覆盖掉PYZ-00.pyz_extracted目录下的依赖库的pyc的前12个字节。<br>由于依赖库下的文件较多，原博主写了一个脚本来自动完成转换，仅供参:  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># vim: tabstop&#x3D;4 shiftwidth&#x3D;4 softtabstop&#x3D;4</span><br><span class="line">#</span><br><span class="line"># Copyright 2019 OneProCloud (Shanghai) Ltd</span><br><span class="line">#</span><br><span class="line"># Authors: XuXingZhuang xuxingzhuang@oneprocloud.com</span><br><span class="line">#</span><br><span class="line"># Copyright (c) 2019. This file is confidential and proprietary.</span><br><span class="line"># All Rights Reserved, OneProCloud (Shanghai) Ltd(http:&#x2F;&#x2F;www.oneprocloud.com).)</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">MAGIC_HEAD &#x3D; b&#39;B\r\r\n\x00\x00\x00\x00pyi0\x10\x01\x00\x00&#39;</span><br><span class="line">FILES_DIRS &#x3D; &quot;&#x2F;Users&#x2F;CarltonXu&#x2F;Downloads&#x2F;SMS-Agent-unpacked&#x2F;SMS-Agent.exe&#x2F;PYZ-00.pyz_extracted&#x2F;&quot;</span><br><span class="line">CONVERT_CMD &#x3D; &quot;&#x2F;Users&#x2F;CarltonXu&#x2F;workspace&#x2F;venv_3.7.5&#x2F;bin&#x2F;python &#x2F;Users&#x2F;CarltonXu&#x2F;workspace&#x2F;venv_3.7.5&#x2F;bin&#x2F;uncompyle6&quot;</span><br><span class="line"></span><br><span class="line">num &#x3D; 0</span><br><span class="line">for root, dirs, files in os.walk(FILES_DIRS):</span><br><span class="line">    print(files)</span><br><span class="line">    for f_name in files:</span><br><span class="line">        num +&#x3D; 1</span><br><span class="line">        print(&quot;Execute Number: %s&quot; %num)</span><br><span class="line">        if not f_name.endswith(&quot;.pyc&quot;):</span><br><span class="line">            continue</span><br><span class="line">        old_file &#x3D; os.path.join(root, f_name)</span><br><span class="line">        new_file &#x3D; os.path.join(root + &quot;&#x2F;pyz_workspace&#x2F;&quot; + f_name)</span><br><span class="line">        with open(old_file, &quot;rb&quot;) as o_f:</span><br><span class="line">            o_f.seek(12)</span><br><span class="line">            od_content &#x3D; o_f.read()</span><br><span class="line"></span><br><span class="line">        with open(new_file, &quot;wb&quot;) as n_f:</span><br><span class="line">            n_f.seek(0)</span><br><span class="line">            new_content &#x3D; MAGIC_HEAD + od_content</span><br><span class="line">            n_f.write(new_content)</span><br><span class="line"></span><br><span class="line">        GENERA_PY_FILE &#x3D; os.path.join(root + &quot;&#x2F;pyz_workspace&#x2F;&quot; + f_name[0:-4] + &quot;.py&quot;)</span><br><span class="line">        EXEC_CONVERT_CMD &#x3D; CONVERT_CMD + &quot; %s &gt; %s&quot; %(new_file, GENERA_PY_FILE)</span><br><span class="line">        exec_ret &#x3D; os.popen(EXEC_CONVERT_CMD).read()</span><br><span class="line">        if exec_ret:</span><br><span class="line">            print(&quot;INFO: Execute convert cmd successful.&quot;)</span><br><span class="line">        else:</span><br><span class="line">            print(&quot;[ERROR]: Execute convert cmd filed, please check it.&quot;)</span><br></pre></td></tr></table></figure>
<h3 id="整理PYZ-00-pyz-extracted依赖库下的py文件"><a href="#整理PYZ-00-pyz-extracted依赖库下的py文件" class="headerlink" title="整理PYZ-00.pyz_extracted依赖库下的py文件"></a>整理PYZ-00.pyz_extracted依赖库下的py文件</h3><p>由于反编译完成后的py文件较多，而且没有相关目录，所有的文件名称都是xxx.xxxx.xxx.py<br>我们正常的代码编写会进行目录划分，用于不同的功能，以及程序调用，所以这里写了一个脚本，来将py文件进行归类创建目录，后续好进行查看</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># vim: tabstop&#x3D;4 shiftwidth&#x3D;4 softtabstop&#x3D;4</span><br><span class="line">#</span><br><span class="line"># Copyright 2019 OneProCloud (Shanghai) Ltd</span><br><span class="line">#</span><br><span class="line"># Authors: XuXingZhuang xuxingzhuang@oneprocloud.com</span><br><span class="line">#</span><br><span class="line"># Copyright (c) 2019. This file is confidential and proprietary.</span><br><span class="line"># All Rights Reserved, OneProCloud (Shanghai) Ltd(http:&#x2F;&#x2F;www.oneprocloud.com).)</span><br><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line"># coding&#x3D;utf-8</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">import os</span><br><span class="line">import shutil</span><br><span class="line"></span><br><span class="line">ORDER_DIRS &#x3D; &quot;&#x2F;Users&#x2F;CarltonXu&#x2F;Downloads&#x2F;SMS-Agent-unpacked&#x2F;SMS-Agent.exe&#x2F;PYZ-00.pyz_extracted&#x2F;pyz_workspace&#x2F;&quot;</span><br><span class="line"></span><br><span class="line"># 遍历所有目录下的文件</span><br><span class="line">for f in os.listdir(ORDER_DIRS):</span><br><span class="line">    if f.split(&quot;.&quot;)[-1].endswith(&quot;pyc&quot;):</span><br><span class="line">        continue</span><br><span class="line">    mk_dir &#x3D; f.split(&quot;.&quot;)[0:-2]</span><br><span class="line">    if mk_dir:</span><br><span class="line">        mk_path &#x3D; ORDER_DIRS + &quot;&#x2F;&quot;.join(mk_dir)</span><br><span class="line">        mv_file &#x3D; ORDER_DIRS + f</span><br><span class="line">        mv_to_path &#x3D; mk_path + &quot;&#x2F;&quot;</span><br><span class="line">        new_file_name &#x3D; &quot;.&quot;.join(f.split(&quot;.&quot;)[-2:])</span><br><span class="line">        os.makedirs(mk_path, exist_ok&#x3D;True)</span><br><span class="line">        shutil.move(mv_file, mv_to_path)</span><br><span class="line">        os.renames(mv_to_path + f, mv_to_path + new_file_name)</span><br><span class="line">    else:</span><br><span class="line">        continue</span><br></pre></td></tr></table></figure>
<h3 id="整体脚本"><a href="#整体脚本" class="headerlink" title="整体脚本"></a>整体脚本</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># vim: tabstop&#x3D;4 shiftwidth&#x3D;4 softtabstop&#x3D;4</span><br><span class="line">#</span><br><span class="line"># Copyright 2019 OneProCloud (Shanghai) Ltd</span><br><span class="line">#</span><br><span class="line"># Authors: XuXingZhuang xuxingzhuang@oneprocloud.com</span><br><span class="line">#</span><br><span class="line"># Copyright (c) 2019. This file is confidential and proprietary.</span><br><span class="line"># All Rights Reserved, OneProCloud (Shanghai) Ltd(http:&#x2F;&#x2F;www.oneprocloud.com).)</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">import os</span><br><span class="line">import shutil</span><br><span class="line"></span><br><span class="line">MAGIC_HEAD &#x3D; b&#39;B\r\r\n\x00\x00\x00\x00pyi0\x10\x01\x00\x00&#39;</span><br><span class="line">FILES_DIRS &#x3D; &quot;&#x2F;tmp&#x2F;python-exe-unpacker&#x2F;unpacked&#x2F;SMS-Agent.exe&#x2F;PYZ-00.pyz_extracted&quot;</span><br><span class="line">CONVERT_CMD &#x3D; &quot;&#x2F;Users&#x2F;CarltonXu&#x2F;workspace&#x2F;venv_3.7.5&#x2F;bin&#x2F;python &#x2F;Users&#x2F;CarltonXu&#x2F;workspace&#x2F;venv_3.7.5&#x2F;bin&#x2F;uncompyle6&quot;</span><br><span class="line"></span><br><span class="line">def order_dirs(dirs):</span><br><span class="line">    for f in os.listdir(dirs):</span><br><span class="line">        if f.split(&quot;.&quot;)[-1].endswith(&quot;pyc&quot;):</span><br><span class="line">            os.popen(&quot;rm -rf %s&quot; %(dirs + f)).read()</span><br><span class="line">            continue</span><br><span class="line">        mk_dir &#x3D; f.split(&quot;.&quot;)[0:-2]</span><br><span class="line">        if mk_dir:</span><br><span class="line">            mk_path &#x3D; dirs + &quot;&#x2F;&quot;.join(mk_dir)</span><br><span class="line">            mv_file &#x3D; dirs + f</span><br><span class="line">            mv_to_path &#x3D; mk_path + &quot;&#x2F;&quot;</span><br><span class="line">            new_file_name &#x3D; &quot;.&quot;.join(f.split(&quot;.&quot;)[-2:])</span><br><span class="line">            os.makedirs(mk_path, exist_ok&#x3D;True)</span><br><span class="line">            shutil.move(mv_file, mv_to_path)</span><br><span class="line">            os.renames(mv_to_path + f, mv_to_path + new_file_name)</span><br><span class="line">        else:</span><br><span class="line">            continue</span><br><span class="line"></span><br><span class="line">num &#x3D; 0</span><br><span class="line">for root, dirs, files in os.walk(FILES_DIRS):</span><br><span class="line">    print(files)</span><br><span class="line">    for f_name in files:</span><br><span class="line">        num +&#x3D; 1</span><br><span class="line">        print(&quot;Execute Number: %s&quot; %num)</span><br><span class="line">        if not f_name.endswith(&quot;.pyc&quot;):</span><br><span class="line">            continue</span><br><span class="line">        new_dirs &#x3D; root + &quot;&#x2F;pyz_workspace&#x2F;&quot;</span><br><span class="line">        os.makedirs(new_dirs, exist_ok&#x3D;True)</span><br><span class="line">        old_file &#x3D; os.path.join(root, f_name)</span><br><span class="line">        new_file &#x3D; os.path.join(new_dirs + f_name)</span><br><span class="line">        with open(old_file, &quot;rb&quot;) as o_f:</span><br><span class="line">            o_f.seek(12)</span><br><span class="line">            od_content &#x3D; o_f.read()</span><br><span class="line"></span><br><span class="line">        with open(new_file, &quot;wb&quot;) as n_f:</span><br><span class="line">            n_f.seek(0)</span><br><span class="line">            new_content &#x3D; MAGIC_HEAD + od_content</span><br><span class="line">            n_f.write(new_content)</span><br><span class="line"></span><br><span class="line">        GENERA_PY_FILE &#x3D; os.path.join(new_dirs + f_name[0:-4] + &quot;.py&quot;)</span><br><span class="line">        EXEC_CONVERT_CMD &#x3D; CONVERT_CMD + &quot; %s &gt; %s&quot; %(new_file, GENERA_PY_FILE)</span><br><span class="line">        exec_ret &#x3D; os.popen(EXEC_CONVERT_CMD).read()</span><br><span class="line">        if not exec_ret:</span><br><span class="line">            print(&quot;INFO: Execute convert cmd successful.&quot;)</span><br><span class="line">            order_dirs(new_dirs)</span><br><span class="line">            print(&quot;INFO: Order directory successful.&quot;)</span><br><span class="line">        else:</span><br><span class="line">            print(&quot;[ERROR]: Execute convert cmd filed, please check it.&quot;)</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ol>
<h1 id="反编译过程其他异常"><a href="#反编译过程其他异常" class="headerlink" title="反编译过程其他异常"></a>反编译过程其他异常</h1><ol>
<li>ord() expected a character, but string of length 0 found<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ill-formed bytecode file cc2.pyc</span><br><span class="line">&lt;class &#39;TypeError&#39;&gt;; ord() expected a character, but string of length 0 found</span><br></pre></td></tr></table></figure>
magic number添加错误</li>
<li>‘unicodeescape’ codec can’t decode bytes in position 63-64:truncated \uXXXX escape<br>需要使用 ipython 执行</li>
<li>反编译时注意路径的符号为<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\\ 或 &#x2F;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="cmd窗口跳转"><a href="#cmd窗口跳转" class="headerlink" title="cmd窗口跳转"></a>cmd窗口跳转</h1><p>cmd窗口跳转到E盘<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">e:  # 回车</span><br></pre></td></tr></table></figure></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>py</category>
        <category>notes</category>
      </categories>
      <tags>
        <tag>py</tag>
      </tags>
  </entry>
  <entry>
    <title>wxpython</title>
    <url>/2019/06/28/python-notes-gui-wxpython/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>python3.10.4下载地址：<a href="https://www.python.org/downloads/release/python-3104/" target="_blank" rel="noopener">https://www.python.org/downloads/release/python-3104/</a></strong></li>
</ul>
<hr>
<h1 id="pip-install-r"><a href="#pip-install-r" class="headerlink" title="pip install -r"></a>pip install -r</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-r：通过requirements文件可控地安装很多依赖。</span><br><span class="line"></span><br><span class="line">pip install -r requirements.txt</span><br><span class="line"></span><br><span class="line">-r, --requirement     Install from the given requirements file. This option can be used multiple times.  </span><br><span class="line"></span><br><span class="line">-t： 安装到指定位置</span><br><span class="line"></span><br><span class="line">-e： 安装可编辑的包。不同项目，但是一个项目依赖时使用</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>py</category>
        <category>notes</category>
        <category>gui</category>
      </categories>
      <tags>
        <tag>py</tag>
      </tags>
  </entry>
  <entry>
    <title>获取完整的commit id</title>
    <url>/2019/06/21/git-config-%E6%9F%A5%E7%9C%8Bgit%E4%B8%8A%E7%9A%84%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81-Win10%E6%9F%A5%E7%9C%8B%E5%88%AB%E4%BA%BA%E5%9C%A8%E8%87%AA%E5%B7%B1%E7%94%B5%E8%84%91%E4%B8%8A%E8%BE%93%E5%85%A5%E8%BF%87%E7%9A%84%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>查看git上的账号密码_Win10查看别人在自己电脑上输入过的账号密码：<a href="https://blog.csdn.net/weixin_39685836/article/details/113490328" target="_blank" rel="noopener">https://blog.csdn.net/weixin_39685836/article/details/113490328</a></strong></li>
</ul>
<hr>
<h1 id="在这里奕奇科技小编教大家如何在WIN10系统查看别人在自己账户里输入过的密码！"><a href="#在这里奕奇科技小编教大家如何在WIN10系统查看别人在自己账户里输入过的密码！" class="headerlink" title="在这里奕奇科技小编教大家如何在WIN10系统查看别人在自己账户里输入过的密码！"></a>在这里奕奇科技小编教大家如何在WIN10系统查看别人在自己账户里输入过的密码！</h1><p>1、 先打开控制面板—–》用户账户—–》凭据管理器web凭据下的显示的网站点击查看需要输入管理员用户密码<br><img src="images/凭据位置图.png" alt="">  </p>
<p>2、点击后出现验证“你的凭据以查看存储的密码”<br><img src="images/查看凭据密码图.png" alt=""></p>
<p>3、然后输入自己的管理员账户，就可以查看网站上输入过的账户密码。</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>config</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git clone -b 直接克隆分支代码</title>
    <url>/2019/04/18/git-%E7%AC%94%E8%AE%B0-git-clone-b%E7%9B%B4%E6%8E%A5%E5%85%8B%E9%9A%86%E5%88%86%E6%94%AF%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>git clone -b 分支名称 git@git.xx.yy.git</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>解决将已有git远程仓库的项目复制到另外一个已有远程连接的本地仓库，并提交的方法</title>
    <url>/2018/12/07/git-%E5%BC%82%E5%B8%B8-%E8%A7%A3%E5%86%B3%E5%B0%86%E5%B7%B2%E6%9C%89git%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E7%9A%84%E9%A1%B9%E7%9B%AE%E5%A4%8D%E5%88%B6%E5%88%B0%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E5%B7%B2%E6%9C%89%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E7%9A%84%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%EF%BC%8C%E5%B9%B6%E6%8F%90%E4%BA%A4%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>项目A，已有远程仓库，可正常pull、push<br>项目B，已有远程仓库，可正常pull、push  </p>
<h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><ol>
<li>将项目B复制到项目A项目中，并git add . ， git commit   <h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2>在项目A中，项目B无法在项目中提交，整个git add 和 git commit过程无法发现项目B</li>
</ol>
<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><ol>
<li>在项目A中的项目B文件夹下，右键git bash here，通过命令窗口，我们使用git remote -v</li>
</ol>
<ul>
<li>发现此项目B文件夹下的远程仓库链接存在，且为项目B原本的远程仓库</li>
</ul>
<h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><ol>
<li>删除项目A中项目B文件夹对应的远程仓库（项目B文件夹里执行）<br>git remote remove origin</li>
<li>删除项目A中项目B文件夹里的git版本控制信息（项目B文件夹里执行）<br>find . -name “.git” | xargs rm -rf<blockquote>
<p>此时git add . 会提示： fatal: in unpopulated submodule ‘B’</p>
</blockquote>
</li>
<li>清除项目A中项目B文件夹的git缓存信息（此处需要在项目A文件夹中执行，这样才能找到项目B文件夹）<br>git rm -rf –cached hexo-theme-matery</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>异常</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git查看远程分支、本地分支、创建分支、推送分支</title>
    <url>/2018/10/26/git-%E7%AC%94%E8%AE%B0-git-%E6%9F%A5%E7%9C%8B%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF%E3%80%81%E6%9C%AC%E5%9C%B0%E5%88%86%E6%94%AF%E3%80%81%E5%88%9B%E5%BB%BA%E5%88%86%E6%94%AF%E3%80%81%E6%8A%8A%E5%88%86%E6%94%AF%E6%8E%A8%E5%88%B0%E8%BF%9C%E7%A8%8Brepository%E3%80%81%E5%88%A0%E9%99%A4%E6%9C%AC%E5%9C%B0%E5%88%86%E6%94%AF/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="查看远程分支"><a href="#查看远程分支" class="headerlink" title="查看远程分支"></a>查看远程分支</h1><p>git branch -a</p>
<h1 id="查看本地分支"><a href="#查看本地分支" class="headerlink" title="查看本地分支"></a>查看本地分支</h1><p>git branch</p>
<h1 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h1><p>git branch test </p>
<h1 id="把分支推到远程分支"><a href="#把分支推到远程分支" class="headerlink" title="把分支推到远程分支"></a>把分支推到远程分支</h1><p>git push origin test</p>
<h1 id="切换分支到test"><a href="#切换分支到test" class="headerlink" title="切换分支到test"></a>切换分支到test</h1><p>git checkout test </p>
<h1 id="删除本地分支test"><a href="#删除本地分支test" class="headerlink" title="删除本地分支test"></a>删除本地分支test</h1><p>git branch -d 本地分支名</p>
<h1 id="删除远程版本"><a href="#删除远程版本" class="headerlink" title="删除远程版本"></a>删除远程版本</h1><p>git push origin :远程分支名</p>
<h1 id="将分支为branchname合并到当前分值"><a href="#将分支为branchname合并到当前分值" class="headerlink" title="将分支为branchname合并到当前分值"></a>将分支为branchname合并到当前分值</h1><p> git merge branchname</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git三种回滚方式--soft、hard、mixed</title>
    <url>/2018/10/26/git-%E7%AC%94%E8%AE%B0-git%E4%B8%89%E7%A7%8D%E5%9B%9E%E6%BB%9A%E6%96%B9%E5%BC%8F-soft%EF%BC%8Chard%EF%BC%8Cmixed/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>git三种回滚方式–soft，hard，mixed：<a href="https://blog.csdn.net/chao821/article/details/81033003" target="_blank" rel="noopener">https://blog.csdn.net/chao821/article/details/81033003</a></strong></li>
</ul>
<hr>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>退出git vim编辑器</title>
    <url>/2018/08/23/git-%E7%AC%94%E8%AE%B0-%E8%BF%9B%E5%85%A5vim%E7%BC%96%E8%BE%91%E5%99%A8%E5%90%8E%E6%80%8E%E4%B9%88%E9%80%80%E5%87%BA/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ol>
<li><p>一直按住esc ，再连续按大写的z两次就退出来了。</p>
<blockquote>
<p>用wq的时候，要先esc，然后按住shift键，出现下面这个界面时才可以输入命令：</p>
</blockquote>
</li>
<li><p>直接按q，不保存改动 退出</p>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>merge和rebase的区别</title>
    <url>/2018/08/19/git-%E7%AC%94%E8%AE%B0-merge%E5%92%8Crebase%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ol>
<li>（一股脑）使用merge命令合并分支，解决完冲突，执行git add .和git commit -m’fix conflict’。这个时候会产生一个commit。</li>
<li>（交互式）使用rebase命令合并分支，解决完冲突，执行git add .和git rebase –continue，不会产生额外的commit。这样的好处是，‘干净’，分支上不会有无意义的解决分支的commit；坏处，如果合并的分支中存在多个commit，需要重复处理多次冲突。</li>
<li>git pull和git pull –rebase区别：git pull做了两个操作分别是‘获取’和合并。所以加了rebase就是以rebase的方式进行合并分支，默认为merge。</li>
</ol>
<p>git pull = git fetch + git merge<br>git pull –rebase = git fetch + git rebase</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>idea去掉add和回退到第N次提交</title>
    <url>/2018/08/17/git-%E7%AC%94%E8%AE%B0-idea%E5%8E%BB%E6%8E%89add%E5%92%8C%E5%9B%9E%E9%80%80%E5%88%B0%E7%AC%ACN%E6%AC%A1%E6%8F%90%E4%BA%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="reset"><a href="#reset" class="headerlink" title="reset"></a>reset</h1><p>git reset head</p>
<h1 id="回退到最后一次提交之前状态"><a href="#回退到最后一次提交之前状态" class="headerlink" title="回退到最后一次提交之前状态"></a>回退到最后一次提交之前状态</h1><p>git reset HEAD~1</p>
<h1 id="回退到第3次提交之前的状态"><a href="#回退到第3次提交之前的状态" class="headerlink" title="回退到第3次提交之前的状态"></a>回退到第3次提交之前的状态</h1><p>git reset HEAD~3</p>
<h1 id="撤销-强制提交记录"><a href="#撤销-强制提交记录" class="headerlink" title="撤销+强制提交记录"></a>撤销+强制提交记录</h1><p>git log先查你提交的记录<br>git reset –hard xxxxxx回滚到那个记录<br>如果你也想修改远程仓库里的记录的话<br>git push origin master -f强制push</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>获取完整的commit id</title>
    <url>/2018/08/11/git-%E7%AC%94%E8%AE%B0-git%E8%8E%B7%E5%8F%96commit-id/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="获取完整commit-id（如：bb4f92a7d4cbafb67d259edea5a1fa2dd6b4cc7a）"><a href="#获取完整commit-id（如：bb4f92a7d4cbafb67d259edea5a1fa2dd6b4cc7a）" class="headerlink" title="获取完整commit id（如：bb4f92a7d4cbafb67d259edea5a1fa2dd6b4cc7a）"></a>获取完整commit id（如：bb4f92a7d4cbafb67d259edea5a1fa2dd6b4cc7a）</h1><p>git rev-parse HEAD</p>
<h1 id="获取short-commit-id（如：bb4f92a）"><a href="#获取short-commit-id（如：bb4f92a）" class="headerlink" title="获取short commit id（如：bb4f92a）"></a>获取short commit id（如：bb4f92a）</h1><p>git rev-parse –short HEAD</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>清除用户名密码、记住用户名密码</title>
    <url>/2018/08/09/git-%E7%AC%94%E8%AE%B0-git%E6%B8%85%E9%99%A4%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%86%E7%A0%81%EF%BC%8C%E8%AE%B0%E4%BD%8F%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="清除用户名密码-缓存"><a href="#清除用户名密码-缓存" class="headerlink" title="清除用户名密码 缓存"></a>清除用户名密码 缓存</h1><p>git credential-manager uninstall</p>
<h1 id="设置记住用户名密码"><a href="#设置记住用户名密码" class="headerlink" title="设置记住用户名密码"></a>设置记住用户名密码</h1><p>git config –global credential.helper store (输入这个命令后,以后只要在输入一次用户名密码)</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>列出某个分支的数据（按作者或时间排序）</title>
    <url>/2018/08/07/git-%E7%AC%94%E8%AE%B0-git%E6%9F%A5%E7%9C%8B%E6%9F%90%E4%B8%AA%E5%88%86%E6%94%AF%E7%9A%84%E5%88%9B%E5%BB%BA%E8%80%85%E4%BB%A5%E5%8F%8A%E5%88%9B%E5%BB%BA%E6%97%B6%E9%97%B4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>列出远程Git分支按作者排序的committerdate：</p>
<p>git for-each-ref –format=’%(committerdate) %09 %(authorname) %09 %(refname)’ | sort -k5n -k2M -k3n -k4n<br>然后比如你想查看某个分支branch_A, 那么就再后面加上|grep branch_A</p>
<p>git for-each-ref –format=’%(committerdate) %09 %(authorname) %09 %(refname)’ | sort -k5n -k2M -k3n -k4n|grep branch_A</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git撤销</title>
    <url>/2018/07/09/git-%E7%AC%94%E8%AE%B0-git%E6%92%A4%E9%94%80commit/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>$ git commit -m ‘initial commit’     提交</p>
<p>$ git add forgotten_file     添加</p>
<p>$ git commit –amend    撤销</p>
<p>通过git commit –amend 命令可以查看到刚刚的log信息为</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git撤销上一次commit的内容</title>
    <url>/2018/07/06/git-%E7%AC%94%E8%AE%B0-git%E6%92%A4%E6%B6%88%E4%B8%8A%E4%B8%80%E6%AC%A1commit%E7%9A%84%E5%86%85%E5%AE%B9-%E8%AF%A5%E6%93%8D%E4%BD%9C%E4%BC%9A%E5%BD%BB%E5%BA%95%E5%9B%9E%E9%80%80%E5%88%B0%E6%9F%90%E4%B8%AA%E7%89%88%E6%9C%AC%EF%BC%8C%E6%9C%AC%E5%9C%B0%E7%9A%84%E6%BA%90%E7%A0%81%E4%B9%9F%E4%BC%9A%E5%8F%98%E4%B8%BA%E4%B8%8A%E4%B8%80%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84%E5%86%85%E5%AE%B9/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>git reset –hard <commit-id></p>
<blockquote>
<p>该操作会彻底回退到某个版本，本地的源码也会变为上一个版本的内容</p>
</blockquote>
<p>git commit –amend 撤销</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git分支跟踪关系的三种设置方式</title>
    <url>/2018/07/05/git-%E7%AC%94%E8%AE%B0-git%E5%88%86%E6%94%AF%E8%B7%9F%E8%B8%AA%E5%85%B3%E7%B3%BB%E7%9A%84%E4%B8%89%E7%A7%8D%E8%AE%BE%E7%BD%AE%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="git分支跟踪关系的三种设置方式"><a href="#git分支跟踪关系的三种设置方式" class="headerlink" title="git分支跟踪关系的三种设置方式"></a>git分支跟踪关系的三种设置方式</h1><ol>
<li>git checkout –tracked origin/branchName</li>
<li>git push –set-upstream origin branchName</li>
<li>git branch –set-upstream-to=origin/branchName</li>
<li>git branch –set-upstream-to=origin/master</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git分支相关操作</title>
    <url>/2018/07/04/git-%E7%AC%94%E8%AE%B0-git%E5%88%86%E6%94%AF%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="git-branch-vv"><a href="#git-branch-vv" class="headerlink" title="git branch -vv"></a>git branch -vv</h1><p>（两个v），就能够看到本地分支跟踪的远程分支。</p>
<h1 id="git-branch-a"><a href="#git-branch-a" class="headerlink" title="git branch -a"></a>git branch -a</h1><p>查看远程分支与当前所在分支</p>
<h1 id="git-branch"><a href="#git-branch" class="headerlink" title="git branch"></a>git branch</h1><p>查看本地所在分支</p>
<h1 id="git-checkout-xxx"><a href="#git-checkout-xxx" class="headerlink" title="git checkout xxx"></a>git checkout xxx</h1><p>切换分支到xxx</p>
<h1 id="git-branch-r"><a href="#git-branch-r" class="headerlink" title="git branch -r"></a>git branch -r</h1><p>查看远程所有分支</p>
<h1 id="git-branch-M-分支名"><a href="#git-branch-M-分支名" class="headerlink" title="git branch -M 分支名"></a>git branch -M 分支名</h1><p>重命名分支（本地和远程）</p>
<h1 id="git-branch-D-分支名"><a href="#git-branch-D-分支名" class="headerlink" title="git branch -D 分支名"></a>git branch -D 分支名</h1><p>删除分支</p>
<h1 id="拉取远程分支并创建本地分支"><a href="#拉取远程分支并创建本地分支" class="headerlink" title="拉取远程分支并创建本地分支"></a>拉取远程分支并创建本地分支</h1><ol>
<li>方式一<br>git checkout -b 本地分支名x   origin/远程分支名x<br>说明：使用该方式会在本地新建分支x，并自动切换到该本地分支x。<br>采用此种方法建立的本地分支会和远程分支建立映射关系。</li>
<li>方式二<br>git fetch origin 远程分支名x:本地分支名x<br>说明：该方式会在本地新建分支x，但是不会自动切换到该本地分支x，需要手动checkout。<br>采用此种方法建立的本地分支不会和远程分支建立映射关系。</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git全局和项目设置用户名、密码</title>
    <url>/2018/07/03/git-%E7%AC%94%E8%AE%B0-git%E5%85%A8%E5%B1%80%E5%92%8C%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE-user%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;myname&quot;</span><br><span class="line">git config --global user.email  &quot;test@gmail.com&quot;</span><br></pre></td></tr></table></figure>
<h1 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config user.name &quot;myname&quot;</span><br><span class="line">git config user.email  &quot;test@gmail.com&quot;</span><br></pre></td></tr></table></figure>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git信息查看</title>
    <url>/2018/07/01/git-%E7%AC%94%E8%AE%B0-git%E4%BF%A1%E6%81%AF%E6%9F%A5%E7%9C%8B/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="从当前分支切换到‘dev’分支："><a href="#从当前分支切换到‘dev’分支：" class="headerlink" title="从当前分支切换到‘dev’分支："></a>从当前分支切换到‘dev’分支：</h1><p>git checkout dev </p>
<h1 id="建立并切换新分支："><a href="#建立并切换新分支：" class="headerlink" title="建立并切换新分支："></a>建立并切换新分支：</h1><p>git checkout -b ‘dev’ </p>
<h1 id="查看当前详细分支信息（可看到当前分支与对应的远程追踪分支）"><a href="#查看当前详细分支信息（可看到当前分支与对应的远程追踪分支）" class="headerlink" title="查看当前详细分支信息（可看到当前分支与对应的远程追踪分支）:"></a>查看当前详细分支信息（可看到当前分支与对应的远程追踪分支）:</h1><p>git branch -vv </p>
<h1 id="查看当前远程仓库信息"><a href="#查看当前远程仓库信息" class="headerlink" title="查看当前远程仓库信息"></a>查看当前远程仓库信息</h1><p>git remote -vv</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git cherry-pick与rebase</title>
    <url>/2018/06/16/git-config-git-config%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF%E6%9F%A5%E7%9C%8B/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="git-config-–list"><a href="#git-config-–list" class="headerlink" title="git config –list"></a>git config –list</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git config --list</span><br><span class="line">core.symlinks&#x3D;false</span><br><span class="line">core.autocrlf&#x3D;true</span><br><span class="line">core.fscache&#x3D;true</span><br><span class="line">color.diff&#x3D;auto</span><br><span class="line">color.status&#x3D;auto</span><br><span class="line">color.branch&#x3D;auto</span><br><span class="line">color.interactive&#x3D;true</span><br><span class="line">help.format&#x3D;html</span><br><span class="line">rebase.autosquash&#x3D;true</span><br><span class="line">http.sslcainfo&#x3D;D:&#x2F;developmentUsedSoftAddress&#x2F;Git&#x2F;mingw64&#x2F;ssl&#x2F;certs&#x2F;ca-bundle.crt</span><br><span class="line">http.sslbackend&#x3D;openssl</span><br><span class="line">diff.astextplain.textconv&#x3D;astextplain</span><br><span class="line">filter.lfs.clean&#x3D;git-lfs clean -- %f</span><br><span class="line">filter.lfs.smudge&#x3D;git-lfs smudge -- %f</span><br><span class="line">filter.lfs.process&#x3D;git-lfs filter-process</span><br><span class="line">filter.lfs.required&#x3D;true</span><br><span class="line">user.name&#x3D;zhangdy</span><br><span class="line">user.email&#x3D;zhangdaiyin.cool@163.com</span><br><span class="line">credential.helper&#x3D;store</span><br><span class="line">core.repositoryformatversion&#x3D;0</span><br><span class="line">core.filemode&#x3D;false</span><br><span class="line">core.bare&#x3D;false</span><br><span class="line">core.logallrefupdates&#x3D;true</span><br><span class="line">core.symlinks&#x3D;false</span><br><span class="line">core.ignorecase&#x3D;true</span><br><span class="line">remote.origin.url&#x3D;https:&#x2F;&#x2F;code.sofa4finance.aliyuncs.com&#x2F;nybqjywz&#x2F;tax-platform&#x2F;invoice-center.git</span><br><span class="line">remote.origin.fetch&#x3D;+refs&#x2F;heads&#x2F;*:refs&#x2F;remotes&#x2F;origin&#x2F;*</span><br><span class="line">branch.master.remote&#x3D;origin</span><br><span class="line">branch.master.merge&#x3D;refs&#x2F;heads&#x2F;master</span><br><span class="line">branch.feature-dev.remote&#x3D;origin</span><br><span class="line">branch.feature-dev.merge&#x3D;refs&#x2F;heads&#x2F;feature-dev</span><br><span class="line">user.name&#x3D;zhangdaiyin</span><br><span class="line">user.email&#x3D;zhangdaiyin@1414587873548331.onaliyun.com</span><br></pre></td></tr></table></figure>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>从以上配置上可以看得出来，全局的user配置如下<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user.name&#x3D;zhangdy</span><br><span class="line">user.email&#x3D;zhangdaiyin.cool@163.com</span><br></pre></td></tr></table></figure><br>局部项目的配置如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">branch.feature-dev.merge&#x3D;refs&#x2F;heads&#x2F;feature-dev</span><br><span class="line">user.name&#x3D;zhangdaiyin</span><br><span class="line">user.email&#x3D;zhangdaiyin@1414587873548331.onaliyun.com</span><br></pre></td></tr></table></figure></p>
<hr>
<ul>
<li><strong>GIT-查看config配置信息：<a href="https://www.cnblogs.com/merray/p/6006411.html" target="_blank" rel="noopener">https://www.cnblogs.com/merray/p/6006411.html</a></strong></li>
</ul>
<hr>
<h1 id="config-配置指令"><a href="#config-配置指令" class="headerlink" title="config 配置指令"></a>config 配置指令</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config</span><br></pre></td></tr></table></figure>
<p>config 配置有system级别 global（用户级别） 和local（当前仓库）三个 设置先从system-》global-》local  底层配置会覆盖顶层配置 分别使用–system/global/local 可以定位到配置文件</p>
<h1 id="查看系统config"><a href="#查看系统config" class="headerlink" title="查看系统config"></a>查看系统config</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --system --list</span><br></pre></td></tr></table></figure>
<h1 id="查看当前用户（global）配置"><a href="#查看当前用户（global）配置" class="headerlink" title="查看当前用户（global）配置"></a>查看当前用户（global）配置</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global  --list</span><br></pre></td></tr></table></figure>
<h1 id="查看当前仓库配置信息"><a href="#查看当前仓库配置信息" class="headerlink" title="查看当前仓库配置信息"></a>查看当前仓库配置信息</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --local  --list</span><br></pre></td></tr></table></figure>
<blockquote>
<p>由此可见–global中存储了提交用户的email和用户名 如果需要手动设置则可以使用如下指令<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;myname&quot;</span><br><span class="line">git config --global user.email  &quot;test@gmail.com&quot;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>config</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git从远程的分支获取最新的版本到本地</title>
    <url>/2018/06/02/git-%E7%AC%94%E8%AE%B0-git%E4%B8%AD%E4%BB%8E%E8%BF%9C%E7%A8%8B%E7%9A%84%E5%88%86%E6%94%AF%E8%8E%B7%E5%8F%96%E6%9C%80%E6%96%B0%E7%9A%84%E7%89%88%E6%9C%AC%E5%88%B0%E6%9C%AC%E5%9C%B0/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="先下载"><a href="#先下载" class="headerlink" title="先下载"></a>先下载</h1><p>git clone URL</p>
<h1 id="切换分支branchName"><a href="#切换分支branchName" class="headerlink" title="切换分支branchName"></a>切换分支branchName</h1><p>git checkout branchName</p>
<h1 id="从远程的origin仓库的master分支下载代码到本地的orgin-branchName"><a href="#从远程的origin仓库的master分支下载代码到本地的orgin-branchName" class="headerlink" title="从远程的origin仓库的master分支下载代码到本地的orgin branchName"></a>从远程的origin仓库的master分支下载代码到本地的orgin branchName</h1><p>git fetch orgin jarSample</p>
<h1 id="强制更新，以远程覆盖本地"><a href="#强制更新，以远程覆盖本地" class="headerlink" title="强制更新，以远程覆盖本地"></a>强制更新，以远程覆盖本地</h1><p>git checkout –force</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git add . 和 git add -u 和 git add -A 的区别</title>
    <url>/2018/05/26/git-%E7%AC%94%E8%AE%B0-git-add-%E5%92%8Cgit-add-u%E5%92%8Cgit-add-A%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>git add . ：他会监控工作区的状态树，使用它会把工作时的所有变化提交到暂存区，包括文件内容修改(modified)以及新文件(new)，但不包括被删除的文件。<br>git add -u ：他仅监控已经被add的文件（即tracked file），他会将被修改的文件提交到暂存区。add -u 不会提交新文件（untracked file）。（git add –update的缩写）<br>git add -A ：是上面两个功能的合集（git add –all的缩写）<br>git add -f App.class ：如果你确实想添加该文件，可以用-f强制添加到Git：（Use -f if you really want to add them.）</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git commit push的时候出现了两个分支</title>
    <url>/2018/05/13/git-%E5%BC%82%E5%B8%B8-Git-commit-push%E7%9A%84%E6%97%B6%E5%80%99%E5%87%BA%E7%8E%B0%E4%BA%86%E4%B8%A4%E4%B8%AA%E5%88%86%E6%94%AF/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Git-commit-push的时候出现了两个分支"><a href="#Git-commit-push的时候出现了两个分支" class="headerlink" title="Git commit push的时候出现了两个分支"></a>Git commit push的时候出现了两个分支</h1><p>git commit之后push，在push的界面发现有两个不同路径的push，如：</p>
<ol>
<li>push : local分支 -&gt; origin/远程分支</li>
<li>push : master -&gt; origin/master<br>其实我的本意是将local分支推送到远程分支，不清楚为什么会出现此种情况</li>
</ol>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><ol>
<li>目前使用的 暴力重推，因为reset不顶用，是直接本地重建仓库</li>
</ol>
<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>-blog/abc/xxx<br>-blog/edf/yyy<br>blog为项目根目录文件夹<br>产生以上情况的原因之一可能是：<br>当blog对应着一个本地分支branchA，且关联了远程分支branchA，<br>如果edf是我们从远程（gitee、gitlab、github等）下载下来的代码，那么在我们删除edf文件夹下的.github文件夹之后，<br>再提交代码推送时，会出现以上情况</p>
<blockquote>
<p>说的很模糊，可以不用纠结产生场景，出现了重置仓库即可（有更合适的方案更好）</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>异常</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Unable to negotiate with 10.207.64.88 port 22: no matching host key type found. Their offer: ssh-rsa</title>
    <url>/2018/05/13/git-%E5%BC%82%E5%B8%B8-20221027-Unable-to-negotiate-with-10-207-64-88-port-22-no-matching-host-key-type-found-Their-offer-ssh-rsa/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>git pull无法拉取代码，提示权限不足</p>
<h1 id="异常信息"><a href="#异常信息" class="headerlink" title="异常信息"></a>异常信息</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">➜  inv-0630 git:(feature-20220906) ✗ git pull</span><br><span class="line">Unable to negotiate with 10.207.64.99 port 22: no matching host key type found. Their offer: ssh-rsa</span><br><span class="line">fatal: Could not read from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br></pre></td></tr></table></figure>
<h1 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h1><ol>
<li>找到 id_rsa.pub 所在文件夹<br>/Users/diabolo/.ssh/<br>或 查看本地是否存在SSH密钥<br>命令：ls -al ~/.ssh<br>1.1 若没有 id_rsa.pub 的话，则生产密钥<br>命令：ssh-keygen -t rsa -C “自己的Email地址”<br>注意：执行完成后会有一些列提示输入密码的指令，直接回车即可</li>
<li>创建文件 config，没有后缀的文件<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Host *</span><br><span class="line">HostkeyAlgorithms +ssh-rsa</span><br><span class="line">PubkeyAcceptedKeyTypes +ssh-rsa</span><br></pre></td></tr></table></figure></li>
<li>再执行 git pull 可以正常拉代码</li>
</ol>
<blockquote>
<p>mac 显示/隐藏文件夹： command + shift + .</p>
</blockquote>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>异常</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git操作ssh和https切换</title>
    <url>/2018/02/14/git-config-git%E6%93%8D%E4%BD%9Cssh%E5%92%8Chttps%E5%88%87%E6%8D%A2/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ol>
<li><p>从ssh切换至https<br> git remote set-url origin(远程仓库名称) <a href="https://email/username/ProjectName.git" target="_blank" rel="noopener">https://email/username/ProjectName.git</a></p>
</li>
<li><p>从https切换至ssh<br> git remote set-url origin git@email:username/ProjectName.git</p>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>config</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git配置全局和独立仓库的username和email配置</title>
    <url>/2018/02/13/git-config-Git%E9%85%8D%E7%BD%AE%E5%85%A8%E5%B1%80%E5%92%8C%E7%8B%AC%E7%AB%8B%E4%BB%93%E5%BA%93%E7%9A%84username%E5%92%8Cemail%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>Git配置全局和独立仓库的username和email配置：<a href="https://blog.csdn.net/u012733059/article/details/50804374?utm_source=blogxgwz4" target="_blank" rel="noopener">https://blog.csdn.net/u012733059/article/details/50804374?utm_source=blogxgwz4</a></strong></li>
</ul>
<hr>
<p>估计很多新手开始使用git的时候都会配置一个全局的用户名和邮箱以便减少每建一个repository就要配置一次用户名和邮箱的麻烦，配置如下：<br>$ git config –global user.name ‘gitname’<br>$ git config –global user.email ‘github@xx.com’</p>
<p>如果你公司的项目是放在公司的github上面, 如果你不进行配置用户名和邮箱的话, 则默认会使用全局的, 这个时候就错误了, 正确的做法是针对公司的项目, 在公司项目的根目录下进行单独配置，配置如下：<br>$ git config user.name ‘gitname’<br>$ git config user.email ‘github@xx.com’</p>
<p>PS：最后可以使用git config –list 来查看当前配置，如果你在项目根目录下查看则是全局配置+当前项目的配置，如果只想查看全局配置的话可以在repository外输入此命令。使用的时候就是就近原则，优先使用当前目录下的配置。</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>config</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git中查看和设置用户名、密码</title>
    <url>/2018/02/13/git-config-git%E4%B8%AD%E6%9F%A5%E7%9C%8B%E5%92%8C%E8%AE%BE%E7%BD%AE-%E7%94%A8%E6%88%B7%E5%90%8D%E3%80%81%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ol>
<li><p>用户名和邮箱地址的作用<br>用户名和邮箱地址是本地git客户端的一个变量，不随git库而改变。<br>每次commit都会用用户名和邮箱纪录。<br>github的contributions统计就是按邮箱来统计的。</p>
</li>
<li><p>修改密码<br>git config –global credential.helper store (输入这个命令后,以后只要在输入一次用户名密码)</p>
</li>
<li><p>查看用户名和邮箱地址：<br>1| $ git config user.name<br>|<br>2| $ git config user.email</p>
</li>
<li><p>修改用户名和邮箱地址：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name &quot;username&quot;</span><br><span class="line"> </span><br><span class="line">$ git config --global user.email &quot;email&quot;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>config</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git生成SSH公钥</title>
    <url>/2018/02/13/git-config-git%E7%94%9F%E6%88%90-SSH-%E5%85%AC%E9%92%A5/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>生成 SSH 公钥：<a href="https://git-scm.com/book/zh/v2/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E7%94%9F%E6%88%90-SSH-%E5%85%AC%E9%92%A5" target="_blank" rel="noopener">https://git-scm.com/book/zh/v2/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E7%94%9F%E6%88%90-SSH-%E5%85%AC%E9%92%A5</a></strong></li>
</ul>
<hr>
<p>如前所述，许多 Git 服务器都使用 SSH 公钥进行认证。 为了向 Git 服务器提供 SSH 公钥，如果某系统用户尚未拥有密钥，必须事先为其生成一份。<br>这个过程在所有操作系统上都是相似的。 首先，你需要确认自己是否已经拥有密钥。 默认情况下，用户的 SSH 密钥存储在其 ~/.ssh 目录下。<br>进入该目录并列出其中内容，你便可以快速确认自己是否已拥有密钥：</p>
<p>$ cd ~/.ssh<br>$ ls<br>authorized_keys2  id_dsa       known_hosts<br>config            id_dsa.pub<br>我们需要寻找一对以 id_dsa 或 id_rsa 命名的文件，其中一个带有 .pub 扩展名。 .pub 文件是你的公钥，另一个则是与之对应的私钥。 如果找不到这样的文件（或者根本没有 .ssh 目录），你可以通过运行 ssh-keygen 程序来创建它们。 在 Linux/macOS 系统中，ssh-keygen 随 SSH 软件包提供；在 Windows 上，该程序包含于 MSysGit 软件包中。</p>
<p>$ ssh-keygen -o<br>Generating public/private rsa key pair.<br>Enter file in which to save the key (/home/schacon/.ssh/id_rsa):<br>Created directory ‘/home/schacon/.ssh’.<br>Enter passphrase (empty for no passphrase):<br>Enter same passphrase again:<br>Your identification has been saved in /home/schacon/.ssh/id_rsa.<br>Your public key has been saved in /home/schacon/.ssh/id_rsa.pub.<br>The key fingerprint is:<br>d0:82:24:8e:d7:f1:bb:9b:33:53:96:93:49:da:9b:e3 schacon@mylaptop.local<br>首先 ssh-keygen 会确认密钥的存储位置（默认是 .ssh/id_rsa），然后它会要求你输入两次密钥口令。 如果你不想在使用密钥时输入口令，将其留空即可。 然而，如果你使用了密码，那么请确保添加了 -o 选项，它会以比默认格式更能抗暴力破解的格式保存私钥。 你也可以用 ssh-agent 工具来避免每次都要输入密码。</p>
<p>现在，进行了上述操作的用户需要将各自的公钥发送给任意一个 Git 服务器管理员 （假设服务器正在使用基于公钥的 SSH 验证设置）。 他们所要做的就是复制各自的 .pub 文件内容，并将其通过邮件发送。 公钥看起来是这样的：</p>
<p>$ cat ~/.ssh/id_rsa.pub<br>ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAklOUpkDHrfHY17SbrmTIpNLTGK9Tjom/BWDSU<br>GPl+nafzlHDTYW7hdI4yZ5ew18JH4JW9jbhUFrviQzM7xlELEVf4h9lFX5QVkbPppSwg0cda3<br>Pbv7kOdJ/MTyBlWXFCR+HAo3FXRitBqxiX1nKhXpHAZsMciLq8V6RjsNAQwdsdMFvSlVK/7XA<br>t3FaoJoAsncM1Q9x5+3V0Ww68/eIFmb1zuUFljQJKprrX88XypNDvjYNby6vw/Pb0rwert/En<br>mZ+AW4OZPnTPI89ZPmVMLuayrD2cE86Z/il8b+gw3r3+1nKatmIkjn2so1d01QraTlMqVSsbx<br>NrRFi9wrf+M7Q== schacon@mylaptop.local<br>关于在多种操作系统中生成 SSH 密钥的更深入教程，请参阅 GitHub 的 SSH 密钥指南 <a href="https://help.github.com/articles/generating-ssh-keys。" target="_blank" rel="noopener">https://help.github.com/articles/generating-ssh-keys。</a></p>
<h1 id="除了ssh-keygen-o"><a href="#除了ssh-keygen-o" class="headerlink" title="除了ssh-keygen -o"></a>除了ssh-keygen -o</h1><p>也可以使用指定邮箱配置公私密钥，如：<br>sshsshssh–    -keygenkeygenkeygen   —ttt   rsarsarsa   —CCC   ‘xxx@xxx.com’’xxx@xxx.com’’xxx@xxx.com’       然后一路回车然后一路回车然后一路回车    (((—CCC   参数是以下提供的邮箱地址参数是以下提供的邮箱地址参数是以下提供的邮箱地址    )))</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>config</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git搭建多仓库配置</title>
    <url>/2018/02/13/git-config-git%E6%90%AD%E5%BB%BA%E5%A4%9A%E4%BB%93%E5%BA%93%E5%9C%B0%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>Windows配置多个git用户：<a href="https://www.cnblogs.com/zengming/p/7908171.html" target="_blank" rel="noopener">https://www.cnblogs.com/zengming/p/7908171.html</a></strong></li>
<li><strong>Git之同一台电脑连接多个远程仓库：<a href="https://blog.csdn.net/ManyPeng/article/details/77012468r" target="_blank" rel="noopener">https://blog.csdn.net/ManyPeng/article/details/77012468r</a></strong></li>
</ul>
<hr>
<p>#两个仓库地址分别为：<br>git@github.com:YaleZhangdy/spring-practing.git<br>ssh://git@gitlab.ch-ins.com.cn:13022/group/writeoff_grp/ch-writeoff.git</p>
<p>1.检查本机是否有ssh key设置,切换到.ssh目录<br>$ cd ~/.ssh 或cd .ssh<br>如果有 id_rsa 和 id_rsa.pub，说明已存在一对密钥/公钥。</p>
<p>2.创建新的 密钥/公钥，并指定密钥名称，比如id_rsa_x（x为任意名称）<br>注：生成id_rsa私钥公钥时需要命不同文件名，密码可设可不设。<br>ssh-keygen -t rsa -f ~/.ssh/id_rsa_x -C “zhangdaiyin.cool@163.com”<br>操作完成后，该目录会多出 id_rsa_x 和 id_rsa_x.pub 两个文件。</p>
<p>3.添加ssh key到对应的GitHub,GitLab上面<br>登录GitHub系统；点击右上角账号头像的“▼”→Settings→SSH keys→Add SSH key。<br>复制id_rsa.pub的公钥内容到Key填写框内。</p>
<p>4.在 ~/.ssh/ 文件夹下创建一个 config 文件<br>$ touch config<br>$ vim config</p>
<p>5.在.ssh下面建立配置文件，文件名为config的文件且不需要添加文件后缀。<br>config文件配置内容：</p>
<h1 id="第一个账号，默认使用的账号"><a href="#第一个账号，默认使用的账号" class="headerlink" title="第一个账号，默认使用的账号"></a>第一个账号，默认使用的账号</h1><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">Host gitlab.ch-ins.com.cn</span><br><span class="line">HostName gitlab.ch-ins.com.cn</span><br><span class="line">User git</span><br><span class="line">Port 13022</span><br><span class="line"><span class="meta">#</span><span class="bash">PreferredAuthentications　　　 配置登录时用什么权限认证--可设为publickey,password publickey,keyboard-interactive等</span></span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure>
<h1 id="第二个账号"><a href="#第二个账号" class="headerlink" title="第二个账号"></a>第二个账号</h1><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">Host github.com  # second为前缀名，可以任意设置</span><br><span class="line">HostName github.com</span><br><span class="line">User YaleZhangdy</span><br><span class="line">Port 22</span><br><span class="line"><span class="meta">#</span><span class="bash">PreferredAuthentications　　　 配置登录时用什么权限认证--可设为publickey,password publickey,keyboard-interactive等</span></span><br><span class="line">IdentityFile ~/.ssh/id_rsa_x</span><br></pre></td></tr></table></figure>
<p>参数描述：<br>HostName 　　　　　　　 　　真实的域名地址<br>IdentityFile 　　　　　　　 　　id_rsa的地址<br>PreferredAuthentications　　　 配置登录时用什么权限认证–可设为publickey,password publickey,keyboard-interactive等<br>User 　　　　　　　　　　　    配置使用用户名</p>
<h1 id="可以通过-ssh-add-l-来确私钥列表-是L，不是1"><a href="#可以通过-ssh-add-l-来确私钥列表-是L，不是1" class="headerlink" title="可以通过 ssh-add -l 来确私钥列表 是L，不是1"></a>可以通过 ssh-add -l 来确私钥列表 是L，不是1</h1><p>$ ssh-add -l</p>
<h1 id="可以通过-ssh-add-D-来清空私钥列表"><a href="#可以通过-ssh-add-D-来清空私钥列表" class="headerlink" title="可以通过 ssh-add -D 来清空私钥列表"></a>可以通过 ssh-add -D 来清空私钥列表</h1><p>$ ssh-add -D</p>
<p>6.查看SSH 密钥的值（完全复制），分别添加到对应的 GitHub 账户中<br>$ cat id_rsa.pub<br>$ cat id_rsa_x.pub<br>把这两个值分别 copy 到 GitHub 账号中的 SSH keys 中保存。</p>
<p>7.清空本地的 SSH 缓存，添加新的 SSH 密钥 到 SSH agent中<br>$ ssh-add -D<br>$ ssh-add id_rsa<br>$ ssh-add id_rsa_x<br>最后确认一下新密钥已经添加成功<br>ssh-add -l<br>$ ssh-add -l<br>2048 SHA256:md2u3nKLoLLB7vNWfeTDZzIZe1yCY4LjUibHQ3rquGE id_rsa (RSA)<br>2048 SHA256:SjHLErsOjuDEUpnZM9QRdKslCp1xsrE5vgkeFuRTGoQ id_rsa_x (RSA)</p>
<p>8.测试 ssh 链接<br>$ ssh -T git@gitlab.ch-ins.com.cn<br>Welcome to GitLab, @blank113!<br>$ ssh -T git@github.com<br>Hi YaleZhangdy! You’ve successfully authenticated, but GitHub does not provide shell access.</p>
<p>9.若执行ssh-add /path/to/xxx.pem是出现这个错误:Could not open a connection to your authentication agent，<br>则先执行如下命令即可：（来源：<a href="https://www.cnblogs.com/sheldonxu/archive/2012/09/17/2688281.html）" target="_blank" rel="noopener">https://www.cnblogs.com/sheldonxu/archive/2012/09/17/2688281.html）</a><br>ssh-agent bash</p>
<p>10.取消 git 全局用户名/邮箱的设置，设置独立的 用户名/邮箱</p>
<h1 id="取消全局-用户名-邮箱-配置"><a href="#取消全局-用户名-邮箱-配置" class="headerlink" title="取消全局 用户名/邮箱 配置"></a>取消全局 用户名/邮箱 配置</h1><p>$ git config –global –unset user.name<br>$ git config –global –unset user.email</p>
<h1 id="进入项目文件夹（git-clone项目之后的文件夹），单独设置每个repo-用户名-邮箱"><a href="#进入项目文件夹（git-clone项目之后的文件夹），单独设置每个repo-用户名-邮箱" class="headerlink" title="进入项目文件夹（git clone项目之后的文件夹），单独设置每个repo 用户名/邮箱"></a>进入项目文件夹（git clone项目之后的文件夹），单独设置每个repo 用户名/邮箱</h1><p>$ git config user.email “xxxx@xx.com”<br>$ git config user.name “xxxx”</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>config</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git环境搭建和密钥生成</title>
    <url>/2018/02/13/git-config-git%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-%E5%AF%86%E9%92%A5%E7%94%9F%E6%88%90/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>2、Git配置<br>（1）、环境变量配置 如git安装路径C:\Program Files\Git<br>GIT_HOME=C:\Program Files\Git<br>PATH=C:\Program Files\Git\bin;C:\Program Files\Git\usr\bin<br>（2）、git配置用户名和邮箱<br>设置Git的user name和email：（如果需要配置多git仓库地址，则此处不能使用–global，在各项目中设置: git config user.name “）<br>$ git config –global user.name “xxx”<br>$ git config –global user.email “xxx@xxx.com”<br>（3）、生成SSH公钥过程：cmd:C:\Users\xxxxx<br>$ ssh-keygen -t rsa -C “xxx@xxx.com”<br> 过程如下：<br>img: img/git-genkey.jpg</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>config</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>《剑指offer》刷题笔记系列</title>
    <url>/2017/12/01/offer-0/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<ul>
<li><strong>刷题平台：<a href="https://www.nowcoder.com/" target="_blank" rel="noopener">https://www.nowcoder.com/</a></strong></li>
<li><strong>题&emsp;&emsp;库：剑指offer</strong></li>
<li><strong>编&emsp;&emsp;者：…</strong></li>
</ul>
<hr>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h2 id="赋值运算符函数"><a href="#赋值运算符函数" class="headerlink" title="赋值运算符函数"></a>赋值运算符函数</h2><p>&emsp;&emsp;如下为类型CMyString的生命，请为该类型添加赋值运算符函数。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CMyString</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    CMyString(<span class="keyword">char</span>* pData = <span class="literal">NULL</span>);</span><br><span class="line">    CMyString(<span class="keyword">char</span>* CMyString&amp; str);</span><br><span class="line">    ~CMyString(<span class="keyword">void</span>);</span><br><span class="line">    </span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">char</span>* m_pData;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CMyString</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    CMyString(<span class="keyword">char</span>* pData = <span class="literal">NULL</span>);</span><br><span class="line">    CMyString(<span class="keyword">char</span>* CMyString&amp; str);</span><br><span class="line">    ~CMyString(<span class="keyword">void</span>);</span><br><span class="line">    </span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">char</span>* m_pData;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="考察细节"><a href="#考察细节" class="headerlink" title="考察细节"></a>考察细节</h3><ul>
<li>1</li>
<li>2</li>
<li>3</li>
</ul>
<h3 id="经典的解法"><a href="#经典的解法" class="headerlink" title="经典的解法"></a>经典的解法</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">CMyString&amp; CMyString::<span class="keyword">operator</span> = (<span class="keyword">const</span> CMyString &amp;str)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span> == &amp;str)</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">delete</span> []m_pData;</span><br><span class="line">    m_pData = <span class="literal">NULL</span>;</span><br><span class="line">    m_pData = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="built_in">strlen</span>(str.m_pData) + <span class="number">1</span>];</span><br><span class="line">    <span class="built_in">strcpy</span>(m_pData, str.m_pData);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;这是一般教材上提供的参考代码。</p>
<h3 id="考虑异常安全性的解法"><a href="#考虑异常安全性的解法" class="headerlink" title="考虑异常安全性的解法"></a>考虑异常安全性的解法</h3><p>&emsp;&emsp;要想在赋值运算符函数中实现异常安全性，一般有两种方法。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">CMyString&amp; CMyString::<span class="keyword">operator</span> = (<span class="keyword">const</span> CMyString &amp;str)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span> != &amp;str)</span><br><span class="line">    &#123;</span><br><span class="line">        CMyString strTemp(str);</span><br><span class="line">        </span><br><span class="line">        cahr* pTemp = strTemp.m_pData;</span><br><span class="line">        strTemp.m_pData = m_pData;</span><br><span class="line">        m_pData = pTemp;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;程序比较简单，值得注意的是，strTemp是一个局部变量，程序运行到if的外面的时候，也就出了该变量的作用域，就会自动调用其析构函数，把strTemp.m_pData所指向的内存释放掉。由于strTemp.m_pData指向的内存就是实例之前m_pData的内存，这就相当于自动调用析构函数释放实例的内存。</p>
<p><strong><font color="red" size=3 face="仿宋">系列教程持续发布中，欢迎订阅、关注、收藏、评论、点赞哦～～(￣▽￣～)～</font></strong></p>
<p><strong><font color="red" size=3 face="仿宋">完的汪(∪｡∪)｡｡｡zzz</font></strong></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>AtOffer</category>
      </categories>
      <tags>
        <tag>AtOffer</tag>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>git克隆、更新、提交</title>
    <url>/2017/07/02/git-%E7%AC%94%E8%AE%B0-git%E5%85%8B%E9%9A%86%E3%80%81%E6%9B%B4%E6%96%B0%E3%80%81%E6%8F%90%E4%BA%A4/</url>
    <content><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="克隆"><a href="#克隆" class="headerlink" title="克隆"></a>克隆</h1><p>git clone</p>
<h2 id="可以直接克隆分支"><a href="#可以直接克隆分支" class="headerlink" title="可以直接克隆分支"></a>可以直接克隆分支</h2><ol>
<li>git clone git地址 分支号<br>如：git clone git@git.ch-ins.com.cn:xx/xx.git branchName</li>
<li>git clone -b 分支号 git地址<br>如：git clone -b branchName git@git.ch-ins.com.cn:xx/xx.git <h2 id="先克隆主干，再切到分支"><a href="#先克隆主干，再切到分支" class="headerlink" title="先克隆主干，再切到分支"></a>先克隆主干，再切到分支</h2></li>
<li>git clone 主干地址</li>
<li>查看主干与分支名，git分支跟踪关系<br>git branch -a<br><img src="img/git_help_01.jpg" alt="avatar"></li>
<li>切换到分支，一般切换过去自动更新代码，如果不放心，可以再pull<br>git checkout branchName</li>
</ol>
<h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><h2 id="git-pull、git-fetch"><a href="#git-pull、git-fetch" class="headerlink" title="git pull、git fetch"></a>git pull、git fetch</h2><ol>
<li>git pull ，默认是 git pull -merge  更新后自动合并，且合并后会产生额外的commit</li>
<li>git pull –rebase是以rebase的形式获取合并分支，不会产生额外的commit</li>
<li>git fetch ， 只获取，需手动合并</li>
</ol>
<h1 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h1><p>git add  、 git commit、git push</p>
<ol>
<li>通常情况下先使用git status查看未提交代码<br>可以使用git add . 追加所有未提交文件，或者使用git add 文件  追加指定文件</li>
<li>提交追加文件到本地仓库<br>git commit -m “注释”  </li>
<li>git push提交远程仓库</li>
<li>git commit –amend 撤销</li>
</ol>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>git</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
</search>
